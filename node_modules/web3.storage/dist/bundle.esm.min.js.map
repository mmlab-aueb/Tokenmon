{"version":3,"file":"bundle.esm.min.js","sources":["../../../node_modules/streaming-iterables/dist/index.mjs","../../../node_modules/retry/lib/retry_operation.js","../../../node_modules/retry/lib/retry.js","../../../node_modules/retry/index.js","../../../node_modules/p-retry/index.js","../../../node_modules/it-last/index.js","../../../node_modules/it-pipe/index.js","../../../node_modules/varint/encode.js","../../../node_modules/varint/decode.js","../../../node_modules/varint/length.js","../../../node_modules/varint/index.js","../../../node_modules/multiformats/esm/vendor/varint.js","../../../node_modules/multiformats/esm/src/varint.js","../../../node_modules/multiformats/esm/src/bytes.js","../../../node_modules/multiformats/esm/src/hashes/digest.js","../../../node_modules/multiformats/esm/vendor/base-x.js","../../../node_modules/multiformats/esm/src/bases/base.js","../../../node_modules/multiformats/esm/src/bases/base58.js","../../../node_modules/multiformats/esm/src/bases/base32.js","../../../node_modules/multiformats/esm/src/cid.js","../../../node_modules/cborg/esm/lib/is.js","../../../node_modules/cborg/esm/lib/token.js","../../../node_modules/cborg/esm/lib/byte-utils.js","../../../node_modules/cborg/esm/lib/bl.js","../../../node_modules/cborg/esm/lib/common.js","../../../node_modules/cborg/esm/lib/0uint.js","../../../node_modules/cborg/esm/lib/1negint.js","../../../node_modules/cborg/esm/lib/2bytes.js","../../../node_modules/cborg/esm/lib/3string.js","../../../node_modules/cborg/esm/lib/4array.js","../../../node_modules/cborg/esm/lib/5map.js","../../../node_modules/cborg/esm/lib/6tag.js","../../../node_modules/cborg/esm/lib/7float.js","../../../node_modules/cborg/esm/lib/jump.js","../../../node_modules/cborg/esm/lib/encode.js","../../../node_modules/cborg/esm/lib/decode.js","../../../node_modules/@ipld/dag-cbor/esm/index.js","../../../node_modules/@ipld/car/esm/lib/decoder.js","../../../node_modules/@ipld/car/esm/lib/reader-browser.js","../../../node_modules/@ipld/car/esm/lib/iterator.js","../../../node_modules/@ipld/car/esm/lib/encoder.js","../../../node_modules/@ipld/car/esm/lib/iterator-channel.js","../../../node_modules/@ipld/car/esm/lib/writer-browser.js","../../../node_modules/it-batch/index.js","../../../node_modules/it-parallel-batch/index.js","../../../node_modules/is-plain-obj/index.js","../../../node_modules/merge-options/index.js","../../../node_modules/multiformats/esm/src/hashes/hasher.js","../../../node_modules/multiformats/esm/src/hashes/sha2-browser.js","../../../node_modules/murmurhash3js-revisited/lib/murmurHash3js.js","../../../node_modules/murmurhash3js-revisited/index.js","../../../node_modules/@multiformats/murmur3/esm/index.js","../../../node_modules/ipfs-unixfs-importer/esm/src/options.js","../../../node_modules/ipfs-unixfs-importer/esm/src/index.js","../../../node_modules/err-code/index.js","../../../node_modules/multiformats/esm/src/bases/identity.js","../../../node_modules/multiformats/esm/src/bases/base2.js","../../../node_modules/multiformats/esm/src/bases/base8.js","../../../node_modules/multiformats/esm/src/bases/base10.js","../../../node_modules/multiformats/esm/src/bases/base16.js","../../../node_modules/multiformats/esm/src/bases/base36.js","../../../node_modules/multiformats/esm/src/bases/base64.js","../../../node_modules/multiformats/esm/src/hashes/identity.js","../../../node_modules/multiformats/esm/src/codecs/raw.js","../../../node_modules/multiformats/esm/src/basics.js","../../../node_modules/uint8arrays/esm/src/util/bases.js","../../../node_modules/uint8arrays/esm/src/from-string.js","../../../node_modules/browser-readablestream-to-it/index.js","../../../node_modules/blob-to-it/index.js","../../../node_modules/it-peekable/index.js","../../../node_modules/it-all/index.js","../../../node_modules/it-map/index.js","../../../node_modules/ipfs-core-utils/src/files/normalise-input/utils.js","../../../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.js","../../../node_modules/@protobufjs/aspromise/index.js","../../../node_modules/@protobufjs/base64/index.js","../../../node_modules/@protobufjs/eventemitter/index.js","../../../node_modules/@protobufjs/float/index.js","../../../node_modules/@protobufjs/inquire/index.js","../../../node_modules/@protobufjs/utf8/index.js","../../../node_modules/@protobufjs/pool/index.js","../../../node_modules/protobufjs/src/util/longbits.js","../../../node_modules/protobufjs/src/util/minimal.js","../../../node_modules/protobufjs/src/writer.js","../../../node_modules/protobufjs/src/writer_buffer.js","../../../node_modules/protobufjs/src/reader.js","../../../node_modules/protobufjs/src/reader_buffer.js","../../../node_modules/protobufjs/src/rpc/service.js","../../../node_modules/protobufjs/src/rpc.js","../../../node_modules/protobufjs/src/roots.js","../../../node_modules/protobufjs/src/index-minimal.js","../../../node_modules/protobufjs/minimal.js","../../../node_modules/ipfs-unixfs/esm/src/unixfs.js","../../../node_modules/ipfs-unixfs/esm/src/index.js","../../../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-input.js","../../../node_modules/ipfs-core-utils/src/files/normalise-input/index.js","../../../node_modules/it-drain/index.js","../../../node_modules/it-filter/index.js","../../../node_modules/it-take/index.js","../../../node_modules/interface-blockstore/src/adapter.js","../../../node_modules/interface-blockstore/src/errors.js","../../../node_modules/interface-blockstore/src/memory.js","../../../node_modules/interface-blockstore/src/index.js","../../../node_modules/ipfs-car/dist/esm/blockstore/memory.js","../../../node_modules/ipfs-car/dist/esm/pack/constants.js","../../../node_modules/ipfs-car/dist/esm/pack/index.js","../../../node_modules/xtend/immutable.js","../../../node_modules/parse-link-header/index.js","../../../node_modules/@ipld/dag-pb/esm/src/pb-decode.js","../../../node_modules/@ipld/dag-pb/esm/src/pb-encode.js","../../../node_modules/@ipld/dag-pb/esm/src/util.js","../../../node_modules/@ipld/dag-pb/esm/src/index.js","../../../node_modules/sparse-array/index.js","../../../node_modules/hamt-sharding/src/bucket.js","../../../node_modules/hamt-sharding/src/consumable-buffer.js","../../../node_modules/uint8arrays/esm/src/concat.js","../../../node_modules/hamt-sharding/src/consumable-hash.js","../../../node_modules/hamt-sharding/src/index.js","../../../node_modules/ipfs-unixfs-exporter/esm/src/utils/find-cid-in-shard.js","../../../node_modules/ipfs-unixfs-exporter/esm/src/utils/extract-data-from-block.js","../../../node_modules/ipfs-unixfs-exporter/esm/src/utils/validate-offset-and-length.js","../../../node_modules/ipfs-unixfs-exporter/esm/src/resolvers/unixfs-v1/content/file.js","../../../node_modules/ipfs-unixfs-exporter/esm/src/resolvers/unixfs-v1/content/directory.js","../../../node_modules/ipfs-unixfs-exporter/esm/src/resolvers/unixfs-v1/content/hamt-sharded-directory.js","../../../node_modules/ipfs-unixfs-exporter/esm/src/resolvers/unixfs-v1/index.js","../../../node_modules/ipfs-unixfs-exporter/esm/src/resolvers/raw.js","../../../node_modules/ipfs-unixfs-exporter/esm/src/resolvers/dag-cbor.js","../../../node_modules/ipfs-unixfs-exporter/esm/src/resolvers/identity.js","../../../node_modules/ipfs-unixfs-exporter/esm/src/resolvers/index.js","../../../node_modules/ipfs-unixfs-exporter/esm/src/index.js","../../../node_modules/uint8arrays/esm/src/equals.js","../../../node_modules/ipfs-car/dist/esm/unpack/utils/verifying-get-only-blockstore.js","../../../node_modules/ipfs-car/dist/esm/unpack/index.js","../../../node_modules/multiformats/esm/src/block.js","../../../node_modules/carbites/esm/lib/treewalk/splitter.js","../../../node_modules/files-from-path/esm/src/index.browser.js","../src/platform.web.js","../src/lib.js","../../../node_modules/ipfs-unixfs-importer/esm/src/utils/persist.js","../../../node_modules/ipfs-unixfs-importer/esm/src/dag-builder/dir.js","../../../node_modules/ipfs-unixfs-importer/esm/src/dag-builder/file/flat.js","../../../node_modules/ipfs-unixfs-importer/esm/src/dag-builder/file/balanced.js","../../../node_modules/ipfs-unixfs-importer/esm/src/dag-builder/file/trickle.js","../../../node_modules/ipfs-unixfs-importer/esm/src/dag-builder/file/index.js","../../../node_modules/ipfs-unixfs-importer/esm/src/dag-builder/index.js","../../../node_modules/ipfs-unixfs-importer/esm/src/dir.js","../../../node_modules/ipfs-unixfs-importer/esm/src/dir-flat.js","../../../node_modules/ipfs-unixfs-importer/esm/src/dir-sharded.js","../../../node_modules/ipfs-unixfs-importer/esm/src/flat-to-shard.js","../../../node_modules/ipfs-unixfs-importer/esm/src/utils/to-path-components.js","../../../node_modules/ipfs-unixfs-importer/esm/src/tree-builder.js","../../../node_modules/ipfs-unixfs-importer/esm/src/dag-builder/file/buffer-importer.js","../../../node_modules/bl/BufferList.js","../../../node_modules/rabin-wasm/src/rabin.js","../../../node_modules/@assemblyscript/loader/index.js","../../../node_modules/rabin-wasm/dist/rabin-wasm.js","../../../node_modules/rabin-wasm/src/index.js","../../../node_modules/ipfs-unixfs-importer/esm/src/chunker/rabin.js","../../../node_modules/ipfs-unixfs-importer/esm/src/chunker/fixed-size.js","../../../node_modules/ipfs-unixfs-importer/esm/src/dag-builder/validate-chunks.js"],"sourcesContent":["async function* _batch(size, iterable) {\n    let dataBatch = [];\n    for await (const data of iterable) {\n        dataBatch.push(data);\n        if (dataBatch.length === size) {\n            yield dataBatch;\n            dataBatch = [];\n        }\n    }\n    if (dataBatch.length > 0) {\n        yield dataBatch;\n    }\n}\nfunction* _syncBatch(size, iterable) {\n    let dataBatch = [];\n    for (const data of iterable) {\n        dataBatch.push(data);\n        if (dataBatch.length === size) {\n            yield dataBatch;\n            dataBatch = [];\n        }\n    }\n    if (dataBatch.length > 0) {\n        yield dataBatch;\n    }\n}\nfunction batch(size, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => batch(size, curriedIterable);\n    }\n    if (iterable[Symbol.asyncIterator]) {\n        return _batch(size, iterable);\n    }\n    return _syncBatch(size, iterable);\n}\n\nfunction getIterator(iterable) {\n    if (typeof iterable.next === 'function') {\n        return iterable;\n    }\n    if (typeof iterable[Symbol.iterator] === 'function') {\n        return iterable[Symbol.iterator]();\n    }\n    if (typeof iterable[Symbol.asyncIterator] === 'function') {\n        return iterable[Symbol.asyncIterator]();\n    }\n    throw new TypeError('\"values\" does not to conform to any of the iterator or iterable protocols');\n}\n\nfunction defer() {\n    let reject;\n    let resolve;\n    const promise = new Promise((resolveFunc, rejectFunc) => {\n        resolve = resolveFunc;\n        reject = rejectFunc;\n    });\n    return {\n        promise,\n        reject,\n        resolve,\n    };\n}\n\n/// <reference lib=\"esnext.asynciterable\" />\nfunction _buffer(size, iterable) {\n    const iterator = getIterator(iterable);\n    const resultQueue = [];\n    const readQueue = [];\n    let reading = false;\n    let ended = false;\n    function fulfillReadQueue() {\n        while (readQueue.length > 0 && resultQueue.length > 0) {\n            const readDeferred = readQueue.shift();\n            const { error, value } = resultQueue.shift();\n            if (error) {\n                readDeferred.reject(error);\n            }\n            else {\n                readDeferred.resolve({ done: false, value });\n            }\n        }\n        while (readQueue.length > 0 && ended) {\n            const { resolve } = readQueue.shift();\n            resolve({ done: true, value: undefined });\n        }\n    }\n    async function fillQueue() {\n        if (ended) {\n            return;\n        }\n        if (reading) {\n            return;\n        }\n        if (resultQueue.length >= size) {\n            return;\n        }\n        reading = true;\n        try {\n            const { done, value } = await iterator.next();\n            if (done) {\n                ended = true;\n            }\n            else {\n                resultQueue.push({ value });\n            }\n        }\n        catch (error) {\n            ended = true;\n            resultQueue.push({ error });\n        }\n        fulfillReadQueue();\n        reading = false;\n        fillQueue();\n    }\n    async function next() {\n        if (resultQueue.length > 0) {\n            const { error, value } = resultQueue.shift();\n            if (error) {\n                throw error;\n            }\n            fillQueue();\n            return { done: false, value };\n        }\n        if (ended) {\n            return { done: true, value: undefined }; // stupid ts\n        }\n        const deferred = defer();\n        readQueue.push(deferred);\n        fillQueue();\n        return deferred.promise;\n    }\n    const asyncIterableIterator = {\n        next,\n        [Symbol.asyncIterator]: () => asyncIterableIterator,\n    };\n    return asyncIterableIterator;\n}\nfunction* syncBuffer(size, iterable) {\n    const valueQueue = [];\n    let e;\n    try {\n        for (const value of iterable) {\n            valueQueue.push(value);\n            if (valueQueue.length <= size) {\n                continue;\n            }\n            yield valueQueue.shift();\n        }\n    }\n    catch (error) {\n        e = error;\n    }\n    for (const value of valueQueue) {\n        yield value;\n    }\n    if (e) {\n        throw e;\n    }\n}\nfunction buffer(size, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => buffer(size, curriedIterable);\n    }\n    if (size === 0) {\n        return iterable;\n    }\n    if (iterable[Symbol.asyncIterator]) {\n        return _buffer(size, iterable);\n    }\n    return syncBuffer(size, iterable);\n}\n\nasync function _collect(iterable) {\n    const values = [];\n    for await (const value of iterable) {\n        values.push(value);\n    }\n    return values;\n}\nfunction collect(iterable) {\n    if (iterable[Symbol.asyncIterator]) {\n        return _collect(iterable);\n    }\n    return Array.from(iterable);\n}\n\nasync function* _concat(iterables) {\n    for await (const iterable of iterables) {\n        yield* iterable;\n    }\n}\nfunction* _syncConcat(iterables) {\n    for (const iterable of iterables) {\n        yield* iterable;\n    }\n}\nfunction concat(...iterables) {\n    const hasAnyAsync = iterables.find(itr => itr[Symbol.asyncIterator] !== undefined);\n    if (hasAnyAsync) {\n        return _concat(iterables);\n    }\n    else {\n        return _syncConcat(iterables);\n    }\n}\n\nasync function _consume(iterable) {\n    for await (const val of iterable) {\n        // do nothing\n    }\n}\nfunction consume(iterable) {\n    if (iterable[Symbol.asyncIterator]) {\n        return _consume(iterable);\n    }\n    for (const val of iterable) {\n        // do nothing\n    }\n}\n\nasync function* _filter(filterFunc, iterable) {\n    for await (const data of iterable) {\n        if (await filterFunc(data)) {\n            yield data;\n        }\n    }\n}\nfunction filter(filterFunc, iterable) {\n    if (iterable === undefined) {\n        return (curriedIterable) => _filter(filterFunc, curriedIterable);\n    }\n    return _filter(filterFunc, iterable);\n}\n\nasync function* flatten(iterable) {\n    for await (const maybeItr of iterable) {\n        if (maybeItr && typeof maybeItr !== 'string' && (maybeItr[Symbol.iterator] || maybeItr[Symbol.asyncIterator])) {\n            yield* flatten(maybeItr);\n        }\n        else {\n            yield maybeItr;\n        }\n    }\n}\n\nasync function* _map(func, iterable) {\n    for await (const val of iterable) {\n        yield await func(val);\n    }\n}\nfunction map(func, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => _map(func, curriedIterable);\n    }\n    return _map(func, iterable);\n}\n\nfunction flatMap(func, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => flatMap(func, curriedIterable);\n    }\n    return filter(i => i !== undefined && i !== null, flatten(map(func, iterable)));\n}\n\nfunction _flatTransform(concurrency, func, iterable) {\n    const iterator = getIterator(iterable);\n    const resultQueue = [];\n    const readQueue = [];\n    let ended = false;\n    let reading = false;\n    let inflightCount = 0;\n    let lastError = null;\n    function fulfillReadQueue() {\n        while (readQueue.length > 0 && resultQueue.length > 0) {\n            const { resolve } = readQueue.shift();\n            const value = resultQueue.shift();\n            resolve({ done: false, value });\n        }\n        while (readQueue.length > 0 && inflightCount === 0 && ended) {\n            const { resolve, reject } = readQueue.shift();\n            if (lastError) {\n                reject(lastError);\n                lastError = null;\n            }\n            else {\n                resolve({ done: true, value: undefined });\n            }\n        }\n    }\n    async function fillQueue() {\n        if (ended) {\n            fulfillReadQueue();\n            return;\n        }\n        if (reading) {\n            return;\n        }\n        if (inflightCount + resultQueue.length >= concurrency) {\n            return;\n        }\n        reading = true;\n        inflightCount++;\n        try {\n            const { done, value } = await iterator.next();\n            if (done) {\n                ended = true;\n                inflightCount--;\n                fulfillReadQueue();\n            }\n            else {\n                mapAndQueue(value);\n            }\n        }\n        catch (error) {\n            ended = true;\n            inflightCount--;\n            lastError = error;\n            fulfillReadQueue();\n        }\n        reading = false;\n        fillQueue();\n    }\n    async function mapAndQueue(itrValue) {\n        try {\n            const value = await func(itrValue);\n            if (value && value[Symbol.asyncIterator]) {\n                for await (const asyncVal of value) {\n                    resultQueue.push(asyncVal);\n                }\n            }\n            else {\n                resultQueue.push(value);\n            }\n        }\n        catch (error) {\n            ended = true;\n            lastError = error;\n        }\n        inflightCount--;\n        fulfillReadQueue();\n        fillQueue();\n    }\n    async function next() {\n        if (resultQueue.length === 0) {\n            const deferred = defer();\n            readQueue.push(deferred);\n            fillQueue();\n            return deferred.promise;\n        }\n        const value = resultQueue.shift();\n        fillQueue();\n        return { done: false, value };\n    }\n    const asyncIterableIterator = {\n        next,\n        [Symbol.asyncIterator]: () => asyncIterableIterator,\n    };\n    return asyncIterableIterator;\n}\nfunction flatTransform(concurrency, func, iterable) {\n    if (func === undefined) {\n        return (curriedFunc, curriedIterable) => curriedIterable\n            ? flatTransform(concurrency, curriedFunc, curriedIterable)\n            : flatTransform(concurrency, curriedFunc);\n    }\n    if (iterable === undefined) {\n        return (curriedIterable) => flatTransform(concurrency, func, curriedIterable);\n    }\n    return filter(i => i !== undefined && i !== null, flatten(_flatTransform(concurrency, func, iterable)));\n}\n\nasync function onceReadable(stream) {\n    return new Promise(resolve => {\n        stream.once('readable', () => {\n            resolve();\n        });\n    });\n}\nasync function* _fromStream(stream) {\n    while (true) {\n        const data = stream.read();\n        if (data !== null) {\n            yield data;\n            continue;\n        }\n        if (stream._readableState.ended) {\n            break;\n        }\n        await onceReadable(stream);\n    }\n}\nfunction fromStream(stream) {\n    if (typeof stream[Symbol.asyncIterator] === 'function') {\n        return stream;\n    }\n    return _fromStream(stream);\n}\n\nasync function* merge(...iterables) {\n    const sources = new Set(iterables.map(getIterator));\n    while (sources.size > 0) {\n        for (const iterator of sources) {\n            const nextVal = await iterator.next();\n            if (nextVal.done) {\n                sources.delete(iterator);\n            }\n            else {\n                yield nextVal.value;\n            }\n        }\n    }\n}\n\nfunction pipeline(firstFn, ...fns) {\n    let previousFn = firstFn();\n    for (const func of fns) {\n        previousFn = func(previousFn);\n    }\n    return previousFn;\n}\n\nasync function* _parallelMap(concurrency, func, iterable) {\n    let transformError = null;\n    const wrapFunc = value => ({\n        value: func(value),\n    });\n    const stopOnError = async function* (source) {\n        for await (const value of source) {\n            if (transformError) {\n                return;\n            }\n            yield value;\n        }\n    };\n    const output = pipeline(() => iterable, buffer(1), stopOnError, map(wrapFunc), buffer(concurrency - 1));\n    const itr = getIterator(output);\n    while (true) {\n        const { value, done } = await itr.next();\n        if (done) {\n            break;\n        }\n        try {\n            const val = await value.value;\n            if (!transformError) {\n                yield val;\n            }\n        }\n        catch (error) {\n            transformError = error;\n        }\n    }\n    if (transformError) {\n        throw transformError;\n    }\n}\nfunction parallelMap(concurrency, func, iterable) {\n    if (func === undefined) {\n        return (curriedFunc, curriedIterable) => parallelMap(concurrency, curriedFunc, curriedIterable);\n    }\n    if (iterable === undefined) {\n        return curriedIterable => parallelMap(concurrency, func, curriedIterable);\n    }\n    if (concurrency === 1) {\n        return map(func, iterable);\n    }\n    return _parallelMap(concurrency, func, iterable);\n}\n\nfunction parallelFlatMap(concurrency, func, iterable) {\n    if (func === undefined) {\n        return (curriedFunc, curriedIterable) => curriedIterable\n            ? parallelFlatMap(concurrency, curriedFunc, curriedIterable)\n            : parallelFlatMap(concurrency, curriedFunc);\n    }\n    if (iterable === undefined) {\n        return (curriedIterable) => parallelFlatMap(concurrency, func, curriedIterable);\n    }\n    return filter(i => i !== undefined && i !== null, flatten(parallelMap(concurrency, func, iterable)));\n}\n\n/// <reference lib=\"esnext.asynciterable\" />\nasync function* parallelMerge(...iterables) {\n    const inputs = iterables.map(getIterator);\n    const concurrentWork = new Set();\n    const values = new Map();\n    let lastError = null;\n    let errCb = null;\n    let valueCb = null;\n    const notifyError = err => {\n        lastError = err;\n        if (errCb) {\n            errCb(err);\n        }\n    };\n    const notifyDone = value => {\n        if (valueCb) {\n            valueCb(value);\n        }\n    };\n    const waitForQueue = () => new Promise((resolve, reject) => {\n        if (lastError) {\n            reject(lastError);\n        }\n        if (values.size > 0) {\n            return resolve();\n        }\n        valueCb = resolve;\n        errCb = reject;\n    });\n    const queueNext = input => {\n        const nextVal = Promise.resolve(input.next()).then(async ({ done, value }) => {\n            if (!done) {\n                values.set(input, value);\n            }\n            concurrentWork.delete(nextVal);\n        });\n        concurrentWork.add(nextVal);\n        nextVal.then(notifyDone, notifyError);\n    };\n    for (const input of inputs) {\n        queueNext(input);\n    }\n    while (true) {\n        // We technically don't have to check `values.size` as the for loop should have emptied it\n        // However I haven't yet found specs verifying that behavior, only tests\n        // the guard in waitForQueue() checking for values is in place for the same reason\n        if (concurrentWork.size === 0 && values.size === 0) {\n            return;\n        }\n        await waitForQueue();\n        for (const [input, value] of values) {\n            values.delete(input);\n            yield value;\n            queueNext(input);\n        }\n    }\n}\n\nasync function _reduce(func, start, iterable) {\n    let value = start;\n    for await (const nextItem of iterable) {\n        value = await func(value, nextItem);\n    }\n    return value;\n}\nfunction reduce(func, start, iterable) {\n    if (start === undefined) {\n        return (curriedStart, curriedIterable) => curriedIterable ? _reduce(func, curriedStart, curriedIterable) : reduce(func, curriedStart);\n    }\n    if (iterable === undefined) {\n        return (curriedIterable) => reduce(func, start, curriedIterable);\n    }\n    return _reduce(func, start, iterable);\n}\n\nasync function* _take(count, iterable) {\n    let taken = 0;\n    for await (const val of iterable) {\n        yield await val;\n        taken++;\n        if (taken >= count) {\n            break;\n        }\n    }\n}\nfunction* _syncTake(count, iterable) {\n    let taken = 0;\n    for (const val of iterable) {\n        yield val;\n        taken++;\n        if (taken >= count) {\n            break;\n        }\n    }\n}\nfunction take(count, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => take(count, curriedIterable);\n    }\n    if (iterable[Symbol.asyncIterator]) {\n        return _take(count, iterable);\n    }\n    return _syncTake(count, iterable);\n}\n\nasync function* _asyncTap(func, iterable) {\n    for await (const val of iterable) {\n        await func(val);\n        yield val;\n    }\n}\nfunction tap(func, iterable) {\n    if (iterable === undefined) {\n        return (curriedIterable) => _asyncTap(func, curriedIterable);\n    }\n    return _asyncTap(func, iterable);\n}\n\nfunction addTime(a, b) {\n    let seconds = a[0] + b[0];\n    let nanoseconds = a[1] + b[1];\n    if (nanoseconds >= 1000000000) {\n        const remainder = nanoseconds % 1000000000;\n        seconds += (nanoseconds - remainder) / 1000000000;\n        nanoseconds = remainder;\n    }\n    return [seconds, nanoseconds];\n}\nasync function* _asyncTime(config, iterable) {\n    const itr = iterable[Symbol.asyncIterator]();\n    let total = [0, 0];\n    while (true) {\n        const start = process.hrtime();\n        const { value, done } = await itr.next();\n        const delta = process.hrtime(start);\n        total = addTime(total, delta);\n        if (config.progress) {\n            config.progress(delta, total);\n        }\n        if (done) {\n            if (config.total) {\n                config.total(total);\n            }\n            return value;\n        }\n        yield value;\n    }\n}\nfunction* _syncTime(config, iterable) {\n    const itr = iterable[Symbol.iterator]();\n    let total = [0, 0];\n    while (true) {\n        const start = process.hrtime();\n        const { value, done } = itr.next();\n        const delta = process.hrtime(start);\n        total = addTime(total, delta);\n        if (config.progress) {\n            config.progress(delta, total);\n        }\n        if (done) {\n            if (config.total) {\n                config.total(total);\n            }\n            return value;\n        }\n        yield value;\n    }\n}\nfunction time(config = {}, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => time(config, curriedIterable);\n    }\n    if (iterable[Symbol.asyncIterator] !== undefined) {\n        return _asyncTime(config, iterable);\n    }\n    else {\n        return _syncTime(config, iterable);\n    }\n}\n\nfunction _transform(concurrency, func, iterable) {\n    const iterator = getIterator(iterable);\n    const resultQueue = [];\n    const readQueue = [];\n    let ended = false;\n    let reading = false;\n    let inflightCount = 0;\n    let lastError = null;\n    function fulfillReadQueue() {\n        while (readQueue.length > 0 && resultQueue.length > 0) {\n            const { resolve } = readQueue.shift();\n            const value = resultQueue.shift();\n            resolve({ done: false, value });\n        }\n        while (readQueue.length > 0 && inflightCount === 0 && ended) {\n            const { resolve, reject } = readQueue.shift();\n            if (lastError) {\n                reject(lastError);\n                lastError = null;\n            }\n            else {\n                resolve({ done: true, value: undefined });\n            }\n        }\n    }\n    async function fillQueue() {\n        if (ended) {\n            fulfillReadQueue();\n            return;\n        }\n        if (reading) {\n            return;\n        }\n        if (inflightCount + resultQueue.length >= concurrency) {\n            return;\n        }\n        reading = true;\n        inflightCount++;\n        try {\n            const { done, value } = await iterator.next();\n            if (done) {\n                ended = true;\n                inflightCount--;\n                fulfillReadQueue();\n            }\n            else {\n                mapAndQueue(value);\n            }\n        }\n        catch (error) {\n            ended = true;\n            inflightCount--;\n            lastError = error;\n            fulfillReadQueue();\n        }\n        reading = false;\n        fillQueue();\n    }\n    async function mapAndQueue(itrValue) {\n        try {\n            const value = await func(itrValue);\n            resultQueue.push(value);\n        }\n        catch (error) {\n            ended = true;\n            lastError = error;\n        }\n        inflightCount--;\n        fulfillReadQueue();\n        fillQueue();\n    }\n    async function next() {\n        if (resultQueue.length === 0) {\n            const deferred = defer();\n            readQueue.push(deferred);\n            fillQueue();\n            return deferred.promise;\n        }\n        const value = resultQueue.shift();\n        fillQueue();\n        return { done: false, value };\n    }\n    const asyncIterableIterator = {\n        next,\n        [Symbol.asyncIterator]: () => asyncIterableIterator,\n    };\n    return asyncIterableIterator;\n}\nfunction transform(concurrency, func, iterable) {\n    if (func === undefined) {\n        return (curriedFunc, curriedIterable) => curriedIterable\n            ? transform(concurrency, curriedFunc, curriedIterable)\n            : transform(concurrency, curriedFunc);\n    }\n    if (iterable === undefined) {\n        return (curriedIterable) => transform(concurrency, func, curriedIterable);\n    }\n    return _transform(concurrency, func, iterable);\n}\n\nasync function _writeToStream(stream, iterable) {\n    let lastError = null;\n    let errCb = null;\n    let drainCb = null;\n    const notifyError = err => {\n        lastError = err;\n        if (errCb) {\n            errCb(err);\n        }\n    };\n    const notifyDrain = () => {\n        if (drainCb) {\n            drainCb();\n        }\n    };\n    const cleanup = () => {\n        stream.removeListener('error', notifyError);\n        stream.removeListener('drain', notifyDrain);\n    };\n    stream.once('error', notifyError);\n    const waitForDrain = () => new Promise((resolve, reject) => {\n        if (lastError) {\n            return reject(lastError);\n        }\n        stream.once('drain', notifyDrain);\n        drainCb = resolve;\n        errCb = reject;\n    });\n    for await (const value of iterable) {\n        if (stream.write(value) === false) {\n            await waitForDrain();\n        }\n        if (lastError) {\n            break;\n        }\n    }\n    cleanup();\n    if (lastError) {\n        throw lastError;\n    }\n}\nfunction writeToStream(stream, iterable) {\n    if (iterable === undefined) {\n        return (curriedIterable) => _writeToStream(stream, curriedIterable);\n    }\n    return _writeToStream(stream, iterable);\n}\n\nexport { batch, buffer, collect, concat, consume, filter, flatMap, flatTransform, flatten, fromStream, getIterator, map, merge, parallelFlatMap, parallelMap, parallelMerge, pipeline, reduce, take, tap, time, transform, writeToStream };\n","function RetryOperation(timeouts, options) {\n  // Compatibility for the old (timeouts, retryForever) signature\n  if (typeof options === 'boolean') {\n    options = { forever: options };\n  }\n\n  this._originalTimeouts = JSON.parse(JSON.stringify(timeouts));\n  this._timeouts = timeouts;\n  this._options = options || {};\n  this._maxRetryTime = options && options.maxRetryTime || Infinity;\n  this._fn = null;\n  this._errors = [];\n  this._attempts = 1;\n  this._operationTimeout = null;\n  this._operationTimeoutCb = null;\n  this._timeout = null;\n  this._operationStart = null;\n  this._timer = null;\n\n  if (this._options.forever) {\n    this._cachedTimeouts = this._timeouts.slice(0);\n  }\n}\nmodule.exports = RetryOperation;\n\nRetryOperation.prototype.reset = function() {\n  this._attempts = 1;\n  this._timeouts = this._originalTimeouts.slice(0);\n}\n\nRetryOperation.prototype.stop = function() {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n  if (this._timer) {\n    clearTimeout(this._timer);\n  }\n\n  this._timeouts       = [];\n  this._cachedTimeouts = null;\n};\n\nRetryOperation.prototype.retry = function(err) {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  if (!err) {\n    return false;\n  }\n  var currentTime = new Date().getTime();\n  if (err && currentTime - this._operationStart >= this._maxRetryTime) {\n    this._errors.push(err);\n    this._errors.unshift(new Error('RetryOperation timeout occurred'));\n    return false;\n  }\n\n  this._errors.push(err);\n\n  var timeout = this._timeouts.shift();\n  if (timeout === undefined) {\n    if (this._cachedTimeouts) {\n      // retry forever, only keep last error\n      this._errors.splice(0, this._errors.length - 1);\n      timeout = this._cachedTimeouts.slice(-1);\n    } else {\n      return false;\n    }\n  }\n\n  var self = this;\n  this._timer = setTimeout(function() {\n    self._attempts++;\n\n    if (self._operationTimeoutCb) {\n      self._timeout = setTimeout(function() {\n        self._operationTimeoutCb(self._attempts);\n      }, self._operationTimeout);\n\n      if (self._options.unref) {\n          self._timeout.unref();\n      }\n    }\n\n    self._fn(self._attempts);\n  }, timeout);\n\n  if (this._options.unref) {\n      this._timer.unref();\n  }\n\n  return true;\n};\n\nRetryOperation.prototype.attempt = function(fn, timeoutOps) {\n  this._fn = fn;\n\n  if (timeoutOps) {\n    if (timeoutOps.timeout) {\n      this._operationTimeout = timeoutOps.timeout;\n    }\n    if (timeoutOps.cb) {\n      this._operationTimeoutCb = timeoutOps.cb;\n    }\n  }\n\n  var self = this;\n  if (this._operationTimeoutCb) {\n    this._timeout = setTimeout(function() {\n      self._operationTimeoutCb();\n    }, self._operationTimeout);\n  }\n\n  this._operationStart = new Date().getTime();\n\n  this._fn(this._attempts);\n};\n\nRetryOperation.prototype.try = function(fn) {\n  console.log('Using RetryOperation.try() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = function(fn) {\n  console.log('Using RetryOperation.start() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = RetryOperation.prototype.try;\n\nRetryOperation.prototype.errors = function() {\n  return this._errors;\n};\n\nRetryOperation.prototype.attempts = function() {\n  return this._attempts;\n};\n\nRetryOperation.prototype.mainError = function() {\n  if (this._errors.length === 0) {\n    return null;\n  }\n\n  var counts = {};\n  var mainError = null;\n  var mainErrorCount = 0;\n\n  for (var i = 0; i < this._errors.length; i++) {\n    var error = this._errors[i];\n    var message = error.message;\n    var count = (counts[message] || 0) + 1;\n\n    counts[message] = count;\n\n    if (count >= mainErrorCount) {\n      mainError = error;\n      mainErrorCount = count;\n    }\n  }\n\n  return mainError;\n};\n","var RetryOperation = require('./retry_operation');\n\nexports.operation = function(options) {\n  var timeouts = exports.timeouts(options);\n  return new RetryOperation(timeouts, {\n      forever: options && (options.forever || options.retries === Infinity),\n      unref: options && options.unref,\n      maxRetryTime: options && options.maxRetryTime\n  });\n};\n\nexports.timeouts = function(options) {\n  if (options instanceof Array) {\n    return [].concat(options);\n  }\n\n  var opts = {\n    retries: 10,\n    factor: 2,\n    minTimeout: 1 * 1000,\n    maxTimeout: Infinity,\n    randomize: false\n  };\n  for (var key in options) {\n    opts[key] = options[key];\n  }\n\n  if (opts.minTimeout > opts.maxTimeout) {\n    throw new Error('minTimeout is greater than maxTimeout');\n  }\n\n  var timeouts = [];\n  for (var i = 0; i < opts.retries; i++) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  if (options && options.forever && !timeouts.length) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  // sort the array numerically ascending\n  timeouts.sort(function(a,b) {\n    return a - b;\n  });\n\n  return timeouts;\n};\n\nexports.createTimeout = function(attempt, opts) {\n  var random = (opts.randomize)\n    ? (Math.random() + 1)\n    : 1;\n\n  var timeout = Math.round(random * Math.max(opts.minTimeout, 1) * Math.pow(opts.factor, attempt));\n  timeout = Math.min(timeout, opts.maxTimeout);\n\n  return timeout;\n};\n\nexports.wrap = function(obj, options, methods) {\n  if (options instanceof Array) {\n    methods = options;\n    options = null;\n  }\n\n  if (!methods) {\n    methods = [];\n    for (var key in obj) {\n      if (typeof obj[key] === 'function') {\n        methods.push(key);\n      }\n    }\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    var method   = methods[i];\n    var original = obj[method];\n\n    obj[method] = function retryWrapper(original) {\n      var op       = exports.operation(options);\n      var args     = Array.prototype.slice.call(arguments, 1);\n      var callback = args.pop();\n\n      args.push(function(err) {\n        if (op.retry(err)) {\n          return;\n        }\n        if (err) {\n          arguments[0] = op.mainError();\n        }\n        callback.apply(this, arguments);\n      });\n\n      op.attempt(function() {\n        original.apply(obj, args);\n      });\n    }.bind(obj, original);\n    obj[method].options = options;\n  }\n};\n","module.exports = require('./lib/retry');","'use strict';\nconst retry = require('retry');\n\nconst networkErrorMsgs = [\n\t'Failed to fetch', // Chrome\n\t'NetworkError when attempting to fetch resource.', // Firefox\n\t'The Internet connection appears to be offline.', // Safari\n\t'Network request failed' // `cross-fetch`\n];\n\nclass AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\n\t\tif (message instanceof Error) {\n\t\t\tthis.originalError = message;\n\t\t\t({message} = message);\n\t\t} else {\n\t\t\tthis.originalError = new Error(message);\n\t\t\tthis.originalError.stack = this.stack;\n\t\t}\n\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\nconst decorateErrorWithCounts = (error, attemptNumber, options) => {\n\t// Minus 1 from attemptNumber because the first attempt does not count as a retry\n\tconst retriesLeft = options.retries - (attemptNumber - 1);\n\n\terror.attemptNumber = attemptNumber;\n\terror.retriesLeft = retriesLeft;\n\treturn error;\n};\n\nconst isNetworkError = errorMessage => networkErrorMsgs.includes(errorMessage);\n\nconst pRetry = (input, options) => new Promise((resolve, reject) => {\n\toptions = {\n\t\tonFailedAttempt: () => {},\n\t\tretries: 10,\n\t\t...options\n\t};\n\n\tconst operation = retry.operation(options);\n\n\toperation.attempt(async attemptNumber => {\n\t\ttry {\n\t\t\tresolve(await input(attemptNumber));\n\t\t} catch (error) {\n\t\t\tif (!(error instanceof Error)) {\n\t\t\t\treject(new TypeError(`Non-error was thrown: \"${error}\". You should only throw errors.`));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (error instanceof AbortError) {\n\t\t\t\toperation.stop();\n\t\t\t\treject(error.originalError);\n\t\t\t} else if (error instanceof TypeError && !isNetworkError(error.message)) {\n\t\t\t\toperation.stop();\n\t\t\t\treject(error);\n\t\t\t} else {\n\t\t\t\tdecorateErrorWithCounts(error, attemptNumber, options);\n\n\t\t\t\ttry {\n\t\t\t\t\tawait options.onFailedAttempt(error);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!operation.retry(error)) {\n\t\t\t\t\treject(operation.mainError());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n});\n\nmodule.exports = pRetry;\n// TODO: remove this in the next major version\nmodule.exports.default = pRetry;\n\nmodule.exports.AbortError = AbortError;\n","'use strict'\n\n/**\n * Returns the last item of an (async) iterable, unless empty, in which case\n * return `undefined`.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst last = async (source) => {\n  let res\n\n  for await (const entry of source) {\n    res = entry\n  }\n\n  return res\n}\n\nmodule.exports = last\n","const rawPipe = (...fns) => {\n  let res\n  while (fns.length) {\n    res = fns.shift()(res)\n  }\n  return res\n}\n\nconst isIterable = obj => obj && (\n  typeof obj[Symbol.asyncIterator] === 'function' ||\n  typeof obj[Symbol.iterator] === 'function' ||\n  typeof obj.next === 'function' // Probably, right?\n)\n\nconst isDuplex = obj => obj && typeof obj.sink === 'function' && isIterable(obj.source)\n\nconst duplexPipelineFn = duplex => source => {\n  duplex.sink(source) // TODO: error on sink side is unhandled rejection - this is the same as pull streams\n  return duplex.source\n}\n\nconst pipe = (...fns) => {\n  // Duplex at start: wrap in function and return duplex source\n  if (isDuplex(fns[0])) {\n    const duplex = fns[0]\n    fns[0] = () => duplex.source\n  // Iterable at start: wrap in function\n  } else if (isIterable(fns[0])) {\n    const source = fns[0]\n    fns[0] = () => source\n  }\n\n  if (fns.length > 1) {\n    // Duplex at end: use duplex sink\n    if (isDuplex(fns[fns.length - 1])) {\n      fns[fns.length - 1] = fns[fns.length - 1].sink\n    }\n  }\n\n  if (fns.length > 2) {\n    // Duplex in the middle, consume source with duplex sink and return duplex source\n    for (let i = 1; i < fns.length - 1; i++) {\n      if (isDuplex(fns[i])) {\n        fns[i] = duplexPipelineFn(fns[i])\n      }\n    }\n  }\n\n  return rawPipe(...fns)\n}\n\nmodule.exports = pipe\nmodule.exports.pipe = pipe\nmodule.exports.rawPipe = rawPipe\nmodule.exports.isIterable = isIterable\nmodule.exports.isDuplex = isDuplex\n","module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode.bytes = 0\n    throw new RangeError('Could not encode varint')\n  }\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n","module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n","\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n","module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n","var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;","import varint from '../vendor/varint.js';\nexport const decode = data => {\n  const code = varint.decode(data);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};","const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};","import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}","function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;","import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      switch (text[0]) {\n      case this.prefix: {\n          return this.baseDecode(text.slice(1));\n        }\n      default: {\n          throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n        }\n      }\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    const decoders = {\n      [this.prefix]: this,\n      ...decoder.decoders || { [decoder.prefix]: decoder }\n    };\n    return new ComposedDecoder(decoders);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    const other = decoder.decoders || { [decoder.prefix]: decoder };\n    return new ComposedDecoder({\n      ...this.decoders,\n      ...other\n    });\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};","import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});","import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;","const typeofs = [\n  'string',\n  'number',\n  'bigint',\n  'symbol'\n];\nconst objectTypeNames = [\n  'Function',\n  'Generator',\n  'AsyncGenerator',\n  'GeneratorFunction',\n  'AsyncGeneratorFunction',\n  'AsyncFunction',\n  'Observable',\n  'Array',\n  'Buffer',\n  'Object',\n  'RegExp',\n  'Date',\n  'Error',\n  'Map',\n  'Set',\n  'WeakMap',\n  'WeakSet',\n  'ArrayBuffer',\n  'SharedArrayBuffer',\n  'DataView',\n  'Promise',\n  'URL',\n  'HTMLElement',\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array'\n];\nexport function is(value) {\n  if (value === null) {\n    return 'null';\n  }\n  if (value === undefined) {\n    return 'undefined';\n  }\n  if (value === true || value === false) {\n    return 'boolean';\n  }\n  const typeOf = typeof value;\n  if (typeofs.includes(typeOf)) {\n    return typeOf;\n  }\n  if (typeOf === 'function') {\n    return 'Function';\n  }\n  if (Array.isArray(value)) {\n    return 'Array';\n  }\n  if (isBuffer(value)) {\n    return 'Buffer';\n  }\n  const objectType = getObjectType(value);\n  if (objectType) {\n    return objectType;\n  }\n  return 'Object';\n}\nfunction isBuffer(value) {\n  return value && value.constructor && value.constructor.isBuffer && value.constructor.isBuffer.call(null, value);\n}\nfunction getObjectType(value) {\n  const objectTypeName = Object.prototype.toString.call(value).slice(8, -1);\n  if (objectTypeNames.includes(objectTypeName)) {\n    return objectTypeName;\n  }\n  return undefined;\n}","class Type {\n  constructor(major, name, terminal) {\n    this.major = major;\n    this.majorEncoded = major << 5;\n    this.name = name;\n    this.terminal = terminal;\n  }\n  toString() {\n    return `Type[${ this.major }].${ this.name }`;\n  }\n  compare(typ) {\n    return this.major < typ.major ? -1 : this.major > typ.major ? 1 : 0;\n  }\n}\nType.uint = new Type(0, 'uint', true);\nType.negint = new Type(1, 'negint', true);\nType.bytes = new Type(2, 'bytes', true);\nType.string = new Type(3, 'string', true);\nType.array = new Type(4, 'array', false);\nType.map = new Type(5, 'map', false);\nType.tag = new Type(6, 'tag', false);\nType.float = new Type(7, 'float', true);\nType.false = new Type(7, 'false', true);\nType.true = new Type(7, 'true', true);\nType.null = new Type(7, 'null', true);\nType.undefined = new Type(7, 'undefined', true);\nType.break = new Type(7, 'break', true);\nclass Token {\n  constructor(type, value, encodedLength) {\n    this.type = type;\n    this.value = value;\n    this.encodedLength = encodedLength;\n    this.encodedBytes = undefined;\n  }\n  toString() {\n    return `Token[${ this.type }].${ this.value }`;\n  }\n}\nexport {\n  Type,\n  Token\n};","export const useBuffer = globalThis.process && !globalThis.process.browser && globalThis.Buffer && typeof globalThis.Buffer.isBuffer === 'function';\nconst textDecoder = new TextDecoder();\nconst textEncoder = new TextEncoder();\nfunction isBuffer(buf) {\n  return useBuffer && globalThis.Buffer.isBuffer(buf);\n}\nexport function asU8A(buf) {\n  if (!(buf instanceof Uint8Array)) {\n    return Uint8Array.from(buf);\n  }\n  return isBuffer(buf) ? new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength) : buf;\n}\nexport const toString = useBuffer ? (bytes, start, end) => {\n  return end - start > 64 ? globalThis.Buffer.from(bytes.subarray(start, end)).toString('utf8') : utf8Slice(bytes, start, end);\n} : (bytes, start, end) => {\n  return end - start > 64 ? textDecoder.decode(bytes.subarray(start, end)) : utf8Slice(bytes, start, end);\n};\nexport const fromString = useBuffer ? string => {\n  return string.length > 64 ? globalThis.Buffer.from(string) : utf8ToBytes(string);\n} : string => {\n  return string.length > 64 ? textEncoder.encode(string) : utf8ToBytes(string);\n};\nexport const fromArray = arr => {\n  return Uint8Array.from(arr);\n};\nexport const slice = useBuffer ? (bytes, start, end) => {\n  if (isBuffer(bytes)) {\n    return new Uint8Array(bytes.subarray(start, end));\n  }\n  return bytes.slice(start, end);\n} : (bytes, start, end) => {\n  return bytes.slice(start, end);\n};\nexport const concat = useBuffer ? (chunks, length) => {\n  chunks = chunks.map(c => c instanceof Uint8Array ? c : globalThis.Buffer.from(c));\n  return asU8A(globalThis.Buffer.concat(chunks, length));\n} : (chunks, length) => {\n  const out = new Uint8Array(length);\n  let off = 0;\n  for (let b of chunks) {\n    if (off + b.length > out.length) {\n      b = b.subarray(0, out.length - off);\n    }\n    out.set(b, off);\n    off += b.length;\n  }\n  return out;\n};\nexport const alloc = useBuffer ? size => {\n  return globalThis.Buffer.allocUnsafe(size);\n} : size => {\n  return new Uint8Array(size);\n};\nexport const toHex = useBuffer ? d => {\n  if (typeof d === 'string') {\n    return d;\n  }\n  return globalThis.Buffer.from(toBytes(d)).toString('hex');\n} : d => {\n  if (typeof d === 'string') {\n    return d;\n  }\n  return Array.prototype.reduce.call(toBytes(d), (p, c) => `${ p }${ c.toString(16).padStart(2, '0') }`, '');\n};\nexport const fromHex = useBuffer ? hex => {\n  if (hex instanceof Uint8Array) {\n    return hex;\n  }\n  return globalThis.Buffer.from(hex, 'hex');\n} : hex => {\n  if (hex instanceof Uint8Array) {\n    return hex;\n  }\n  if (!hex.length) {\n    return new Uint8Array(0);\n  }\n  return new Uint8Array(hex.split('').map((c, i, d) => i % 2 === 0 ? `0x${ c }${ d[i + 1] }` : '').filter(Boolean).map(e => parseInt(e, 16)));\n};\nfunction toBytes(obj) {\n  if (obj instanceof Uint8Array && obj.constructor.name === 'Uint8Array') {\n    return obj;\n  }\n  if (obj instanceof ArrayBuffer) {\n    return new Uint8Array(obj);\n  }\n  if (ArrayBuffer.isView(obj)) {\n    return new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n}\nexport function compare(b1, b2) {\n  if (isBuffer(b1) && isBuffer(b2)) {\n    return b1.compare(b2);\n  }\n  for (let i = 0; i < b1.length; i++) {\n    if (b1[i] === b2[i]) {\n      continue;\n    }\n    return b1[i] < b2[i] ? -1 : 1;\n  }\n  return 0;\n}\nfunction utf8ToBytes(string, units = Infinity) {\n  let codePoint;\n  const length = string.length;\n  let leadSurrogate = null;\n  const bytes = [];\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n    if (codePoint > 55295 && codePoint < 57344) {\n      if (!leadSurrogate) {\n        if (codePoint > 56319) {\n          if ((units -= 3) > -1)\n            bytes.push(239, 191, 189);\n          continue;\n        } else if (i + 1 === length) {\n          if ((units -= 3) > -1)\n            bytes.push(239, 191, 189);\n          continue;\n        }\n        leadSurrogate = codePoint;\n        continue;\n      }\n      if (codePoint < 56320) {\n        if ((units -= 3) > -1)\n          bytes.push(239, 191, 189);\n        leadSurrogate = codePoint;\n        continue;\n      }\n      codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;\n    } else if (leadSurrogate) {\n      if ((units -= 3) > -1)\n        bytes.push(239, 191, 189);\n    }\n    leadSurrogate = null;\n    if (codePoint < 128) {\n      if ((units -= 1) < 0)\n        break;\n      bytes.push(codePoint);\n    } else if (codePoint < 2048) {\n      if ((units -= 2) < 0)\n        break;\n      bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);\n    } else if (codePoint < 65536) {\n      if ((units -= 3) < 0)\n        break;\n      bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n    } else if (codePoint < 1114112) {\n      if ((units -= 4) < 0)\n        break;\n      bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n  return bytes;\n}\nfunction utf8Slice(buf, offset, end) {\n  const res = [];\n  while (offset < end) {\n    const firstByte = buf[offset];\n    let codePoint = null;\n    let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n    if (offset + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n      case 1:\n        if (firstByte < 128) {\n          codePoint = firstByte;\n        }\n        break;\n      case 2:\n        secondByte = buf[offset + 1];\n        if ((secondByte & 192) === 128) {\n          tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n          if (tempCodePoint > 127) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 3:\n        secondByte = buf[offset + 1];\n        thirdByte = buf[offset + 2];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n          if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 4:\n        secondByte = buf[offset + 1];\n        thirdByte = buf[offset + 2];\n        fourthByte = buf[offset + 3];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n          if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n            codePoint = tempCodePoint;\n          }\n        }\n      }\n    }\n    if (codePoint === null) {\n      codePoint = 65533;\n      bytesPerSequence = 1;\n    } else if (codePoint > 65535) {\n      codePoint -= 65536;\n      res.push(codePoint >>> 10 & 1023 | 55296);\n      codePoint = 56320 | codePoint & 1023;\n    }\n    res.push(codePoint);\n    offset += bytesPerSequence;\n  }\n  return decodeCodePointsArray(res);\n}\nconst MAX_ARGUMENTS_LENGTH = 4096;\nexport function decodeCodePointsArray(codePoints) {\n  const len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints);\n  }\n  let res = '';\n  let i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n  return res;\n}","import {\n  alloc,\n  concat,\n  slice\n} from './byte-utils.js';\nconst defaultChunkSize = 256;\nexport class Bl {\n  constructor(chunkSize = defaultChunkSize) {\n    this.chunkSize = chunkSize;\n    this.cursor = 0;\n    this.maxCursor = -1;\n    this.chunks = [];\n    this._initReuseChunk = null;\n  }\n  reset() {\n    this.chunks = [];\n    this.cursor = 0;\n    this.maxCursor = -1;\n    if (this._initReuseChunk !== null) {\n      this.chunks.push(this._initReuseChunk);\n      this.maxCursor = this._initReuseChunk.length - 1;\n    }\n  }\n  push(bytes) {\n    let topChunk = this.chunks[this.chunks.length - 1];\n    const newMax = this.cursor + bytes.length;\n    if (newMax <= this.maxCursor + 1) {\n      const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n      topChunk.set(bytes, chunkPos);\n    } else {\n      if (topChunk) {\n        const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n        if (chunkPos < topChunk.length) {\n          this.chunks[this.chunks.length - 1] = topChunk.subarray(0, chunkPos);\n          this.maxCursor = this.cursor - 1;\n        }\n      }\n      if (bytes.length < 64 && bytes.length < this.chunkSize) {\n        topChunk = alloc(this.chunkSize);\n        this.chunks.push(topChunk);\n        this.maxCursor += topChunk.length;\n        if (this._initReuseChunk === null) {\n          this._initReuseChunk = topChunk;\n        }\n        topChunk.set(bytes, 0);\n      } else {\n        this.chunks.push(bytes);\n        this.maxCursor += bytes.length;\n      }\n    }\n    this.cursor += bytes.length;\n  }\n  toBytes(reset = false) {\n    let byts;\n    if (this.chunks.length === 1) {\n      const chunk = this.chunks[0];\n      if (reset && this.cursor > chunk.length / 2) {\n        byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor);\n        this._initReuseChunk = null;\n        this.chunks = [];\n      } else {\n        byts = slice(chunk, 0, this.cursor);\n      }\n    } else {\n      byts = concat(this.chunks, this.cursor);\n    }\n    if (reset) {\n      this.reset();\n    }\n    return byts;\n  }\n}","const decodeErrPrefix = 'CBOR decode error:';\nconst encodeErrPrefix = 'CBOR encode error:';\nconst uintMinorPrefixBytes = [];\nuintMinorPrefixBytes[23] = 1;\nuintMinorPrefixBytes[24] = 2;\nuintMinorPrefixBytes[25] = 3;\nuintMinorPrefixBytes[26] = 5;\nuintMinorPrefixBytes[27] = 9;\nfunction assertEnoughData(data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${ decodeErrPrefix } not enough data for type`);\n  }\n}\nexport {\n  decodeErrPrefix,\n  encodeErrPrefix,\n  uintMinorPrefixBytes,\n  assertEnoughData\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  decodeErrPrefix,\n  assertEnoughData\n} from './common.js';\nexport const uintBoundaries = [\n  24,\n  256,\n  65536,\n  4294967296,\n  BigInt('18446744073709551616')\n];\nexport function readUint8(data, offset, options) {\n  assertEnoughData(data, offset, 1);\n  const value = data[offset];\n  if (options.strict === true && value < uintBoundaries[0]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint16(data, offset, options) {\n  assertEnoughData(data, offset, 2);\n  const value = data[offset] << 8 | data[offset + 1];\n  if (options.strict === true && value < uintBoundaries[1]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint32(data, offset, options) {\n  assertEnoughData(data, offset, 4);\n  const value = data[offset] * 16777216 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];\n  if (options.strict === true && value < uintBoundaries[2]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint64(data, offset, options) {\n  assertEnoughData(data, offset, 8);\n  const hi = data[offset] * 16777216 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];\n  const lo = data[offset + 4] * 16777216 + (data[offset + 5] << 16) + (data[offset + 6] << 8) + data[offset + 7];\n  const value = (BigInt(hi) << BigInt(32)) + BigInt(lo);\n  if (options.strict === true && value < uintBoundaries[3]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  if (value <= Number.MAX_SAFE_INTEGER) {\n    return Number(value);\n  }\n  if (options.allowBigInt === true) {\n    return value;\n  }\n  throw new Error(`${ decodeErrPrefix } integers outside of the safe integer range are not supported`);\n}\nexport function decodeUint8(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint8(data, pos + 1, options), 2);\n}\nexport function decodeUint16(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint16(data, pos + 1, options), 3);\n}\nexport function decodeUint32(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint32(data, pos + 1, options), 5);\n}\nexport function decodeUint64(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint64(data, pos + 1, options), 9);\n}\nexport function encodeUint(buf, token) {\n  return encodeUintValue(buf, 0, token.value);\n}\nexport function encodeUintValue(buf, major, uint) {\n  if (uint < uintBoundaries[0]) {\n    const nuint = Number(uint);\n    buf.push([major | nuint]);\n  } else if (uint < uintBoundaries[1]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 24,\n      nuint\n    ]);\n  } else if (uint < uintBoundaries[2]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 25,\n      nuint >>> 8,\n      nuint & 255\n    ]);\n  } else if (uint < uintBoundaries[3]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 26,\n      nuint >>> 24 & 255,\n      nuint >>> 16 & 255,\n      nuint >>> 8 & 255,\n      nuint & 255\n    ]);\n  } else {\n    const buint = BigInt(uint);\n    if (buint < uintBoundaries[4]) {\n      const set = [\n        major | 27,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n      ];\n      let lo = Number(buint & BigInt(4294967295));\n      let hi = Number(buint >> BigInt(32) & BigInt(4294967295));\n      set[8] = lo & 255;\n      lo = lo >> 8;\n      set[7] = lo & 255;\n      lo = lo >> 8;\n      set[6] = lo & 255;\n      lo = lo >> 8;\n      set[5] = lo & 255;\n      set[4] = hi & 255;\n      hi = hi >> 8;\n      set[3] = hi & 255;\n      hi = hi >> 8;\n      set[2] = hi & 255;\n      hi = hi >> 8;\n      set[1] = hi & 255;\n      buf.push(set);\n    } else {\n      throw new Error(`${ decodeErrPrefix } encountered BigInt larger than allowable range`);\n    }\n  }\n}\nencodeUint.encodedSize = function encodedSize(token) {\n  return encodeUintValue.encodedSize(token.value);\n};\nencodeUintValue.encodedSize = function encodedSize(uint) {\n  if (uint < uintBoundaries[0]) {\n    return 1;\n  }\n  if (uint < uintBoundaries[1]) {\n    return 2;\n  }\n  if (uint < uintBoundaries[2]) {\n    return 3;\n  }\n  if (uint < uintBoundaries[3]) {\n    return 5;\n  }\n  return 9;\n};\nencodeUint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? -1 : tok1.value > tok2.value ? 1 : 0;\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nexport function decodeNegint8(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint8(data, pos + 1, options), 2);\n}\nexport function decodeNegint16(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint16(data, pos + 1, options), 3);\n}\nexport function decodeNegint32(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint32(data, pos + 1, options), 5);\n}\nconst neg1b = BigInt(-1);\nconst pos1b = BigInt(1);\nexport function decodeNegint64(data, pos, _minor, options) {\n  const int = uint.readUint64(data, pos + 1, options);\n  if (typeof int !== 'bigint') {\n    const value = -1 - int;\n    if (value >= Number.MIN_SAFE_INTEGER) {\n      return new Token(Type.negint, value, 9);\n    }\n  }\n  if (options.allowBigInt !== true) {\n    throw new Error(`${ decodeErrPrefix } integers outside of the safe integer range are not supported`);\n  }\n  return new Token(Type.negint, neg1b - BigInt(int), 9);\n}\nexport function encodeNegint(buf, token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  uint.encodeUintValue(buf, token.type.majorEncoded, unsigned);\n}\nencodeNegint.encodedSize = function encodedSize(token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  if (unsigned < uint.uintBoundaries[0]) {\n    return 1;\n  }\n  if (unsigned < uint.uintBoundaries[1]) {\n    return 2;\n  }\n  if (unsigned < uint.uintBoundaries[2]) {\n    return 3;\n  }\n  if (unsigned < uint.uintBoundaries[3]) {\n    return 5;\n  }\n  return 9;\n};\nencodeNegint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? 1 : tok1.value > tok2.value ? -1 : 0;\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  assertEnoughData,\n  decodeErrPrefix\n} from './common.js';\nimport * as uint from './0uint.js';\nimport {\n  compare,\n  fromString,\n  slice\n} from './byte-utils.js';\nfunction toToken(data, pos, prefix, length) {\n  assertEnoughData(data, pos, prefix + length);\n  const buf = slice(data, pos + prefix, pos + prefix + length);\n  return new Token(Type.bytes, buf, prefix + length);\n}\nexport function decodeBytesCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeBytes8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeBytes16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeBytes32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeBytes64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer bytes lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nfunction tokenBytes(token) {\n  if (token.encodedBytes === undefined) {\n    token.encodedBytes = token.type === Type.string ? fromString(token.value) : token.value;\n  }\n  return token.encodedBytes;\n}\nexport function encodeBytes(buf, token) {\n  const bytes = tokenBytes(token);\n  uint.encodeUintValue(buf, token.type.majorEncoded, bytes.length);\n  buf.push(bytes);\n}\nencodeBytes.encodedSize = function encodedSize(token) {\n  const bytes = tokenBytes(token);\n  return uint.encodeUintValue.encodedSize(bytes.length) + bytes.length;\n};\nencodeBytes.compareTokens = function compareTokens(tok1, tok2) {\n  return compareBytes(tokenBytes(tok1), tokenBytes(tok2));\n};\nexport function compareBytes(b1, b2) {\n  return b1.length < b2.length ? -1 : b1.length > b2.length ? 1 : compare(b1, b2);\n}","import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  assertEnoughData,\n  decodeErrPrefix\n} from './common.js';\nimport * as uint from './0uint.js';\nimport { encodeBytes } from './2bytes.js';\nimport { toString } from './byte-utils.js';\nfunction toToken(data, pos, prefix, length) {\n  const totLength = prefix + length;\n  assertEnoughData(data, pos, totLength);\n  return new Token(Type.string, toString(data, pos + prefix, pos + totLength), totLength);\n}\nexport function decodeStringCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeString8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeString16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeString32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeString64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer string lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nexport const encodeString = encodeBytes;","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nfunction toToken(_data, _pos, prefix, length) {\n  return new Token(Type.array, length, prefix);\n}\nexport function decodeArrayCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeArray8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeArray16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeArray32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeArray64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer array lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nexport function decodeArrayIndefinite(data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return toToken(data, pos, 1, Infinity);\n}\nexport function encodeArray(buf, token) {\n  uint.encodeUintValue(buf, Type.array.majorEncoded, token.value);\n}\nencodeArray.compareTokens = uint.encodeUint.compareTokens;","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nfunction toToken(_data, _pos, prefix, length) {\n  return new Token(Type.map, length, prefix);\n}\nexport function decodeMapCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeMap8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeMap16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeMap32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeMap64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer map lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nexport function decodeMapIndefinite(data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return toToken(data, pos, 1, Infinity);\n}\nexport function encodeMap(buf, token) {\n  uint.encodeUintValue(buf, Type.map.majorEncoded, token.value);\n}\nencodeMap.compareTokens = uint.encodeUint.compareTokens;","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nexport function decodeTagCompact(_data, _pos, minor, _options) {\n  return new Token(Type.tag, minor, 1);\n}\nexport function decodeTag8(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint8(data, pos + 1, options), 2);\n}\nexport function decodeTag16(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint16(data, pos + 1, options), 3);\n}\nexport function decodeTag32(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint32(data, pos + 1, options), 5);\n}\nexport function decodeTag64(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint64(data, pos + 1, options), 9);\n}\nexport function encodeTag(buf, token) {\n  uint.encodeUintValue(buf, Type.tag.majorEncoded, token.value);\n}\nencodeTag.compareTokens = uint.encodeUint.compareTokens;","import {\n  Token,\n  Type\n} from './token.js';\nimport { decodeErrPrefix } from './common.js';\nimport { encodeUint } from './0uint.js';\nconst MINOR_FALSE = 20;\nconst MINOR_TRUE = 21;\nconst MINOR_NULL = 22;\nconst MINOR_UNDEFINED = 23;\nexport function decodeUndefined(_data, _pos, _minor, options) {\n  if (options.allowUndefined === false) {\n    throw new Error(`${ decodeErrPrefix } undefined values are not supported`);\n  }\n  return new Token(Type.undefined, undefined, 1);\n}\nexport function decodeBreak(_data, _pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return new Token(Type.break, undefined, 1);\n}\nfunction createToken(value, bytes, options) {\n  if (options) {\n    if (options.allowNaN === false && Number.isNaN(value)) {\n      throw new Error(`${ decodeErrPrefix } NaN values are not supported`);\n    }\n    if (options.allowInfinity === false && (value === Infinity || value === -Infinity)) {\n      throw new Error(`${ decodeErrPrefix } Infinity values are not supported`);\n    }\n  }\n  return new Token(Type.float, value, bytes);\n}\nexport function decodeFloat16(data, pos, _minor, options) {\n  return createToken(readFloat16(data, pos + 1), 3, options);\n}\nexport function decodeFloat32(data, pos, _minor, options) {\n  return createToken(readFloat32(data, pos + 1), 5, options);\n}\nexport function decodeFloat64(data, pos, _minor, options) {\n  return createToken(readFloat64(data, pos + 1), 9, options);\n}\nexport function encodeFloat(buf, token, options) {\n  const float = token.value;\n  if (float === false) {\n    buf.push([Type.float.majorEncoded | MINOR_FALSE]);\n  } else if (float === true) {\n    buf.push([Type.float.majorEncoded | MINOR_TRUE]);\n  } else if (float === null) {\n    buf.push([Type.float.majorEncoded | MINOR_NULL]);\n  } else if (float === undefined) {\n    buf.push([Type.float.majorEncoded | MINOR_UNDEFINED]);\n  } else {\n    let decoded;\n    let success = false;\n    if (!options || options.float64 !== true) {\n      encodeFloat16(float);\n      decoded = readFloat16(ui8a, 1);\n      if (float === decoded || Number.isNaN(float)) {\n        ui8a[0] = 249;\n        buf.push(ui8a.slice(0, 3));\n        success = true;\n      } else {\n        encodeFloat32(float);\n        decoded = readFloat32(ui8a, 1);\n        if (float === decoded) {\n          ui8a[0] = 250;\n          buf.push(ui8a.slice(0, 5));\n          success = true;\n        }\n      }\n    }\n    if (!success) {\n      encodeFloat64(float);\n      decoded = readFloat64(ui8a, 1);\n      ui8a[0] = 251;\n      buf.push(ui8a.slice(0, 9));\n    }\n  }\n}\nencodeFloat.encodedSize = function encodedSize(token, options) {\n  const float = token.value;\n  if (float === false || float === true || float === null || float === undefined) {\n    return 1;\n  }\n  let decoded;\n  if (!options || options.float64 !== true) {\n    encodeFloat16(float);\n    decoded = readFloat16(ui8a, 1);\n    if (float === decoded || Number.isNaN(float)) {\n      return 3;\n    }\n    encodeFloat32(float);\n    decoded = readFloat32(ui8a, 1);\n    if (float === decoded) {\n      return 5;\n    }\n  }\n  return 9;\n};\nconst buffer = new ArrayBuffer(9);\nconst dataView = new DataView(buffer, 1);\nconst ui8a = new Uint8Array(buffer, 0);\nfunction encodeFloat16(inp) {\n  if (inp === Infinity) {\n    dataView.setUint16(0, 31744, false);\n  } else if (inp === -Infinity) {\n    dataView.setUint16(0, 64512, false);\n  } else if (Number.isNaN(inp)) {\n    dataView.setUint16(0, 32256, false);\n  } else {\n    dataView.setFloat32(0, inp);\n    const valu32 = dataView.getUint32(0);\n    const exponent = (valu32 & 2139095040) >> 23;\n    const mantissa = valu32 & 8388607;\n    if (exponent === 255) {\n      dataView.setUint16(0, 31744, false);\n    } else if (exponent === 0) {\n      dataView.setUint16(0, (inp & 2147483648) >> 16 | mantissa >> 13, false);\n    } else {\n      const logicalExponent = exponent - 127;\n      if (logicalExponent < -24) {\n        dataView.setUint16(0, 0);\n      } else if (logicalExponent < -14) {\n        dataView.setUint16(0, (valu32 & 2147483648) >> 16 | 1 << 24 + logicalExponent, false);\n      } else {\n        dataView.setUint16(0, (valu32 & 2147483648) >> 16 | logicalExponent + 15 << 10 | mantissa >> 13, false);\n      }\n    }\n  }\n}\nfunction readFloat16(ui8a, pos) {\n  if (ui8a.length - pos < 2) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float16`);\n  }\n  const half = (ui8a[pos] << 8) + ui8a[pos + 1];\n  if (half === 31744) {\n    return Infinity;\n  }\n  if (half === 64512) {\n    return -Infinity;\n  }\n  if (half === 32256) {\n    return NaN;\n  }\n  const exp = half >> 10 & 31;\n  const mant = half & 1023;\n  let val;\n  if (exp === 0) {\n    val = mant * 2 ** -24;\n  } else if (exp !== 31) {\n    val = (mant + 1024) * 2 ** (exp - 25);\n  } else {\n    val = mant === 0 ? Infinity : NaN;\n  }\n  return half & 32768 ? -val : val;\n}\nfunction encodeFloat32(inp) {\n  dataView.setFloat32(0, inp, false);\n}\nfunction readFloat32(ui8a, pos) {\n  if (ui8a.length - pos < 4) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float32`);\n  }\n  const offset = (ui8a.byteOffset || 0) + pos;\n  return new DataView(ui8a.buffer, offset, 4).getFloat32(0, false);\n}\nfunction encodeFloat64(inp) {\n  dataView.setFloat64(0, inp, false);\n}\nfunction readFloat64(ui8a, pos) {\n  if (ui8a.length - pos < 8) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float64`);\n  }\n  const offset = (ui8a.byteOffset || 0) + pos;\n  return new DataView(ui8a.buffer, offset, 8).getFloat64(0, false);\n}\nencodeFloat.compareTokens = encodeUint.compareTokens;","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport * as negint from './1negint.js';\nimport * as bytes from './2bytes.js';\nimport * as string from './3string.js';\nimport * as array from './4array.js';\nimport * as map from './5map.js';\nimport * as tag from './6tag.js';\nimport * as float from './7float.js';\nimport { decodeErrPrefix } from './common.js';\nimport { fromArray } from './byte-utils.js';\nfunction invalidMinor(data, pos, minor) {\n  throw new Error(`${ decodeErrPrefix } encountered invalid minor (${ minor }) for major ${ data[pos] >>> 5 }`);\n}\nfunction errorer(msg) {\n  return () => {\n    throw new Error(`${ decodeErrPrefix } ${ msg }`);\n  };\n}\nexport const jump = [];\nfor (let i = 0; i <= 23; i++) {\n  jump[i] = invalidMinor;\n}\njump[24] = uint.decodeUint8;\njump[25] = uint.decodeUint16;\njump[26] = uint.decodeUint32;\njump[27] = uint.decodeUint64;\njump[28] = invalidMinor;\njump[29] = invalidMinor;\njump[30] = invalidMinor;\njump[31] = invalidMinor;\nfor (let i = 32; i <= 55; i++) {\n  jump[i] = invalidMinor;\n}\njump[56] = negint.decodeNegint8;\njump[57] = negint.decodeNegint16;\njump[58] = negint.decodeNegint32;\njump[59] = negint.decodeNegint64;\njump[60] = invalidMinor;\njump[61] = invalidMinor;\njump[62] = invalidMinor;\njump[63] = invalidMinor;\nfor (let i = 64; i <= 87; i++) {\n  jump[i] = bytes.decodeBytesCompact;\n}\njump[88] = bytes.decodeBytes8;\njump[89] = bytes.decodeBytes16;\njump[90] = bytes.decodeBytes32;\njump[91] = bytes.decodeBytes64;\njump[92] = invalidMinor;\njump[93] = invalidMinor;\njump[94] = invalidMinor;\njump[95] = errorer('indefinite length bytes/strings are not supported');\nfor (let i = 96; i <= 119; i++) {\n  jump[i] = string.decodeStringCompact;\n}\njump[120] = string.decodeString8;\njump[121] = string.decodeString16;\njump[122] = string.decodeString32;\njump[123] = string.decodeString64;\njump[124] = invalidMinor;\njump[125] = invalidMinor;\njump[126] = invalidMinor;\njump[127] = errorer('indefinite length bytes/strings are not supported');\nfor (let i = 128; i <= 151; i++) {\n  jump[i] = array.decodeArrayCompact;\n}\njump[152] = array.decodeArray8;\njump[153] = array.decodeArray16;\njump[154] = array.decodeArray32;\njump[155] = array.decodeArray64;\njump[156] = invalidMinor;\njump[157] = invalidMinor;\njump[158] = invalidMinor;\njump[159] = array.decodeArrayIndefinite;\nfor (let i = 160; i <= 183; i++) {\n  jump[i] = map.decodeMapCompact;\n}\njump[184] = map.decodeMap8;\njump[185] = map.decodeMap16;\njump[186] = map.decodeMap32;\njump[187] = map.decodeMap64;\njump[188] = invalidMinor;\njump[189] = invalidMinor;\njump[190] = invalidMinor;\njump[191] = map.decodeMapIndefinite;\nfor (let i = 192; i <= 215; i++) {\n  jump[i] = tag.decodeTagCompact;\n}\njump[216] = tag.decodeTag8;\njump[217] = tag.decodeTag16;\njump[218] = tag.decodeTag32;\njump[219] = tag.decodeTag64;\njump[220] = invalidMinor;\njump[221] = invalidMinor;\njump[222] = invalidMinor;\njump[223] = invalidMinor;\nfor (let i = 224; i <= 243; i++) {\n  jump[i] = errorer('simple values are not supported');\n}\njump[244] = invalidMinor;\njump[245] = invalidMinor;\njump[246] = invalidMinor;\njump[247] = float.decodeUndefined;\njump[248] = errorer('simple values are not supported');\njump[249] = float.decodeFloat16;\njump[250] = float.decodeFloat32;\njump[251] = float.decodeFloat64;\njump[252] = invalidMinor;\njump[253] = invalidMinor;\njump[254] = invalidMinor;\njump[255] = float.decodeBreak;\nexport const quick = [];\nfor (let i = 0; i < 24; i++) {\n  quick[i] = new Token(Type.uint, i, 1);\n}\nfor (let i = -1; i >= -24; i--) {\n  quick[31 - i] = new Token(Type.negint, i, 1);\n}\nquick[64] = new Token(Type.bytes, new Uint8Array(0), 1);\nquick[96] = new Token(Type.string, '', 1);\nquick[128] = new Token(Type.array, 0, 1);\nquick[160] = new Token(Type.map, 0, 1);\nquick[244] = new Token(Type.false, false, 1);\nquick[245] = new Token(Type.true, true, 1);\nquick[246] = new Token(Type.null, null, 1);\nexport function quickEncodeToken(token) {\n  switch (token.type) {\n  case Type.false:\n    return fromArray([244]);\n  case Type.true:\n    return fromArray([245]);\n  case Type.null:\n    return fromArray([246]);\n  case Type.bytes:\n    if (!token.value.length) {\n      return fromArray([64]);\n    }\n    return;\n  case Type.string:\n    if (token.value === '') {\n      return fromArray([96]);\n    }\n    return;\n  case Type.array:\n    if (token.value === 0) {\n      return fromArray([128]);\n    }\n    return;\n  case Type.map:\n    if (token.value === 0) {\n      return fromArray([160]);\n    }\n    return;\n  case Type.uint:\n    if (token.value < 24) {\n      return fromArray([Number(token.value)]);\n    }\n    return;\n  case Type.negint:\n    if (token.value >= -24) {\n      return fromArray([31 - Number(token.value)]);\n    }\n  }\n}","import { is } from './is.js';\nimport {\n  Token,\n  Type\n} from './token.js';\nimport { Bl } from './bl.js';\nimport { encodeErrPrefix } from './common.js';\nimport { quickEncodeToken } from './jump.js';\nimport { asU8A } from './byte-utils.js';\nimport { encodeUint } from './0uint.js';\nimport { encodeNegint } from './1negint.js';\nimport { encodeBytes } from './2bytes.js';\nimport { encodeString } from './3string.js';\nimport { encodeArray } from './4array.js';\nimport { encodeMap } from './5map.js';\nimport { encodeTag } from './6tag.js';\nimport { encodeFloat } from './7float.js';\nconst defaultEncodeOptions = {\n  float64: false,\n  mapSorter,\n  quickEncodeToken\n};\nconst cborEncoders = [];\ncborEncoders[Type.uint.major] = encodeUint;\ncborEncoders[Type.negint.major] = encodeNegint;\ncborEncoders[Type.bytes.major] = encodeBytes;\ncborEncoders[Type.string.major] = encodeString;\ncborEncoders[Type.array.major] = encodeArray;\ncborEncoders[Type.map.major] = encodeMap;\ncborEncoders[Type.tag.major] = encodeTag;\ncborEncoders[Type.float.major] = encodeFloat;\nconst buf = new Bl();\nclass Ref {\n  constructor(obj, parent) {\n    this.obj = obj;\n    this.parent = parent;\n  }\n  includes(obj) {\n    let p = this;\n    do {\n      if (p.obj === obj) {\n        return true;\n      }\n    } while (p = p.parent);\n    return false;\n  }\n  static createCheck(stack, obj) {\n    if (stack && stack.includes(obj)) {\n      throw new Error(`${ encodeErrPrefix } object contains circular references`);\n    }\n    return new Ref(obj, stack);\n  }\n}\nconst simpleTokens = {\n  null: new Token(Type.null, null),\n  undefined: new Token(Type.undefined, undefined),\n  true: new Token(Type.true, true),\n  false: new Token(Type.false, false),\n  emptyArray: new Token(Type.array, 0),\n  emptyMap: new Token(Type.map, 0)\n};\nconst typeEncoders = {\n  number(obj, _typ, _options, _refStack) {\n    if (!Number.isInteger(obj) || !Number.isSafeInteger(obj)) {\n      return new Token(Type.float, obj);\n    } else if (obj >= 0) {\n      return new Token(Type.uint, obj);\n    } else {\n      return new Token(Type.negint, obj);\n    }\n  },\n  bigint(obj, _typ, _options, _refStack) {\n    if (obj >= BigInt(0)) {\n      return new Token(Type.uint, obj);\n    } else {\n      return new Token(Type.negint, obj);\n    }\n  },\n  Uint8Array(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, obj);\n  },\n  string(obj, _typ, _options, _refStack) {\n    return new Token(Type.string, obj);\n  },\n  boolean(obj, _typ, _options, _refStack) {\n    return obj ? simpleTokens.true : simpleTokens.false;\n  },\n  null(_obj, _typ, _options, _refStack) {\n    return simpleTokens.null;\n  },\n  undefined(_obj, _typ, _options, _refStack) {\n    return simpleTokens.undefined;\n  },\n  ArrayBuffer(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj));\n  },\n  DataView(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength));\n  },\n  Array(obj, _typ, options, refStack) {\n    if (!obj.length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyArray,\n          new Token(Type.break)\n        ];\n      }\n      return simpleTokens.emptyArray;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const e of obj) {\n      entries[i++] = objectToTokens(e, options, refStack);\n    }\n    if (options.addBreakTokens) {\n      return [\n        new Token(Type.array, obj.length),\n        entries,\n        new Token(Type.break)\n      ];\n    }\n    return [\n      new Token(Type.array, obj.length),\n      entries\n    ];\n  },\n  Object(obj, typ, options, refStack) {\n    const isMap = typ !== 'Object';\n    const keys = isMap ? obj.keys() : Object.keys(obj);\n    const length = isMap ? obj.size : keys.length;\n    if (!length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyMap,\n          new Token(Type.break)\n        ];\n      }\n      return simpleTokens.emptyMap;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const key of keys) {\n      entries[i++] = [\n        objectToTokens(key, options, refStack),\n        objectToTokens(isMap ? obj.get(key) : obj[key], options, refStack)\n      ];\n    }\n    sortMapEntries(entries, options);\n    if (options.addBreakTokens) {\n      return [\n        new Token(Type.map, length),\n        entries,\n        new Token(Type.break)\n      ];\n    }\n    return [\n      new Token(Type.map, length),\n      entries\n    ];\n  }\n};\ntypeEncoders.Map = typeEncoders.Object;\ntypeEncoders.Buffer = typeEncoders.Uint8Array;\nfor (const typ of 'Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64'.split(' ')) {\n  typeEncoders[`${ typ }Array`] = typeEncoders.DataView;\n}\nfunction objectToTokens(obj, options = {}, refStack) {\n  const typ = is(obj);\n  const customTypeEncoder = options && options.typeEncoders && options.typeEncoders[typ] || typeEncoders[typ];\n  if (typeof customTypeEncoder === 'function') {\n    const tokens = customTypeEncoder(obj, typ, options, refStack);\n    if (tokens != null) {\n      return tokens;\n    }\n  }\n  const typeEncoder = typeEncoders[typ];\n  if (!typeEncoder) {\n    throw new Error(`${ encodeErrPrefix } unsupported type: ${ typ }`);\n  }\n  return typeEncoder(obj, typ, options, refStack);\n}\nfunction sortMapEntries(entries, options) {\n  if (options.mapSorter) {\n    entries.sort(options.mapSorter);\n  }\n}\nfunction mapSorter(e1, e2) {\n  const keyToken1 = Array.isArray(e1[0]) ? e1[0][0] : e1[0];\n  const keyToken2 = Array.isArray(e2[0]) ? e2[0][0] : e2[0];\n  if (keyToken1.type !== keyToken2.type) {\n    return keyToken1.type.compare(keyToken2.type);\n  }\n  const major = keyToken1.type.major;\n  const tcmp = cborEncoders[major].compareTokens(keyToken1, keyToken2);\n  if (tcmp === 0) {\n    console.warn('WARNING: complex key types used, CBOR key sorting guarantees are gone');\n  }\n  return tcmp;\n}\nfunction tokensToEncoded(buf, tokens, encoders, options) {\n  if (Array.isArray(tokens)) {\n    for (const token of tokens) {\n      tokensToEncoded(buf, token, encoders, options);\n    }\n  } else {\n    encoders[tokens.type.major](buf, tokens, options);\n  }\n}\nfunction encodeCustom(data, encoders, options) {\n  const tokens = objectToTokens(data, options);\n  if (!Array.isArray(tokens) && options.quickEncodeToken) {\n    const quickBytes = options.quickEncodeToken(tokens);\n    if (quickBytes) {\n      return quickBytes;\n    }\n    const encoder = encoders[tokens.type.major];\n    if (encoder.encodedSize) {\n      const size = encoder.encodedSize(tokens, options);\n      const buf = new Bl(size);\n      encoder(buf, tokens, options);\n      if (buf.chunks.length !== 1) {\n        throw new Error(`Unexpected error: pre-calculated length for ${ tokens } was wrong`);\n      }\n      return asU8A(buf.chunks[0]);\n    }\n  }\n  tokensToEncoded(buf, tokens, encoders, options);\n  return buf.toBytes(true);\n}\nfunction encode(data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options);\n  return encodeCustom(data, cborEncoders, options);\n}\nexport {\n  objectToTokens,\n  encode,\n  encodeCustom,\n  Ref\n};","import { decodeErrPrefix } from './common.js';\nimport { Type } from './token.js';\nimport {\n  jump,\n  quick\n} from './jump.js';\nconst defaultDecodeOptions = {\n  strict: false,\n  allowIndefinite: true,\n  allowUndefined: true,\n  allowBigInt: true\n};\nclass Tokeniser {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n  }\n  done() {\n    return this.pos >= this.data.length;\n  }\n  next() {\n    const byt = this.data[this.pos];\n    let token = quick[byt];\n    if (token === undefined) {\n      const decoder = jump[byt];\n      if (!decoder) {\n        throw new Error(`${ decodeErrPrefix } no decoder for major type ${ byt >>> 5 } (byte 0x${ byt.toString(16).padStart(2, '0') })`);\n      }\n      const minor = byt & 31;\n      token = decoder(this.data, this.pos, minor, this.options);\n    }\n    this.pos += token.encodedLength;\n    return token;\n  }\n}\nconst DONE = Symbol.for('DONE');\nconst BREAK = Symbol.for('BREAK');\nfunction tokenToArray(token, tokeniser, options) {\n  const arr = [];\n  for (let i = 0; i < token.value; i++) {\n    const value = tokensToObject(tokeniser, options);\n    if (value === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ decodeErrPrefix } got unexpected break to lengthed array`);\n    }\n    if (value === DONE) {\n      throw new Error(`${ decodeErrPrefix } found array but not enough entries (got ${ i }, expected ${ token.value })`);\n    }\n    arr[i] = value;\n  }\n  return arr;\n}\nfunction tokenToMap(token, tokeniser, options) {\n  const useMaps = options.useMaps === true;\n  const obj = useMaps ? undefined : {};\n  const m = useMaps ? new Map() : undefined;\n  for (let i = 0; i < token.value; i++) {\n    const key = tokensToObject(tokeniser, options);\n    if (key === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ decodeErrPrefix } got unexpected break to lengthed map`);\n    }\n    if (key === DONE) {\n      throw new Error(`${ decodeErrPrefix } found map but not enough entries (got ${ i } [no key], expected ${ token.value })`);\n    }\n    if (useMaps !== true && typeof key !== 'string') {\n      throw new Error(`${ decodeErrPrefix } non-string keys not supported (got ${ typeof key })`);\n    }\n    const value = tokensToObject(tokeniser, options);\n    if (value === DONE) {\n      throw new Error(`${ decodeErrPrefix } found map but not enough entries (got ${ i } [no value], expected ${ token.value })`);\n    }\n    if (useMaps) {\n      m.set(key, value);\n    } else {\n      obj[key] = value;\n    }\n  }\n  return useMaps ? m : obj;\n}\nfunction tokensToObject(tokeniser, options) {\n  if (tokeniser.done()) {\n    return DONE;\n  }\n  const token = tokeniser.next();\n  if (token.type === Type.break) {\n    return BREAK;\n  }\n  if (token.type.terminal) {\n    return token.value;\n  }\n  if (token.type === Type.array) {\n    return tokenToArray(token, tokeniser, options);\n  }\n  if (token.type === Type.map) {\n    return tokenToMap(token, tokeniser, options);\n  }\n  if (token.type === Type.tag) {\n    if (options.tags && typeof options.tags[token.value] === 'function') {\n      const tagged = tokensToObject(tokeniser, options);\n      return options.tags[token.value](tagged);\n    }\n    throw new Error(`${ decodeErrPrefix } tag not supported (${ token.value })`);\n  }\n  throw new Error('unsupported');\n}\nfunction decode(data, options) {\n  if (!(data instanceof Uint8Array)) {\n    throw new Error(`${ decodeErrPrefix } data to decode must be a Uint8Array`);\n  }\n  options = Object.assign({}, defaultDecodeOptions, options);\n  const tokeniser = options.tokenizer || new Tokeniser(data, options);\n  const decoded = tokensToObject(tokeniser, options);\n  if (decoded === DONE) {\n    throw new Error(`${ decodeErrPrefix } did not find any content to decode`);\n  }\n  if (decoded === BREAK) {\n    throw new Error(`${ decodeErrPrefix } got unexpected break`);\n  }\n  if (!tokeniser.done()) {\n    throw new Error(`${ decodeErrPrefix } too many terminals, data makes no sense`);\n  }\n  return decoded;\n}\nexport {\n  Tokeniser,\n  tokensToObject,\n  decode\n};","import * as cborg from 'cborg';\nimport { CID } from 'multiformats/cid';\nconst CID_CBOR_TAG = 42;\nfunction cidEncoder(obj) {\n  if (obj.asCID !== obj) {\n    return null;\n  }\n  const cid = CID.asCID(obj);\n  if (!cid) {\n    return null;\n  }\n  const bytes = new Uint8Array(cid.bytes.byteLength + 1);\n  bytes.set(cid.bytes, 1);\n  return [\n    new cborg.Token(cborg.Type.tag, CID_CBOR_TAG),\n    new cborg.Token(cborg.Type.bytes, bytes)\n  ];\n}\nfunction undefinedEncoder() {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded');\n}\nfunction numberEncoder(num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  return null;\n}\nconst encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n};\nfunction cidDecoder(bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00');\n  }\n  return CID.decode(bytes.subarray(1));\n}\nconst decodeOptions = {\n  allowIndefinite: false,\n  allowUndefined: false,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true,\n  strict: true,\n  useMaps: false,\n  tags: []\n};\ndecodeOptions.tags[CID_CBOR_TAG] = cidDecoder;\nexport const name = 'dag-cbor';\nexport const code = 113;\nexport const encode = node => cborg.encode(node, encodeOptions);\nexport const decode = data => cborg.decode(data, decodeOptions);","import varint from 'varint';\nimport { CID } from 'multiformats/cid';\nimport * as Digest from 'multiformats/hashes/digest';\nimport { decode as decodeDagCbor } from '@ipld/dag-cbor';\nconst CIDV0_BYTES = {\n  SHA2_256: 18,\n  LENGTH: 32,\n  DAG_PB: 112\n};\nasync function readVarint(reader) {\n  const bytes = await reader.upTo(8);\n  const i = varint.decode(bytes);\n  reader.seek(varint.decode.bytes);\n  return i;\n}\nexport async function readHeader(reader) {\n  const length = await readVarint(reader);\n  if (length === 0) {\n    throw new Error('Invalid CAR header (zero length)');\n  }\n  const header = await reader.exactly(length);\n  reader.seek(length);\n  const block = decodeDagCbor(header);\n  if (block == null || Array.isArray(block) || typeof block !== 'object') {\n    throw new Error('Invalid CAR header format');\n  }\n  if (block.version !== 1) {\n    if (typeof block.version === 'string') {\n      throw new Error(`Invalid CAR version: \"${ block.version }\"`);\n    }\n    throw new Error(`Invalid CAR version: ${ block.version }`);\n  }\n  if (!Array.isArray(block.roots)) {\n    throw new Error('Invalid CAR header format');\n  }\n  if (Object.keys(block).filter(p => p !== 'roots' && p !== 'version').length) {\n    throw new Error('Invalid CAR header format');\n  }\n  return block;\n}\nasync function readMultihash(reader) {\n  const bytes = await reader.upTo(8);\n  varint.decode(bytes);\n  const codeLength = varint.decode.bytes;\n  const length = varint.decode(bytes.subarray(varint.decode.bytes));\n  const lengthLength = varint.decode.bytes;\n  const mhLength = codeLength + lengthLength + length;\n  const multihash = await reader.exactly(mhLength);\n  reader.seek(mhLength);\n  return multihash;\n}\nasync function readCid(reader) {\n  const first = await reader.exactly(2);\n  if (first[0] === CIDV0_BYTES.SHA2_256 && first[1] === CIDV0_BYTES.LENGTH) {\n    const bytes = await reader.exactly(34);\n    reader.seek(34);\n    const multihash = Digest.decode(bytes);\n    return CID.create(0, CIDV0_BYTES.DAG_PB, multihash);\n  }\n  const version = await readVarint(reader);\n  if (version !== 1) {\n    throw new Error(`Unexpected CID version (${ version })`);\n  }\n  const codec = await readVarint(reader);\n  const bytes = await readMultihash(reader);\n  const multihash = Digest.decode(bytes);\n  return CID.create(version, codec, multihash);\n}\nasync function readBlockHead(reader) {\n  const start = reader.pos;\n  let length = await readVarint(reader);\n  if (length === 0) {\n    throw new Error('Invalid CAR section (zero length)');\n  }\n  length += reader.pos - start;\n  const cid = await readCid(reader);\n  const blockLength = length - (reader.pos - start);\n  return {\n    cid,\n    length,\n    blockLength\n  };\n}\nasync function readBlock(reader) {\n  const {cid, blockLength} = await readBlockHead(reader);\n  const bytes = await reader.exactly(blockLength);\n  reader.seek(blockLength);\n  return {\n    bytes,\n    cid\n  };\n}\nasync function readBlockIndex(reader) {\n  const offset = reader.pos;\n  const {cid, length, blockLength} = await readBlockHead(reader);\n  const index = {\n    cid,\n    length,\n    blockLength,\n    offset,\n    blockOffset: reader.pos\n  };\n  reader.seek(index.blockLength);\n  return index;\n}\nexport function createDecoder(reader) {\n  const headerPromise = readHeader(reader);\n  return {\n    header: () => headerPromise,\n    async *blocks() {\n      await headerPromise;\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlock(reader);\n      }\n    },\n    async *blocksIndex() {\n      await headerPromise;\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlockIndex(reader);\n      }\n    }\n  };\n}\nexport function bytesReader(bytes) {\n  let pos = 0;\n  return {\n    async upTo(length) {\n      return bytes.subarray(pos, pos + Math.min(length, bytes.length - pos));\n    },\n    async exactly(length) {\n      if (length > bytes.length - pos) {\n        throw new Error('Unexpected end of data');\n      }\n      return bytes.subarray(pos, pos + length);\n    },\n    seek(length) {\n      pos += length;\n    },\n    get pos() {\n      return pos;\n    }\n  };\n}\nexport function chunkReader(readChunk) {\n  let pos = 0;\n  let have = 0;\n  let offset = 0;\n  let currentChunk = new Uint8Array(0);\n  const read = async length => {\n    have = currentChunk.length - offset;\n    const bufa = [currentChunk.subarray(offset)];\n    while (have < length) {\n      const chunk = await readChunk();\n      if (chunk == null) {\n        break;\n      }\n      if (have < 0) {\n        if (chunk.length > have) {\n          bufa.push(chunk.subarray(-have));\n        }\n      } else {\n        bufa.push(chunk);\n      }\n      have += chunk.length;\n    }\n    currentChunk = new Uint8Array(bufa.reduce((p, c) => p + c.length, 0));\n    let off = 0;\n    for (const b of bufa) {\n      currentChunk.set(b, off);\n      off += b.length;\n    }\n    offset = 0;\n  };\n  return {\n    async upTo(length) {\n      if (currentChunk.length - offset < length) {\n        await read(length);\n      }\n      return currentChunk.subarray(offset, offset + Math.min(currentChunk.length - offset, length));\n    },\n    async exactly(length) {\n      if (currentChunk.length - offset < length) {\n        await read(length);\n      }\n      if (currentChunk.length - offset < length) {\n        throw new Error('Unexpected end of data');\n      }\n      return currentChunk.subarray(offset, offset + length);\n    },\n    seek(length) {\n      pos += length;\n      offset += length;\n    },\n    get pos() {\n      return pos;\n    }\n  };\n}\nexport function asyncIterableReader(asyncIterable) {\n  const iterator = asyncIterable[Symbol.asyncIterator]();\n  async function readChunk() {\n    const next = await iterator.next();\n    if (next.done) {\n      return null;\n    }\n    return next.value;\n  }\n  return chunkReader(readChunk);\n}","import {\n  asyncIterableReader,\n  bytesReader,\n  createDecoder\n} from './decoder.js';\nexport class CarReader {\n  constructor(version, roots, blocks) {\n    this._version = version;\n    this._roots = roots;\n    this._blocks = blocks;\n    this._keys = blocks.map(b => b.cid.toString());\n  }\n  get version() {\n    return this._version;\n  }\n  async getRoots() {\n    return this._roots;\n  }\n  async has(key) {\n    return this._keys.indexOf(key.toString()) > -1;\n  }\n  async get(key) {\n    const index = this._keys.indexOf(key.toString());\n    return index > -1 ? this._blocks[index] : undefined;\n  }\n  async *blocks() {\n    for (const block of this._blocks) {\n      yield block;\n    }\n  }\n  async *cids() {\n    for (const block of this._blocks) {\n      yield block.cid;\n    }\n  }\n  static async fromBytes(bytes) {\n    if (!(bytes instanceof Uint8Array)) {\n      throw new TypeError('fromBytes() requires a Uint8Array');\n    }\n    return decodeReaderComplete(bytesReader(bytes));\n  }\n  static async fromIterable(asyncIterable) {\n    if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n      throw new TypeError('fromIterable() requires an async iterable');\n    }\n    return decodeReaderComplete(asyncIterableReader(asyncIterable));\n  }\n}\nasync function decodeReaderComplete(reader) {\n  const decoder = createDecoder(reader);\n  const {version, roots} = await decoder.header();\n  const blocks = [];\n  for await (const block of decoder.blocks()) {\n    blocks.push(block);\n  }\n  return new CarReader(version, roots, blocks);\n}\nexport const __browser = true;","import {\n  asyncIterableReader,\n  bytesReader,\n  createDecoder\n} from './decoder.js';\nexport class CarIteratorBase {\n  constructor(version, roots, iterable) {\n    this._version = version;\n    this._roots = roots;\n    this._iterable = iterable;\n    this._decoded = false;\n  }\n  get version() {\n    return this._version;\n  }\n  async getRoots() {\n    return this._roots;\n  }\n}\nexport class CarBlockIterator extends CarIteratorBase {\n  [Symbol.asyncIterator]() {\n    if (this._decoded) {\n      throw new Error('Cannot decode more than once');\n    }\n    if (!this._iterable) {\n      throw new Error('Block iterable not found');\n    }\n    this._decoded = true;\n    return this._iterable[Symbol.asyncIterator]();\n  }\n  static async fromBytes(bytes) {\n    const {version, roots, iterator} = await fromBytes(bytes);\n    return new CarBlockIterator(version, roots, iterator);\n  }\n  static async fromIterable(asyncIterable) {\n    const {version, roots, iterator} = await fromIterable(asyncIterable);\n    return new CarBlockIterator(version, roots, iterator);\n  }\n}\nexport class CarCIDIterator extends CarIteratorBase {\n  [Symbol.asyncIterator]() {\n    if (this._decoded) {\n      throw new Error('Cannot decode more than once');\n    }\n    if (!this._iterable) {\n      throw new Error('Block iterable not found');\n    }\n    this._decoded = true;\n    const iterable = this._iterable[Symbol.asyncIterator]();\n    return {\n      async next() {\n        const next = await iterable.next();\n        if (next.done) {\n          return next;\n        }\n        return {\n          done: false,\n          value: next.value.cid\n        };\n      }\n    };\n  }\n  static async fromBytes(bytes) {\n    const {version, roots, iterator} = await fromBytes(bytes);\n    return new CarCIDIterator(version, roots, iterator);\n  }\n  static async fromIterable(asyncIterable) {\n    const {version, roots, iterator} = await fromIterable(asyncIterable);\n    return new CarCIDIterator(version, roots, iterator);\n  }\n}\nasync function fromBytes(bytes) {\n  if (!(bytes instanceof Uint8Array)) {\n    throw new TypeError('fromBytes() requires a Uint8Array');\n  }\n  return decodeIterator(bytesReader(bytes));\n}\nasync function fromIterable(asyncIterable) {\n  if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n    throw new TypeError('fromIterable() requires an async iterable');\n  }\n  return decodeIterator(asyncIterableReader(asyncIterable));\n}\nasync function decodeIterator(reader) {\n  const decoder = createDecoder(reader);\n  const {version, roots} = await decoder.header();\n  return {\n    version,\n    roots,\n    iterator: decoder.blocks()\n  };\n}","import varint from 'varint';\nimport { encode as dagCborEncode } from '@ipld/dag-cbor';\nexport function createHeader(roots) {\n  const headerBytes = dagCborEncode({\n    version: 1,\n    roots\n  });\n  const varintBytes = varint.encode(headerBytes.length);\n  const header = new Uint8Array(varintBytes.length + headerBytes.length);\n  header.set(varintBytes, 0);\n  header.set(headerBytes, varintBytes.length);\n  return header;\n}\nfunction createEncoder(writer) {\n  return {\n    async setRoots(roots) {\n      const bytes = createHeader(roots);\n      await writer.write(bytes);\n    },\n    async writeBlock(block) {\n      const {cid, bytes} = block;\n      await writer.write(new Uint8Array(varint.encode(cid.bytes.length + bytes.length)));\n      await writer.write(cid.bytes);\n      if (bytes.length) {\n        await writer.write(bytes);\n      }\n    },\n    async close() {\n      return writer.end();\n    }\n  };\n}\nexport {\n  createEncoder\n};","function noop() {\n}\nexport function create() {\n  const chunkQueue = [];\n  let drainer = null;\n  let drainerResolver = noop;\n  let ended = false;\n  let outWait = null;\n  let outWaitResolver = noop;\n  const makeDrainer = () => {\n    if (!drainer) {\n      drainer = new Promise(resolve => {\n        drainerResolver = () => {\n          drainer = null;\n          drainerResolver = noop;\n          resolve();\n        };\n      });\n    }\n    return drainer;\n  };\n  const writer = {\n    write(chunk) {\n      chunkQueue.push(chunk);\n      const drainer = makeDrainer();\n      outWaitResolver();\n      return drainer;\n    },\n    async end() {\n      ended = true;\n      const drainer = makeDrainer();\n      outWaitResolver();\n      return drainer;\n    }\n  };\n  const iterator = {\n    async next() {\n      const chunk = chunkQueue.shift();\n      if (chunk) {\n        if (chunkQueue.length === 0) {\n          drainerResolver();\n        }\n        return {\n          done: false,\n          value: chunk\n        };\n      }\n      if (ended) {\n        drainerResolver();\n        return {\n          done: true,\n          value: undefined\n        };\n      }\n      if (!outWait) {\n        outWait = new Promise(resolve => {\n          outWaitResolver = () => {\n            outWait = null;\n            outWaitResolver = noop;\n            return resolve(iterator.next());\n          };\n        });\n      }\n      return outWait;\n    }\n  };\n  return {\n    writer,\n    iterator\n  };\n}","import { CID } from 'multiformats/cid';\nimport {\n  createEncoder,\n  createHeader\n} from './encoder.js';\nimport { create as iteratorChannel } from './iterator-channel.js';\nimport {\n  bytesReader,\n  readHeader\n} from './decoder.js';\nexport class CarWriter {\n  constructor(roots, encoder) {\n    this._encoder = encoder;\n    this._mutex = encoder.setRoots(roots);\n    this._ended = false;\n  }\n  async put(block) {\n    if (!(block.bytes instanceof Uint8Array) || !block.cid) {\n      throw new TypeError('Can only write {cid, bytes} objects');\n    }\n    if (this._ended) {\n      throw new Error('Already closed');\n    }\n    const cid = CID.asCID(block.cid);\n    if (!cid) {\n      throw new TypeError('Can only write {cid, bytes} objects');\n    }\n    this._mutex = this._mutex.then(() => this._encoder.writeBlock({\n      cid,\n      bytes: block.bytes\n    }));\n    return this._mutex;\n  }\n  async close() {\n    if (this._ended) {\n      throw new Error('Already closed');\n    }\n    await this._mutex;\n    this._ended = true;\n    return this._encoder.close();\n  }\n  static create(roots) {\n    roots = toRoots(roots);\n    const {encoder, iterator} = encodeWriter();\n    const writer = new CarWriter(roots, encoder);\n    const out = new CarWriterOut(iterator);\n    return {\n      writer,\n      out\n    };\n  }\n  static createAppender() {\n    const {encoder, iterator} = encodeWriter();\n    encoder.setRoots = () => Promise.resolve();\n    const writer = new CarWriter([], encoder);\n    const out = new CarWriterOut(iterator);\n    return {\n      writer,\n      out\n    };\n  }\n  static async updateRootsInBytes(bytes, roots) {\n    const reader = bytesReader(bytes);\n    await readHeader(reader);\n    const newHeader = createHeader(roots);\n    if (reader.pos !== newHeader.length) {\n      throw new Error(`updateRoots() can only overwrite a header of the same length (old header is ${ reader.pos } bytes, new header is ${ newHeader.length } bytes)`);\n    }\n    bytes.set(newHeader, 0);\n    return bytes;\n  }\n}\nexport class CarWriterOut {\n  constructor(iterator) {\n    this._iterator = iterator;\n  }\n  [Symbol.asyncIterator]() {\n    if (this._iterating) {\n      throw new Error('Multiple iterator not supported');\n    }\n    this._iterating = true;\n    return this._iterator;\n  }\n}\nfunction encodeWriter() {\n  const iw = iteratorChannel();\n  const {writer, iterator} = iw;\n  const encoder = createEncoder(writer);\n  return {\n    encoder,\n    iterator\n  };\n}\nfunction toRoots(roots) {\n  if (roots === undefined) {\n    return [];\n  }\n  if (!Array.isArray(roots)) {\n    const cid = CID.asCID(roots);\n    if (!cid) {\n      throw new TypeError('roots must be a single CID or an array of CIDs');\n    }\n    return [cid];\n  }\n  const _roots = [];\n  for (const root of roots) {\n    const _root = CID.asCID(root);\n    if (!_root) {\n      throw new TypeError('roots must be a single CID or an array of CIDs');\n    }\n    _roots.push(_root);\n  }\n  return _roots;\n}\nexport const __browser = true;","'use strict'\n\n/**\n * Takes an (async) iterable that emits things and returns an async iterable that\n * emits those things in fixed-sized batches.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {number} [size=1]\n * @returns {AsyncIterable<T[]>}\n */\nasync function * batch (source, size = 1) {\n  /** @type {T[]} */\n  let things = []\n\n  if (size < 1) {\n    size = 1\n  }\n\n  for await (const thing of source) {\n    things.push(thing)\n\n    while (things.length >= size) {\n      yield things.slice(0, size)\n\n      things = things.slice(size)\n    }\n  }\n\n  while (things.length) {\n    yield things.slice(0, size)\n\n    things = things.slice(size)\n  }\n}\n\nmodule.exports = batch\n","'use strict'\n\nconst batch = require('it-batch')\n\n/**\n * @template T\n * @typedef {{ok:true, value:T}} Success\n */\n\n/**\n * @typedef {{ok:false, err:Error}} Failure\n */\n\n/**\n * Takes an (async) iterator that emits promise-returning functions,\n * invokes them in parallel and emits the results as they become available but\n * in the same order as the input\n *\n * @template T\n * @param {AsyncIterable<() => Promise<T>>} source\n * @param {number} [size=1]\n * @returns {AsyncIterable<T>}\n */\nasync function * parallelBatch (source, size = 1) {\n  for await (const tasks of batch(source, size)) {\n    /** @type {Promise<Success<T>|Failure>[]} */\n    const things = tasks.map(\n      /**\n       * @param {() => Promise<T>} p\n       */\n      p => {\n        return p().then(value => ({ ok: true, value }), err => ({ ok: false, err }))\n      })\n\n    for (let i = 0; i < things.length; i++) {\n      const result = await things[i]\n\n      if (result.ok) {\n        yield result.value\n      } else {\n        throw result.err\n      }\n    }\n  }\n}\n\nmodule.exports = parallelBatch\n","'use strict';\n\nmodule.exports = value => {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n};\n","'use strict';\nconst isOptionObject = require('is-plain-obj');\n\nconst {hasOwnProperty} = Object.prototype;\nconst {propertyIsEnumerable} = Object;\nconst defineProperty = (object, name, value) => Object.defineProperty(object, name, {\n\tvalue,\n\twritable: true,\n\tenumerable: true,\n\tconfigurable: true\n});\n\nconst globalThis = this;\nconst defaultMergeOptions = {\n\tconcatArrays: false,\n\tignoreUndefined: false\n};\n\nconst getEnumerableOwnPropertyKeys = value => {\n\tconst keys = [];\n\n\tfor (const key in value) {\n\t\tif (hasOwnProperty.call(value, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\n\t/* istanbul ignore else  */\n\tif (Object.getOwnPropertySymbols) {\n\t\tconst symbols = Object.getOwnPropertySymbols(value);\n\n\t\tfor (const symbol of symbols) {\n\t\t\tif (propertyIsEnumerable.call(value, symbol)) {\n\t\t\t\tkeys.push(symbol);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn keys;\n};\n\nfunction clone(value) {\n\tif (Array.isArray(value)) {\n\t\treturn cloneArray(value);\n\t}\n\n\tif (isOptionObject(value)) {\n\t\treturn cloneOptionObject(value);\n\t}\n\n\treturn value;\n}\n\nfunction cloneArray(array) {\n\tconst result = array.slice(0, 0);\n\n\tgetEnumerableOwnPropertyKeys(array).forEach(key => {\n\t\tdefineProperty(result, key, clone(array[key]));\n\t});\n\n\treturn result;\n}\n\nfunction cloneOptionObject(object) {\n\tconst result = Object.getPrototypeOf(object) === null ? Object.create(null) : {};\n\n\tgetEnumerableOwnPropertyKeys(object).forEach(key => {\n\t\tdefineProperty(result, key, clone(object[key]));\n\t});\n\n\treturn result;\n}\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {string[]} keys keys to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nconst mergeKeys = (merged, source, keys, config) => {\n\tkeys.forEach(key => {\n\t\tif (typeof source[key] === 'undefined' && config.ignoreUndefined) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not recurse into prototype chain of merged\n\t\tif (key in merged && merged[key] !== Object.getPrototypeOf(merged)) {\n\t\t\tdefineProperty(merged, key, merge(merged[key], source[key], config));\n\t\t} else {\n\t\t\tdefineProperty(merged, key, clone(source[key]));\n\t\t}\n\t});\n\n\treturn merged;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n *\n * see [Array.prototype.concat ( ...arguments )](http://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.concat)\n */\nconst concatArrays = (merged, source, config) => {\n\tlet result = merged.slice(0, 0);\n\tlet resultIndex = 0;\n\n\t[merged, source].forEach(array => {\n\t\tconst indices = [];\n\n\t\t// `result.concat(array)` with cloning\n\t\tfor (let k = 0; k < array.length; k++) {\n\t\t\tif (!hasOwnProperty.call(array, k)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tindices.push(String(k));\n\n\t\t\tif (array === merged) {\n\t\t\t\t// Already cloned\n\t\t\t\tdefineProperty(result, resultIndex++, array[k]);\n\t\t\t} else {\n\t\t\t\tdefineProperty(result, resultIndex++, clone(array[k]));\n\t\t\t}\n\t\t}\n\n\t\t// Merge non-index keys\n\t\tresult = mergeKeys(result, array, getEnumerableOwnPropertyKeys(array).filter(key => !indices.includes(key)), config);\n\t});\n\n\treturn result;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nfunction merge(merged, source, config) {\n\tif (config.concatArrays && Array.isArray(merged) && Array.isArray(source)) {\n\t\treturn concatArrays(merged, source, config);\n\t}\n\n\tif (!isOptionObject(source) || !isOptionObject(merged)) {\n\t\treturn clone(source);\n\t}\n\n\treturn mergeKeys(merged, source, getEnumerableOwnPropertyKeys(source), config);\n}\n\nmodule.exports = function (...options) {\n\tconst config = merge(clone(defaultMergeOptions), (this !== globalThis && this) || {}, defaultMergeOptions);\n\tlet merged = {_: {}};\n\n\tfor (const option of options) {\n\t\tif (option === undefined) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!isOptionObject(option)) {\n\t\t\tthrow new TypeError('`' + option + '` is not an Option Object');\n\t\t}\n\n\t\tmerged = merge(merged, {_: option}, config);\n\t}\n\n\treturn merged._;\n};\n","import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  async digest(input) {\n    if (input instanceof Uint8Array) {\n      const digest = await this.encode(input);\n      return Digest.create(this.code, digest);\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}","import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});","/* jshint -W086: true */\n// +----------------------------------------------------------------------+\n// | murmurHash3js.js v3.0.1 // https://github.com/pid/murmurHash3js\n// | A javascript implementation of MurmurHash3's x86 hashing algorithms. |\n// |----------------------------------------------------------------------|\n// | Copyright (c) 2012-2015 Karan Lyons                                       |\n// | https://github.com/karanlyons/murmurHash3.js/blob/c1778f75792abef7bdd74bc85d2d4e1a3d25cfe9/murmurHash3.js |\n// | Freely distributable under the MIT license.                          |\n// +----------------------------------------------------------------------+\n\n;(function (root, undefined) {\n    'use strict';\n\n    // Create a local object that'll be exported or referenced globally.\n    var library = {\n        'version': '3.0.0',\n        'x86': {},\n        'x64': {},\n        'inputValidation': true\n    };\n\n    // PRIVATE FUNCTIONS\n    // -----------------\n\n    function _validBytes(bytes) {\n        // check the input is an array or a typed array\n        if (!Array.isArray(bytes) && !ArrayBuffer.isView(bytes)) {\n            return false;\n        }\n\n        // check all bytes are actually bytes\n        for (var i = 0; i < bytes.length; i++) {\n            if (!Number.isInteger(bytes[i]) || bytes[i] < 0 || bytes[i] > 255) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function _x86Multiply(m, n) {\n        //\n        // Given two 32bit ints, returns the two multiplied together as a\n        // 32bit int.\n        //\n\n        return ((m & 0xffff) * n) + ((((m >>> 16) * n) & 0xffff) << 16);\n    }\n\n    function _x86Rotl(m, n) {\n        //\n        // Given a 32bit int and an int representing a number of bit positions,\n        // returns the 32bit int rotated left by that number of positions.\n        //\n\n        return (m << n) | (m >>> (32 - n));\n    }\n\n    function _x86Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x86 mix of that block.\n        //\n\n        h ^= h >>> 16;\n        h = _x86Multiply(h, 0x85ebca6b);\n        h ^= h >>> 13;\n        h = _x86Multiply(h, 0xc2b2ae35);\n        h ^= h >>> 16;\n\n        return h;\n    }\n\n    function _x64Add(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // added together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] + n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] + n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] + n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += m[0] + n[0];\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Multiply(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // multiplied together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] * n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] * n[3];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[2] += m[3] * n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] * n[3];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[2] * n[2];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[3] * n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += (m[0] * n[3]) + (m[1] * n[2]) + (m[2] * n[1]) + (m[3] * n[0]);\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Rotl(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) rotated left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 32) {\n            return [m[1], m[0]];\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), (m[1] << n) | (m[0] >>> (32 - n))];\n        } else {\n            n -= 32;\n            return [(m[1] << n) | (m[0] >>> (32 - n)), (m[0] << n) | (m[1] >>> (32 - n))];\n        }\n    }\n\n    function _x64LeftShift(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) shifted left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 0) {\n            return m;\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), m[1] << n];\n        } else {\n            return [m[1] << (n - 32), 0];\n        }\n    }\n\n    function _x64Xor(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // xored together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        return [m[0] ^ n[0], m[1] ^ n[1]];\n    }\n\n    function _x64Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x64 mix of that block.\n        // (`[0, h[0] >>> 1]` is a 33 bit unsigned right shift. This is the\n        // only place where we need to right shift 64bit ints.)\n        //\n\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xff51afd7, 0xed558ccd]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xc4ceb9fe, 0x1a85ec53]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n\n        return h;\n    }\n\n    // PUBLIC FUNCTIONS\n    // ----------------\n\n    library.x86.hash32 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 32 bit hash\n        // using the x86 flavor of MurmurHash3, as an unsigned int.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n        seed = seed || 0;\n\n        var remainder = bytes.length % 4;\n        var blocks = bytes.length - remainder;\n\n        var h1 = seed;\n\n        var k1 = 0;\n\n        var c1 = 0xcc9e2d51;\n        var c2 = 0x1b873593;\n\n        for (var i = 0; i < blocks; i = i + 4) {\n            k1 = (bytes[i]) | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n\n            h1 ^= k1;\n            h1 = _x86Rotl(h1, 13);\n            h1 = _x86Multiply(h1, 5) + 0xe6546b64;\n        }\n\n        k1 = 0;\n\n        switch (remainder) {\n            case 3:\n                k1 ^= bytes[i + 2] << 16;\n\n            case 2:\n                k1 ^= bytes[i + 1] << 8;\n\n            case 1:\n                k1 ^= bytes[i];\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= bytes.length;\n        h1 = _x86Fmix(h1);\n\n        return h1 >>> 0;\n    };\n\n    library.x86.hash128 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x86 flavor of MurmurHash3, as an unsigned hex.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n\n        seed = seed || 0;\n        var remainder = bytes.length % 16;\n        var blocks = bytes.length - remainder;\n\n        var h1 = seed;\n        var h2 = seed;\n        var h3 = seed;\n        var h4 = seed;\n\n        var k1 = 0;\n        var k2 = 0;\n        var k3 = 0;\n        var k4 = 0;\n\n        var c1 = 0x239b961b;\n        var c2 = 0xab0e9789;\n        var c3 = 0x38b34ae5;\n        var c4 = 0xa1e38b93;\n\n        for (var i = 0; i < blocks; i = i + 16) {\n            k1 = (bytes[i]) | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\n            k2 = (bytes[i + 4]) | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24);\n            k3 = (bytes[i + 8]) | (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24);\n            k4 = (bytes[i + 12]) | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n            h1 ^= k1;\n\n            h1 = _x86Rotl(h1, 19);\n            h1 += h2;\n            h1 = _x86Multiply(h1, 5) + 0x561ccd1b;\n\n            k2 = _x86Multiply(k2, c2);\n            k2 = _x86Rotl(k2, 16);\n            k2 = _x86Multiply(k2, c3);\n            h2 ^= k2;\n\n            h2 = _x86Rotl(h2, 17);\n            h2 += h3;\n            h2 = _x86Multiply(h2, 5) + 0x0bcaa747;\n\n            k3 = _x86Multiply(k3, c3);\n            k3 = _x86Rotl(k3, 17);\n            k3 = _x86Multiply(k3, c4);\n            h3 ^= k3;\n\n            h3 = _x86Rotl(h3, 15);\n            h3 += h4;\n            h3 = _x86Multiply(h3, 5) + 0x96cd1c35;\n\n            k4 = _x86Multiply(k4, c4);\n            k4 = _x86Rotl(k4, 18);\n            k4 = _x86Multiply(k4, c1);\n            h4 ^= k4;\n\n            h4 = _x86Rotl(h4, 13);\n            h4 += h1;\n            h4 = _x86Multiply(h4, 5) + 0x32ac3b17;\n        }\n\n        k1 = 0;\n        k2 = 0;\n        k3 = 0;\n        k4 = 0;\n\n        switch (remainder) {\n            case 15:\n                k4 ^= bytes[i + 14] << 16;\n\n            case 14:\n                k4 ^= bytes[i + 13] << 8;\n\n            case 13:\n                k4 ^= bytes[i + 12];\n                k4 = _x86Multiply(k4, c4);\n                k4 = _x86Rotl(k4, 18);\n                k4 = _x86Multiply(k4, c1);\n                h4 ^= k4;\n\n            case 12:\n                k3 ^= bytes[i + 11] << 24;\n\n            case 11:\n                k3 ^= bytes[i + 10] << 16;\n\n            case 10:\n                k3 ^= bytes[i + 9] << 8;\n\n            case 9:\n                k3 ^= bytes[i + 8];\n                k3 = _x86Multiply(k3, c3);\n                k3 = _x86Rotl(k3, 17);\n                k3 = _x86Multiply(k3, c4);\n                h3 ^= k3;\n\n            case 8:\n                k2 ^= bytes[i + 7] << 24;\n\n            case 7:\n                k2 ^= bytes[i + 6] << 16;\n\n            case 6:\n                k2 ^= bytes[i + 5] << 8;\n\n            case 5:\n                k2 ^= bytes[i + 4];\n                k2 = _x86Multiply(k2, c2);\n                k2 = _x86Rotl(k2, 16);\n                k2 = _x86Multiply(k2, c3);\n                h2 ^= k2;\n\n            case 4:\n                k1 ^= bytes[i + 3] << 24;\n\n            case 3:\n                k1 ^= bytes[i + 2] << 16;\n\n            case 2:\n                k1 ^= bytes[i + 1] << 8;\n\n            case 1:\n                k1 ^= bytes[i];\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= bytes.length;\n        h2 ^= bytes.length;\n        h3 ^= bytes.length;\n        h4 ^= bytes.length;\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        h1 = _x86Fmix(h1);\n        h2 = _x86Fmix(h2);\n        h3 = _x86Fmix(h3);\n        h4 = _x86Fmix(h4);\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        return (\"00000000\" + (h1 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h3 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h4 >>> 0).toString(16)).slice(-8);\n    };\n\n    library.x64.hash128 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x64 flavor of MurmurHash3, as an unsigned hex.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n        seed = seed || 0;\n\n        var remainder = bytes.length % 16;\n        var blocks = bytes.length - remainder;\n\n        var h1 = [0, seed];\n        var h2 = [0, seed];\n\n        var k1 = [0, 0];\n        var k2 = [0, 0];\n\n        var c1 = [0x87c37b91, 0x114253d5];\n        var c2 = [0x4cf5ad43, 0x2745937f];\n\n        for (var i = 0; i < blocks; i = i + 16) {\n            k1 = [(bytes[i + 4]) | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24), (bytes[i]) |\n                (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24)];\n            k2 = [(bytes[i + 12]) | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24), (bytes[i + 8]) |\n                (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24)];\n\n            k1 = _x64Multiply(k1, c1);\n            k1 = _x64Rotl(k1, 31);\n            k1 = _x64Multiply(k1, c2);\n            h1 = _x64Xor(h1, k1);\n\n            h1 = _x64Rotl(h1, 27);\n            h1 = _x64Add(h1, h2);\n            h1 = _x64Add(_x64Multiply(h1, [0, 5]), [0, 0x52dce729]);\n\n            k2 = _x64Multiply(k2, c2);\n            k2 = _x64Rotl(k2, 33);\n            k2 = _x64Multiply(k2, c1);\n            h2 = _x64Xor(h2, k2);\n\n            h2 = _x64Rotl(h2, 31);\n            h2 = _x64Add(h2, h1);\n            h2 = _x64Add(_x64Multiply(h2, [0, 5]), [0, 0x38495ab5]);\n        }\n\n        k1 = [0, 0];\n        k2 = [0, 0];\n\n        switch (remainder) {\n            case 15:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 14]], 48));\n\n            case 14:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 13]], 40));\n\n            case 13:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 12]], 32));\n\n            case 12:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 11]], 24));\n\n            case 11:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 10]], 16));\n\n            case 10:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 9]], 8));\n\n            case 9:\n                k2 = _x64Xor(k2, [0, bytes[i + 8]]);\n                k2 = _x64Multiply(k2, c2);\n                k2 = _x64Rotl(k2, 33);\n                k2 = _x64Multiply(k2, c1);\n                h2 = _x64Xor(h2, k2);\n\n            case 8:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 7]], 56));\n\n            case 7:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 6]], 48));\n\n            case 6:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 5]], 40));\n\n            case 5:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 4]], 32));\n\n            case 4:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 3]], 24));\n\n            case 3:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 2]], 16));\n\n            case 2:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 1]], 8));\n\n            case 1:\n                k1 = _x64Xor(k1, [0, bytes[i]]);\n                k1 = _x64Multiply(k1, c1);\n                k1 = _x64Rotl(k1, 31);\n                k1 = _x64Multiply(k1, c2);\n                h1 = _x64Xor(h1, k1);\n        }\n\n        h1 = _x64Xor(h1, [0, bytes.length]);\n        h2 = _x64Xor(h2, [0, bytes.length]);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        h1 = _x64Fmix(h1);\n        h2 = _x64Fmix(h2);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        return (\"00000000\" + (h1[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h1[1] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[1] >>> 0).toString(16)).slice(-8);\n    };\n\n    // INITIALIZATION\n    // --------------\n\n    // Export murmurHash3 for CommonJS, either as an AMD module or just as part\n    // of the global object.\n    if (typeof exports !== 'undefined') {\n\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = library;\n        }\n\n        exports.murmurHash3 = library;\n\n    } else if (typeof define === 'function' && define.amd) {\n\n        define([], function () {\n            return library;\n        });\n    } else {\n\n        // Use murmurHash3.noConflict to restore `murmurHash3` back to its\n        // original value. Returns a reference to the library object, to allow\n        // it to be used under a different name.\n        library._murmurHash3 = root.murmurHash3;\n\n        library.noConflict = function () {\n            root.murmurHash3 = library._murmurHash3;\n            library._murmurHash3 = undefined;\n            library.noConflict = undefined;\n\n            return library;\n        };\n\n        root.murmurHash3 = library;\n    }\n})(this);\n","module.exports = require('./lib/murmurHash3js');\n","import { from } from 'multiformats/hashes/hasher';\nimport { bytes } from 'multiformats';\nimport mur from 'murmurhash3js-revisited';\nfunction fromNumberTo32BitBuf(number) {\n  const bytes = new Array(4);\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 255;\n    number = number >> 8;\n  }\n  return new Uint8Array(bytes);\n}\nexport const murmur332 = from({\n  name: 'murmur3-32',\n  code: 35,\n  encode: input => fromNumberTo32BitBuf(mur.x86.hash32(input))\n});\nexport const murmur3128 = from({\n  name: 'murmur3-128',\n  code: 34,\n  encode: input => bytes.fromHex(mur.x64.hash128(input))\n});","import mergeOptions from 'merge-options';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { murmur3128 } from '@multiformats/murmur3';\nmergeOptions.bind({ ignoreUndefined: true });\nasync function hamtHashFn(buf) {\n  return (await murmur3128.encode(buf)).slice(0, 8).reverse();\n}\nconst defaultOptions = {\n  chunker: 'fixed',\n  strategy: 'balanced',\n  rawLeaves: false,\n  onlyHash: false,\n  reduceSingleLeafToSelf: true,\n  hasher: sha256,\n  leafType: 'file',\n  cidVersion: 0,\n  progress: () => () => {\n  },\n  shardSplitThreshold: 1000,\n  fileImportConcurrency: 50,\n  blockWriteConcurrency: 10,\n  minChunkSize: 262144,\n  maxChunkSize: 262144,\n  avgChunkSize: 262144,\n  window: 16,\n  polynomial: 17437180132763652,\n  maxChildrenPerNode: 174,\n  layerRepeat: 4,\n  wrapWithDirectory: false,\n  recursive: false,\n  hidden: false,\n  timeout: undefined,\n  hamtHashFn,\n  hamtHashCode: 34,\n  hamtBucketBits: 8\n};\nexport default (options = {}) => {\n  return mergeOptions(defaultOptions, options);\n};","import parallelBatch from 'it-parallel-batch';\nimport defaultOptions from './options.js';\nexport async function* importer(source, blockstore, options = {}) {\n  const opts = defaultOptions(options);\n  let dagBuilder;\n  if (typeof options.dagBuilder === 'function') {\n    dagBuilder = options.dagBuilder;\n  } else {\n    dagBuilder = (await import('./dag-builder/index.js')).default;\n  }\n  let treeBuilder;\n  if (typeof options.treeBuilder === 'function') {\n    treeBuilder = options.treeBuilder;\n  } else {\n    treeBuilder = (await import('./tree-builder.js')).default;\n  }\n  let candidates;\n  if (Symbol.asyncIterator in source || Symbol.iterator in source) {\n    candidates = source;\n  } else {\n    candidates = [source];\n  }\n  for await (const entry of treeBuilder(parallelBatch(dagBuilder(candidates, blockstore, opts), opts.fileImportConcurrency), blockstore, opts)) {\n    yield {\n      cid: entry.cid,\n      path: entry.path,\n      unixfs: entry.unixfs,\n      size: entry.size\n    };\n  }\n}","'use strict';\n\n/**\n * @typedef {{ [key: string]: any }} Extensions\n * @typedef {Error} Err\n * @property {string} message\n */\n\n/**\n *\n * @param {Error} obj\n * @param {Extensions} props\n * @returns {Error & Extensions}\n */\nfunction assign(obj, props) {\n    for (const key in props) {\n        Object.defineProperty(obj, key, {\n            value: props[key],\n            enumerable: true,\n            configurable: true,\n        });\n    }\n\n    return obj;\n}\n\n/**\n *\n * @param {any} err - An Error\n * @param {string|Extensions} code - A string code or props to set on the error\n * @param {Extensions} [props] - Props to set on the error\n * @returns {Error & Extensions}\n */\nfunction createError(err, code, props) {\n    if (!err || typeof err === 'string') {\n        throw new TypeError('Please pass an Error to err-code');\n    }\n\n    if (!props) {\n        props = {};\n    }\n\n    if (typeof code === 'object') {\n        props = code;\n        code = '';\n    }\n\n    if (code) {\n        props.code = code;\n    }\n\n    try {\n        return assign(err, props);\n    } catch (_) {\n        props.message = err.message;\n        props.stack = err.stack;\n\n        const ErrClass = function () {};\n\n        ErrClass.prototype = Object.create(Object.getPrototypeOf(err));\n\n        // @ts-ignore\n        const output = assign(new ErrClass(), props);\n\n        return output;\n    }\n}\n\nmodule.exports = createError;\n","import { from } from './base.js';\nimport {\n  fromString,\n  toString\n} from '../bytes.js';\nexport const identity = from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => toString(buf),\n  decode: str => fromString(str)\n});","import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});","import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});","import { baseX } from './base.js';\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});","import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});","import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});","import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});","import { from } from './hasher.js';\nimport { coerce } from '../bytes.js';\nexport const identity = from({\n  name: 'identity',\n  code: 0,\n  encode: input => coerce(input)\n});","import { coerce } from '../bytes.js';\nconst raw = bytes => coerce(bytes);\nexport const {name, code, encode, decode} = {\n  name: 'raw',\n  code: 85,\n  decode: raw,\n  encode: raw\n};","import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};","import { bases } from 'multiformats/basics';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;","import bases from './util/bases.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}","'use strict'\n\n/**\n * Turns a browser readable stream into an async iterable. Async iteration over\n * returned iterable will lock give stream, preventing any other consumer from\n * acquiring a reader. The lock will be released if iteration loop is broken. To\n * prevent stream cancelling optional `{ preventCancel: true }` could be passed\n * as a second argument.\n * @template T\n * @param {ReadableStream<T>} stream\n * @param {Object} [options]\n * @param {boolean} [options.preventCancel=boolean]\n * @returns {AsyncIterable<T>}\n */\nasync function * browserReadableStreamToIt (stream, options = {}) {\n  const reader = stream.getReader()\n\n  try {\n    while (true) {\n      const result = await reader.read()\n\n      if (result.done) {\n        return\n      }\n\n      yield result.value\n    }\n  } finally {\n    if (options.preventCancel !== true) {\n      reader.cancel()\n    }\n\n    reader.releaseLock()\n  }\n}\n\nmodule.exports = browserReadableStreamToIt\n","/* eslint-env browser */\n\n'use strict'\n\nconst browserReadableStreamToIt = require('browser-readablestream-to-it')\n\n/**\n * @param {Blob} blob\n * @returns {AsyncIterable<Uint8Array>}\n */\nfunction blobToIt (blob) {\n  if (typeof blob.stream === 'function') {\n    return browserReadableStreamToIt(blob.stream())\n  }\n\n  // firefox < 69 does not support blob.stream()\n  // @ts-ignore - response.body is optional, but in practice it's a stream.\n  return browserReadableStreamToIt(new Response(blob).body)\n}\n\nmodule.exports = blobToIt\n","'use strict'\n\n/**\n * @template T\n * @typedef {Object} Peek\n * @property {() => IteratorResult<T, void>} peek\n */\n\n/**\n * @template T\n * @typedef {Object} AsyncPeek\n * @property {() => Promise<IteratorResult<T, void>>} peek\n */\n\n/**\n * @template T\n * @typedef {Object} Push\n * @property {(value:T) => void} push\n */\n\n/**\n * @template T\n * @typedef {Iterable<T> & Peek<T> & Push<T> & Iterator<T>} Peekable<T>\n */\n\n/**\n * @template T\n * @typedef {AsyncIterable<T> & AsyncPeek<T> & Push<T> & AsyncIterator<T>} AsyncPeekable<T>\n */\n\n/**\n * @template {Iterable<any> | AsyncIterable<any>} I\n * @param {I} iterable\n * @returns {I extends Iterable<infer T>\n *  ? Peekable<T>\n *  : I extends AsyncIterable<infer T>\n *  ? AsyncPeekable<T>\n *  : never\n * }\n */\nfunction peekableIterator (iterable) {\n  // @ts-ignore\n  const [iterator, symbol] = iterable[Symbol.asyncIterator]\n    // @ts-ignore\n    ? [iterable[Symbol.asyncIterator](), Symbol.asyncIterator]\n    // @ts-ignore\n    : [iterable[Symbol.iterator](), Symbol.iterator]\n\n  /** @type {any[]} */\n  const queue = []\n\n  // @ts-ignore\n  return {\n    peek: () => {\n      return iterator.next()\n    },\n    push: (value) => {\n      queue.push(value)\n    },\n    next: () => {\n      if (queue.length) {\n        return {\n          done: false,\n          value: queue.shift()\n        }\n      }\n\n      return iterator.next()\n    },\n    [symbol] () {\n      return this\n    }\n  }\n}\n\nmodule.exports = peekableIterator\n","'use strict'\n\n/**\n * Collects all values from an (async) iterable into an array and returns it.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst all = async (source) => {\n  const arr = []\n\n  for await (const entry of source) {\n    arr.push(entry)\n  }\n\n  return arr\n}\n\nmodule.exports = all\n","'use strict'\n\n/**\n * Takes an (async) iterable and returns one with each item mapped by the passed\n * function.\n *\n * @template I,O\n * @param {AsyncIterable<I>|Iterable<I>} source\n * @param {function(I):O|Promise<O>} func\n * @returns {AsyncIterable<O>}\n */\nconst map = async function * (source, func) {\n  for await (const val of source) {\n    yield func(val)\n  }\n}\n\nmodule.exports = map\n","'use strict'\n\n/**\n * @param {any} obj\n * @returns {obj is ArrayBufferView|ArrayBuffer}\n */\nfunction isBytes (obj) {\n  return ArrayBuffer.isView(obj) || obj instanceof ArrayBuffer\n}\n\n/**\n * @param {any} obj\n * @returns {obj is globalThis.Blob}\n */\nfunction isBlob (obj) {\n  return obj.constructor &&\n    (obj.constructor.name === 'Blob' || obj.constructor.name === 'File') &&\n    typeof obj.stream === 'function'\n}\n\n/**\n * An object with a path or content property\n *\n * @param {any} obj\n * @returns {obj is import('ipfs-core-types/src/utils').ImportCandidate}\n */\nfunction isFileObject (obj) {\n  return typeof obj === 'object' && (obj.path || obj.content)\n}\n\n/**\n * @param {any} value\n * @returns {value is ReadableStream}\n */\nconst isReadableStream = (value) =>\n  value && typeof value.getReader === 'function'\n\nmodule.exports = {\n  isBytes,\n  isBlob,\n  isFileObject,\n  isReadableStream\n}\n","'use strict'\n\nconst errCode = require('err-code')\nconst { fromString: uint8ArrayFromString } = require('uint8arrays/from-string')\nconst browserStreamToIt = require('browser-readablestream-to-it')\nconst blobToIt = require('blob-to-it')\nconst itPeekable = require('it-peekable')\nconst all = require('it-all')\nconst map = require('it-map')\nconst {\n  isBytes,\n  isReadableStream,\n  isBlob\n} = require('./utils')\n\n/**\n * @param {import('./normalise-input').ToContent} input\n */\nasync function * toAsyncIterable (input) {\n  // Bytes | String\n  if (isBytes(input)) {\n    yield toBytes(input)\n    return\n  }\n\n  if (typeof input === 'string' || input instanceof String) {\n    yield toBytes(input.toString())\n    return\n  }\n\n  // Blob\n  if (isBlob(input)) {\n    yield * blobToIt(input)\n    return\n  }\n\n  // Browser stream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // (Async)Iterator<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    /** @type {any} peekable */\n    const peekable = itPeekable(input)\n\n    /** @type {any} value */\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      yield * []\n      return\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    if (Number.isInteger(value)) {\n      yield Uint8Array.from((await all(peekable)))\n      return\n    }\n\n    // (Async)Iterable<Bytes|String>\n    if (isBytes(value) || typeof value === 'string' || value instanceof String) {\n      yield * map(peekable, toBytes)\n      return\n    }\n  }\n\n  throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {ArrayBuffer | ArrayBufferView | string | InstanceType<typeof window.String> | number[]} chunk\n */\nfunction toBytes (chunk) {\n  if (chunk instanceof Uint8Array) {\n    return chunk\n  }\n\n  if (ArrayBuffer.isView(chunk)) {\n    return new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength)\n  }\n\n  if (chunk instanceof ArrayBuffer) {\n    return new Uint8Array(chunk)\n  }\n\n  if (Array.isArray(chunk)) {\n    return Uint8Array.from(chunk)\n  }\n\n  return uint8ArrayFromString(chunk.toString())\n}\n\nmodule.exports = toAsyncIterable\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","import $protobuf from 'protobufjs/minimal.js';\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\nconst $root = $protobuf.roots['ipfs-unixfs'] || ($protobuf.roots['ipfs-unixfs'] = {});\nexport const Data = $root.Data = (() => {\n  function Data(p) {\n    this.blocksizes = [];\n    if (p)\n      for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n        if (p[ks[i]] != null)\n          this[ks[i]] = p[ks[i]];\n  }\n  Data.prototype.Type = 0;\n  Data.prototype.Data = $util.newBuffer([]);\n  Data.prototype.filesize = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  Data.prototype.blocksizes = $util.emptyArray;\n  Data.prototype.hashType = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  Data.prototype.fanout = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  Data.prototype.mode = 0;\n  Data.prototype.mtime = null;\n  Data.encode = function encode(m, w) {\n    if (!w)\n      w = $Writer.create();\n    w.uint32(8).int32(m.Type);\n    if (m.Data != null && Object.hasOwnProperty.call(m, 'Data'))\n      w.uint32(18).bytes(m.Data);\n    if (m.filesize != null && Object.hasOwnProperty.call(m, 'filesize'))\n      w.uint32(24).uint64(m.filesize);\n    if (m.blocksizes != null && m.blocksizes.length) {\n      for (var i = 0; i < m.blocksizes.length; ++i)\n        w.uint32(32).uint64(m.blocksizes[i]);\n    }\n    if (m.hashType != null && Object.hasOwnProperty.call(m, 'hashType'))\n      w.uint32(40).uint64(m.hashType);\n    if (m.fanout != null && Object.hasOwnProperty.call(m, 'fanout'))\n      w.uint32(48).uint64(m.fanout);\n    if (m.mode != null && Object.hasOwnProperty.call(m, 'mode'))\n      w.uint32(56).uint32(m.mode);\n    if (m.mtime != null && Object.hasOwnProperty.call(m, 'mtime'))\n      $root.UnixTime.encode(m.mtime, w.uint32(66).fork()).ldelim();\n    return w;\n  };\n  Data.decode = function decode(r, l) {\n    if (!(r instanceof $Reader))\n      r = $Reader.create(r);\n    var c = l === undefined ? r.len : r.pos + l, m = new $root.Data();\n    while (r.pos < c) {\n      var t = r.uint32();\n      switch (t >>> 3) {\n      case 1:\n        m.Type = r.int32();\n        break;\n      case 2:\n        m.Data = r.bytes();\n        break;\n      case 3:\n        m.filesize = r.uint64();\n        break;\n      case 4:\n        if (!(m.blocksizes && m.blocksizes.length))\n          m.blocksizes = [];\n        if ((t & 7) === 2) {\n          var c2 = r.uint32() + r.pos;\n          while (r.pos < c2)\n            m.blocksizes.push(r.uint64());\n        } else\n          m.blocksizes.push(r.uint64());\n        break;\n      case 5:\n        m.hashType = r.uint64();\n        break;\n      case 6:\n        m.fanout = r.uint64();\n        break;\n      case 7:\n        m.mode = r.uint32();\n        break;\n      case 8:\n        m.mtime = $root.UnixTime.decode(r, r.uint32());\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n      }\n    }\n    if (!m.hasOwnProperty('Type'))\n      throw $util.ProtocolError('missing required \\'Type\\'', { instance: m });\n    return m;\n  };\n  Data.fromObject = function fromObject(d) {\n    if (d instanceof $root.Data)\n      return d;\n    var m = new $root.Data();\n    switch (d.Type) {\n    case 'Raw':\n    case 0:\n      m.Type = 0;\n      break;\n    case 'Directory':\n    case 1:\n      m.Type = 1;\n      break;\n    case 'File':\n    case 2:\n      m.Type = 2;\n      break;\n    case 'Metadata':\n    case 3:\n      m.Type = 3;\n      break;\n    case 'Symlink':\n    case 4:\n      m.Type = 4;\n      break;\n    case 'HAMTShard':\n    case 5:\n      m.Type = 5;\n      break;\n    }\n    if (d.Data != null) {\n      if (typeof d.Data === 'string')\n        $util.base64.decode(d.Data, m.Data = $util.newBuffer($util.base64.length(d.Data)), 0);\n      else if (d.Data.length)\n        m.Data = d.Data;\n    }\n    if (d.filesize != null) {\n      if ($util.Long)\n        (m.filesize = $util.Long.fromValue(d.filesize)).unsigned = true;\n      else if (typeof d.filesize === 'string')\n        m.filesize = parseInt(d.filesize, 10);\n      else if (typeof d.filesize === 'number')\n        m.filesize = d.filesize;\n      else if (typeof d.filesize === 'object')\n        m.filesize = new $util.LongBits(d.filesize.low >>> 0, d.filesize.high >>> 0).toNumber(true);\n    }\n    if (d.blocksizes) {\n      if (!Array.isArray(d.blocksizes))\n        throw TypeError('.Data.blocksizes: array expected');\n      m.blocksizes = [];\n      for (var i = 0; i < d.blocksizes.length; ++i) {\n        if ($util.Long)\n          (m.blocksizes[i] = $util.Long.fromValue(d.blocksizes[i])).unsigned = true;\n        else if (typeof d.blocksizes[i] === 'string')\n          m.blocksizes[i] = parseInt(d.blocksizes[i], 10);\n        else if (typeof d.blocksizes[i] === 'number')\n          m.blocksizes[i] = d.blocksizes[i];\n        else if (typeof d.blocksizes[i] === 'object')\n          m.blocksizes[i] = new $util.LongBits(d.blocksizes[i].low >>> 0, d.blocksizes[i].high >>> 0).toNumber(true);\n      }\n    }\n    if (d.hashType != null) {\n      if ($util.Long)\n        (m.hashType = $util.Long.fromValue(d.hashType)).unsigned = true;\n      else if (typeof d.hashType === 'string')\n        m.hashType = parseInt(d.hashType, 10);\n      else if (typeof d.hashType === 'number')\n        m.hashType = d.hashType;\n      else if (typeof d.hashType === 'object')\n        m.hashType = new $util.LongBits(d.hashType.low >>> 0, d.hashType.high >>> 0).toNumber(true);\n    }\n    if (d.fanout != null) {\n      if ($util.Long)\n        (m.fanout = $util.Long.fromValue(d.fanout)).unsigned = true;\n      else if (typeof d.fanout === 'string')\n        m.fanout = parseInt(d.fanout, 10);\n      else if (typeof d.fanout === 'number')\n        m.fanout = d.fanout;\n      else if (typeof d.fanout === 'object')\n        m.fanout = new $util.LongBits(d.fanout.low >>> 0, d.fanout.high >>> 0).toNumber(true);\n    }\n    if (d.mode != null) {\n      m.mode = d.mode >>> 0;\n    }\n    if (d.mtime != null) {\n      if (typeof d.mtime !== 'object')\n        throw TypeError('.Data.mtime: object expected');\n      m.mtime = $root.UnixTime.fromObject(d.mtime);\n    }\n    return m;\n  };\n  Data.toObject = function toObject(m, o) {\n    if (!o)\n      o = {};\n    var d = {};\n    if (o.arrays || o.defaults) {\n      d.blocksizes = [];\n    }\n    if (o.defaults) {\n      d.Type = o.enums === String ? 'Raw' : 0;\n      if (o.bytes === String)\n        d.Data = '';\n      else {\n        d.Data = [];\n        if (o.bytes !== Array)\n          d.Data = $util.newBuffer(d.Data);\n      }\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, true);\n        d.filesize = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else\n        d.filesize = o.longs === String ? '0' : 0;\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, true);\n        d.hashType = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else\n        d.hashType = o.longs === String ? '0' : 0;\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, true);\n        d.fanout = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else\n        d.fanout = o.longs === String ? '0' : 0;\n      d.mode = 0;\n      d.mtime = null;\n    }\n    if (m.Type != null && m.hasOwnProperty('Type')) {\n      d.Type = o.enums === String ? $root.Data.DataType[m.Type] : m.Type;\n    }\n    if (m.Data != null && m.hasOwnProperty('Data')) {\n      d.Data = o.bytes === String ? $util.base64.encode(m.Data, 0, m.Data.length) : o.bytes === Array ? Array.prototype.slice.call(m.Data) : m.Data;\n    }\n    if (m.filesize != null && m.hasOwnProperty('filesize')) {\n      if (typeof m.filesize === 'number')\n        d.filesize = o.longs === String ? String(m.filesize) : m.filesize;\n      else\n        d.filesize = o.longs === String ? $util.Long.prototype.toString.call(m.filesize) : o.longs === Number ? new $util.LongBits(m.filesize.low >>> 0, m.filesize.high >>> 0).toNumber(true) : m.filesize;\n    }\n    if (m.blocksizes && m.blocksizes.length) {\n      d.blocksizes = [];\n      for (var j = 0; j < m.blocksizes.length; ++j) {\n        if (typeof m.blocksizes[j] === 'number')\n          d.blocksizes[j] = o.longs === String ? String(m.blocksizes[j]) : m.blocksizes[j];\n        else\n          d.blocksizes[j] = o.longs === String ? $util.Long.prototype.toString.call(m.blocksizes[j]) : o.longs === Number ? new $util.LongBits(m.blocksizes[j].low >>> 0, m.blocksizes[j].high >>> 0).toNumber(true) : m.blocksizes[j];\n      }\n    }\n    if (m.hashType != null && m.hasOwnProperty('hashType')) {\n      if (typeof m.hashType === 'number')\n        d.hashType = o.longs === String ? String(m.hashType) : m.hashType;\n      else\n        d.hashType = o.longs === String ? $util.Long.prototype.toString.call(m.hashType) : o.longs === Number ? new $util.LongBits(m.hashType.low >>> 0, m.hashType.high >>> 0).toNumber(true) : m.hashType;\n    }\n    if (m.fanout != null && m.hasOwnProperty('fanout')) {\n      if (typeof m.fanout === 'number')\n        d.fanout = o.longs === String ? String(m.fanout) : m.fanout;\n      else\n        d.fanout = o.longs === String ? $util.Long.prototype.toString.call(m.fanout) : o.longs === Number ? new $util.LongBits(m.fanout.low >>> 0, m.fanout.high >>> 0).toNumber(true) : m.fanout;\n    }\n    if (m.mode != null && m.hasOwnProperty('mode')) {\n      d.mode = m.mode;\n    }\n    if (m.mtime != null && m.hasOwnProperty('mtime')) {\n      d.mtime = $root.UnixTime.toObject(m.mtime, o);\n    }\n    return d;\n  };\n  Data.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  Data.DataType = function () {\n    const valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[0] = 'Raw'] = 0;\n    values[valuesById[1] = 'Directory'] = 1;\n    values[valuesById[2] = 'File'] = 2;\n    values[valuesById[3] = 'Metadata'] = 3;\n    values[valuesById[4] = 'Symlink'] = 4;\n    values[valuesById[5] = 'HAMTShard'] = 5;\n    return values;\n  }();\n  return Data;\n})();\nexport const UnixTime = $root.UnixTime = (() => {\n  function UnixTime(p) {\n    if (p)\n      for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n        if (p[ks[i]] != null)\n          this[ks[i]] = p[ks[i]];\n  }\n  UnixTime.prototype.Seconds = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n  UnixTime.prototype.FractionalNanoseconds = 0;\n  UnixTime.encode = function encode(m, w) {\n    if (!w)\n      w = $Writer.create();\n    w.uint32(8).int64(m.Seconds);\n    if (m.FractionalNanoseconds != null && Object.hasOwnProperty.call(m, 'FractionalNanoseconds'))\n      w.uint32(21).fixed32(m.FractionalNanoseconds);\n    return w;\n  };\n  UnixTime.decode = function decode(r, l) {\n    if (!(r instanceof $Reader))\n      r = $Reader.create(r);\n    var c = l === undefined ? r.len : r.pos + l, m = new $root.UnixTime();\n    while (r.pos < c) {\n      var t = r.uint32();\n      switch (t >>> 3) {\n      case 1:\n        m.Seconds = r.int64();\n        break;\n      case 2:\n        m.FractionalNanoseconds = r.fixed32();\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n      }\n    }\n    if (!m.hasOwnProperty('Seconds'))\n      throw $util.ProtocolError('missing required \\'Seconds\\'', { instance: m });\n    return m;\n  };\n  UnixTime.fromObject = function fromObject(d) {\n    if (d instanceof $root.UnixTime)\n      return d;\n    var m = new $root.UnixTime();\n    if (d.Seconds != null) {\n      if ($util.Long)\n        (m.Seconds = $util.Long.fromValue(d.Seconds)).unsigned = false;\n      else if (typeof d.Seconds === 'string')\n        m.Seconds = parseInt(d.Seconds, 10);\n      else if (typeof d.Seconds === 'number')\n        m.Seconds = d.Seconds;\n      else if (typeof d.Seconds === 'object')\n        m.Seconds = new $util.LongBits(d.Seconds.low >>> 0, d.Seconds.high >>> 0).toNumber();\n    }\n    if (d.FractionalNanoseconds != null) {\n      m.FractionalNanoseconds = d.FractionalNanoseconds >>> 0;\n    }\n    return m;\n  };\n  UnixTime.toObject = function toObject(m, o) {\n    if (!o)\n      o = {};\n    var d = {};\n    if (o.defaults) {\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, false);\n        d.Seconds = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else\n        d.Seconds = o.longs === String ? '0' : 0;\n      d.FractionalNanoseconds = 0;\n    }\n    if (m.Seconds != null && m.hasOwnProperty('Seconds')) {\n      if (typeof m.Seconds === 'number')\n        d.Seconds = o.longs === String ? String(m.Seconds) : m.Seconds;\n      else\n        d.Seconds = o.longs === String ? $util.Long.prototype.toString.call(m.Seconds) : o.longs === Number ? new $util.LongBits(m.Seconds.low >>> 0, m.Seconds.high >>> 0).toNumber() : m.Seconds;\n    }\n    if (m.FractionalNanoseconds != null && m.hasOwnProperty('FractionalNanoseconds')) {\n      d.FractionalNanoseconds = m.FractionalNanoseconds;\n    }\n    return d;\n  };\n  UnixTime.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  return UnixTime;\n})();\nexport const Metadata = $root.Metadata = (() => {\n  function Metadata(p) {\n    if (p)\n      for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n        if (p[ks[i]] != null)\n          this[ks[i]] = p[ks[i]];\n  }\n  Metadata.prototype.MimeType = '';\n  Metadata.encode = function encode(m, w) {\n    if (!w)\n      w = $Writer.create();\n    if (m.MimeType != null && Object.hasOwnProperty.call(m, 'MimeType'))\n      w.uint32(10).string(m.MimeType);\n    return w;\n  };\n  Metadata.decode = function decode(r, l) {\n    if (!(r instanceof $Reader))\n      r = $Reader.create(r);\n    var c = l === undefined ? r.len : r.pos + l, m = new $root.Metadata();\n    while (r.pos < c) {\n      var t = r.uint32();\n      switch (t >>> 3) {\n      case 1:\n        m.MimeType = r.string();\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n      }\n    }\n    return m;\n  };\n  Metadata.fromObject = function fromObject(d) {\n    if (d instanceof $root.Metadata)\n      return d;\n    var m = new $root.Metadata();\n    if (d.MimeType != null) {\n      m.MimeType = String(d.MimeType);\n    }\n    return m;\n  };\n  Metadata.toObject = function toObject(m, o) {\n    if (!o)\n      o = {};\n    var d = {};\n    if (o.defaults) {\n      d.MimeType = '';\n    }\n    if (m.MimeType != null && m.hasOwnProperty('MimeType')) {\n      d.MimeType = m.MimeType;\n    }\n    return d;\n  };\n  Metadata.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  return Metadata;\n})();\nexport {\n  $root as default\n};","import errcode from 'err-code';\nimport * as Pb from './unixfs.js';\nconst PBData = Pb.Data;\nconst types = [\n  'raw',\n  'directory',\n  'file',\n  'metadata',\n  'symlink',\n  'hamt-sharded-directory'\n];\nconst dirTypes = [\n  'directory',\n  'hamt-sharded-directory'\n];\nconst DEFAULT_FILE_MODE = parseInt('0644', 8);\nconst DEFAULT_DIRECTORY_MODE = parseInt('0755', 8);\nexport function parseMode(mode) {\n  if (mode == null) {\n    return undefined;\n  }\n  if (typeof mode === 'number') {\n    return mode & 4095;\n  }\n  mode = mode.toString();\n  if (mode.substring(0, 1) === '0') {\n    return parseInt(mode, 8) & 4095;\n  }\n  return parseInt(mode, 10) & 4095;\n}\nexport function parseMtime(input) {\n  if (input == null) {\n    return undefined;\n  }\n  let mtime;\n  if (input.secs != null) {\n    mtime = {\n      secs: input.secs,\n      nsecs: input.nsecs\n    };\n  }\n  if (input.Seconds != null) {\n    mtime = {\n      secs: input.Seconds,\n      nsecs: input.FractionalNanoseconds\n    };\n  }\n  if (Array.isArray(input)) {\n    mtime = {\n      secs: input[0],\n      nsecs: input[1]\n    };\n  }\n  if (input instanceof Date) {\n    const ms = input.getTime();\n    const secs = Math.floor(ms / 1000);\n    mtime = {\n      secs: secs,\n      nsecs: (ms - secs * 1000) * 1000\n    };\n  }\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined;\n  }\n  if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw errcode(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS');\n  }\n  return mtime;\n}\nclass UnixFS {\n  static unmarshal(marshaled) {\n    const message = PBData.decode(marshaled);\n    const decoded = PBData.toObject(message, {\n      defaults: false,\n      arrays: true,\n      longs: Number,\n      objects: false\n    });\n    const data = new UnixFS({\n      type: types[decoded.Type],\n      data: decoded.Data,\n      blockSizes: decoded.blocksizes,\n      mode: decoded.mode,\n      mtime: decoded.mtime ? {\n        secs: decoded.mtime.Seconds,\n        nsecs: decoded.mtime.FractionalNanoseconds\n      } : undefined\n    });\n    data._originalMode = decoded.mode || 0;\n    return data;\n  }\n  constructor(options = { type: 'file' }) {\n    const {type, data, blockSizes, hashType, fanout, mtime, mode} = options;\n    if (type && !types.includes(type)) {\n      throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE');\n    }\n    this.type = type || 'file';\n    this.data = data;\n    this.hashType = hashType;\n    this.fanout = fanout;\n    this.blockSizes = blockSizes || [];\n    this._originalMode = 0;\n    this.mode = parseMode(mode);\n    if (mtime) {\n      this.mtime = parseMtime(mtime);\n      if (this.mtime && !this.mtime.nsecs) {\n        this.mtime.nsecs = 0;\n      }\n    }\n  }\n  set mode(mode) {\n    this._mode = this.isDirectory() ? DEFAULT_DIRECTORY_MODE : DEFAULT_FILE_MODE;\n    const parsedMode = parseMode(mode);\n    if (parsedMode !== undefined) {\n      this._mode = parsedMode;\n    }\n  }\n  get mode() {\n    return this._mode;\n  }\n  isDirectory() {\n    return Boolean(this.type && dirTypes.includes(this.type));\n  }\n  addBlockSize(size) {\n    this.blockSizes.push(size);\n  }\n  removeBlockSize(index) {\n    this.blockSizes.splice(index, 1);\n  }\n  fileSize() {\n    if (this.isDirectory()) {\n      return 0;\n    }\n    let sum = 0;\n    this.blockSizes.forEach(size => {\n      sum += size;\n    });\n    if (this.data) {\n      sum += this.data.length;\n    }\n    return sum;\n  }\n  marshal() {\n    let type;\n    switch (this.type) {\n    case 'raw':\n      type = PBData.DataType.Raw;\n      break;\n    case 'directory':\n      type = PBData.DataType.Directory;\n      break;\n    case 'file':\n      type = PBData.DataType.File;\n      break;\n    case 'metadata':\n      type = PBData.DataType.Metadata;\n      break;\n    case 'symlink':\n      type = PBData.DataType.Symlink;\n      break;\n    case 'hamt-sharded-directory':\n      type = PBData.DataType.HAMTShard;\n      break;\n    default:\n      throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE');\n    }\n    let data = this.data;\n    if (!this.data || !this.data.length) {\n      data = undefined;\n    }\n    let mode;\n    if (this.mode != null) {\n      mode = this._originalMode & 4294963200 | (parseMode(this.mode) || 0);\n      if (mode === DEFAULT_FILE_MODE && !this.isDirectory()) {\n        mode = undefined;\n      }\n      if (mode === DEFAULT_DIRECTORY_MODE && this.isDirectory()) {\n        mode = undefined;\n      }\n    }\n    let mtime;\n    if (this.mtime != null) {\n      const parsed = parseMtime(this.mtime);\n      if (parsed) {\n        mtime = {\n          Seconds: parsed.secs,\n          FractionalNanoseconds: parsed.nsecs\n        };\n        if (mtime.FractionalNanoseconds === 0) {\n          delete mtime.FractionalNanoseconds;\n        }\n      }\n    }\n    const pbData = {\n      Type: type,\n      Data: data,\n      filesize: this.isDirectory() ? undefined : this.fileSize(),\n      blocksizes: this.blockSizes,\n      hashType: this.hashType,\n      fanout: this.fanout,\n      mode,\n      mtime\n    };\n    return PBData.encode(pbData).finish();\n  }\n}\nexport {\n  UnixFS\n};","'use strict'\n\nconst errCode = require('err-code')\nconst browserStreamToIt = require('browser-readablestream-to-it')\nconst itPeekable = require('it-peekable')\nconst map = require('it-map')\nconst {\n  isBytes,\n  isBlob,\n  isReadableStream,\n  isFileObject\n} = require('./utils')\nconst {\n  parseMtime,\n  parseMode\n} = require('ipfs-unixfs')\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ToContent} ToContent\n * @typedef {import('ipfs-unixfs-importer').ImportCandidate} ImporterImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidate} ImportCandidate\n */\n\n/**\n * @param {import('ipfs-core-types/src/utils').ImportCandidateStream} input\n * @param {(content:ToContent) => AsyncIterable<Uint8Array>} normaliseContent\n */\n// eslint-disable-next-line complexity\nmodule.exports = async function * normaliseInput (input, normaliseContent) {\n  if (input === null || input === undefined) {\n    throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // String\n  if (typeof input === 'string' || input instanceof String) {\n    yield toFileObject(input.toString(), normaliseContent)\n    return\n  }\n\n  // Uint8Array|ArrayBuffer|TypedArray\n  // Blob|File\n  if (isBytes(input) || isBlob(input)) {\n    yield toFileObject(input, normaliseContent)\n    return\n  }\n\n  // Browser ReadableStream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // Iterable<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    /** @type {any} peekable */\n    const peekable = itPeekable(input)\n\n    /** @type {any} value **/\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      yield * []\n      return\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    // (Async)Iterable<Bytes>\n    if (Number.isInteger(value) || isBytes(value)) {\n      yield toFileObject(peekable, normaliseContent)\n      return\n    }\n\n    // (Async)Iterable<Blob>\n    // (Async)Iterable<String>\n    // (Async)Iterable<{ path, content }>\n    if (isFileObject(value) || isBlob(value) || typeof value === 'string' || value instanceof String) {\n      yield * map(peekable, (/** @type {ImportCandidate} */ value) => toFileObject(value, normaliseContent))\n      return\n    }\n\n    // (Async)Iterable<(Async)Iterable<?>>\n    // (Async)Iterable<ReadableStream<?>>\n    // ReadableStream<(Async)Iterable<?>>\n    // ReadableStream<ReadableStream<?>>\n    if (value[Symbol.iterator] || value[Symbol.asyncIterator] || isReadableStream(value)) {\n      yield * map(peekable, (/** @type {ImportCandidate} */ value) => toFileObject(value, normaliseContent))\n      return\n    }\n  }\n\n  // { path, content: ? }\n  // Note: Detected _after_ (Async)Iterable<?> because Node.js streams have a\n  // `path` property that passes this check.\n  if (isFileObject(input)) {\n    yield toFileObject(input, normaliseContent)\n    return\n  }\n\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {ImportCandidate} input\n * @param {(content:ToContent) => AsyncIterable<Uint8Array>} normaliseContent\n */\nasync function toFileObject (input, normaliseContent) {\n  // @ts-ignore - Those properties don't exist on most input types\n  const { path, mode, mtime, content } = input\n\n  /** @type {ImporterImportCandidate} */\n  const file = {\n    path: path || '',\n    mode: parseMode(mode),\n    mtime: parseMtime(mtime)\n  }\n\n  if (content) {\n  // @ts-ignore TODO vmx 2021-03-30 enable again\n    file.content = await normaliseContent(content)\n  } else if (!path) { // Not already a file object with path or content prop\n    // @ts-ignore - input still can be different ToContent\n    file.content = await normaliseContent(input)\n  }\n\n  return file\n}\n","'use strict'\n\nconst normaliseContent = require('./normalise-content')\nconst normalise = require('./normalise-input')\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n * @typedef {import('ipfs-unixfs-importer').ImportCandidate} ImportCandidate\n */\n\n/**\n * Transforms any of the `ipfs.add` input types into\n *\n * ```\n * AsyncIterable<{ path, mode, mtime, content: AsyncIterable<Uint8Array> }>\n * ```\n *\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\n *\n * @param {ImportCandidateStream} input\n */\nfunction normaliseInput (input) {\n  return normalise(input, normaliseContent)\n}\n\nmodule.exports = {\n  normaliseInput\n}\n","'use strict'\n\n/**\n * Drains an (async) iterable discarding its' content and does not return\n * anything.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @returns {Promise<void>}\n */\nconst drain = async (source) => {\n  for await (const _ of source) { } // eslint-disable-line no-unused-vars,no-empty\n}\n\nmodule.exports = drain\n","'use strict'\n\n/**\n * Filters the passed (async) iterable by using the filter function\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {function(T):boolean|Promise<boolean>} fn\n */\nconst filter = async function * (source, fn) {\n  for await (const entry of source) {\n    if (await fn(entry)) {\n      yield entry\n    }\n  }\n}\n\nmodule.exports = filter\n","'use strict'\n\n/**\n * Stop iteration after n items have been received.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {number} limit\n * @returns {AsyncIterable<T>}\n */\nconst take = async function * (source, limit) {\n  let items = 0\n\n  if (limit < 1) {\n    return\n  }\n\n  for await (const entry of source) {\n    yield entry\n\n    items++\n\n    if (items === limit) {\n      return\n    }\n  }\n}\n\nmodule.exports = take\n","'use strict'\n\nconst drain = require('it-drain')\nconst filter = require('it-filter')\nconst take = require('it-take')\nconst all = require('it-all')\n\n/**\n * Collect all values from the iterable and sort them using\n * the passed sorter function\n *\n * @template T\n * @param {AsyncIterable<T> | Iterable<T>} iterable\n * @param {(a: T, b: T) => -1 | 0 | 1} sorter\n * @returns {AsyncIterable<T>}\n */\nconst sortAll = (iterable, sorter) => {\n  return (async function * () {\n    const values = await all(iterable)\n    yield * values.sort(sorter)\n  })()\n}\n\n/**\n * @typedef {import('./types').Options} Options\n * @typedef {import('./types').Pair} Pair\n * @typedef {import('./types').Blockstore} Blockstore\n * @typedef {import('./types').Query} Query\n * @typedef {import('./types').KeyQuery} KeyQuery\n * @typedef {import('./types').Batch} Batch\n *\n * @typedef {import('multiformats').CID} CID\n */\n\n/**\n * @template O\n * @typedef {import('interface-store').AwaitIterable<O>} AwaitIterable\n */\n\n/**\n * @implements {Blockstore}\n */\nclass BlockstoreAdapter {\n  /**\n   * @returns {Promise<void>}\n   */\n  open () {\n    return Promise.reject(new Error('.open is not implemented'))\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  close () {\n    return Promise.reject(new Error('.close is not implemented'))\n  }\n\n  /**\n   * @param {CID} key\n   * @param {Uint8Array} val\n   * @param {Options} [options]\n   * @returns {Promise<void>}\n   */\n  put (key, val, options) {\n    return Promise.reject(new Error('.put is not implemented'))\n  }\n\n  /**\n   * @param {CID} key\n   * @param {Options} [options]\n   * @returns {Promise<Uint8Array>}\n   */\n  get (key, options) {\n    return Promise.reject(new Error('.get is not implemented'))\n  }\n\n  /**\n   * @param {CID} key\n   * @param {Options} [options]\n   * @returns {Promise<boolean>}\n   */\n  has (key, options) {\n    return Promise.reject(new Error('.has is not implemented'))\n  }\n\n  /**\n   * @param {CID} key\n   * @param {Options} [options]\n   * @returns {Promise<void>}\n   */\n  delete (key, options) {\n    return Promise.reject(new Error('.delete is not implemented'))\n  }\n\n  /**\n   * @param {AwaitIterable<Pair>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n  async * putMany (source, options = {}) {\n    for await (const { key, value } of source) {\n      await this.put(key, value, options)\n      yield { key, value }\n    }\n  }\n\n  /**\n   * @param {AwaitIterable<CID>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Uint8Array>}\n   */\n  async * getMany (source, options = {}) {\n    for await (const key of source) {\n      yield this.get(key, options)\n    }\n  }\n\n  /**\n   * @param {AwaitIterable<CID>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<CID>}\n   */\n  async * deleteMany (source, options = {}) {\n    for await (const key of source) {\n      await this.delete(key, options)\n      yield key\n    }\n  }\n\n  /**\n   * @returns {Batch}\n   */\n  batch () {\n    /** @type {Pair[]} */\n    let puts = []\n    /** @type {CID[]} */\n    let dels = []\n\n    return {\n      put (key, value) {\n        puts.push({ key, value })\n      },\n\n      delete (key) {\n        dels.push(key)\n      },\n      commit: async (options) => {\n        await drain(this.putMany(puts, options))\n        puts = []\n        await drain(this.deleteMany(dels, options))\n        dels = []\n      }\n    }\n  }\n\n  /**\n   * Extending classes should override `query` or implement this method\n   *\n   * @param {Query} q\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n  // eslint-disable-next-line require-yield\n  async * _all (q, options) {\n    throw new Error('._all is not implemented')\n  }\n\n  /**\n   * Extending classes should override `queryKeys` or implement this method\n   *\n   * @param {KeyQuery} q\n   * @param {Options} [options]\n   * @returns {AsyncIterable<CID>}\n   */\n  // eslint-disable-next-line require-yield\n  async * _allKeys (q, options) {\n    throw new Error('._allKeys is not implemented')\n  }\n\n  /**\n   * @param {Query} q\n   * @param {Options} [options]\n   */\n  query (q, options) {\n    let it = this._all(q, options)\n\n    if (q.prefix != null) {\n      it = filter(it, (/** @type {Pair} */ e) =>\n        e.key.toString().startsWith(q.prefix || '')\n      )\n    }\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it)\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it)\n    }\n\n    if (q.offset != null) {\n      let i = 0\n      it = filter(it, () => i++ >= (q.offset || 0))\n    }\n\n    if (q.limit != null) {\n      it = take(it, q.limit)\n    }\n\n    return it\n  }\n\n  /**\n   * @param {KeyQuery} q\n   * @param {Options} [options]\n   */\n  queryKeys (q, options) {\n    let it = this._allKeys(q, options)\n\n    if (q.prefix != null) {\n      it = filter(it, (/** @type {CID} */ cid) => cid.toString().startsWith(q.prefix || ''))\n    }\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it)\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it)\n    }\n\n    if (q.offset != null) {\n      let i = 0\n      it = filter(it, () => i++ >= /** @type {number} */ (q.offset))\n    }\n\n    if (q.limit != null) {\n      it = take(it, q.limit)\n    }\n\n    return it\n  }\n}\n\nmodule.exports = BlockstoreAdapter\n","'use strict'\n\nconst errCode = require('err-code')\n\n/**\n * @param {Error} [err]\n */\nfunction notFoundError (err) {\n  err = err || new Error('Not Found')\n  return errCode(err, 'ERR_NOT_FOUND')\n}\n\nmodule.exports = {\n  notFoundError\n}\n","'use strict'\n\nconst Adapter = require('./adapter')\nconst { base32 } = require('multiformats/bases/base32')\nconst raw = require('multiformats/codecs/raw')\nconst { CID } = require('multiformats/cid')\nconst Digest = require('multiformats/hashes/digest')\nconst Errors = require('./errors')\n\n/**\n * @typedef {import('./types').Pair} Pair\n * @typedef {import('./types').Blockstore} Blockstore\n * @typedef {import('interface-store').Options} Options\n */\n\n/**\n * @class MemoryBlockstore\n * @implements {Blockstore}\n */\nclass MemoryBlockstore extends Adapter {\n  constructor () {\n    super()\n\n    /** @type {Record<string, Uint8Array>} */\n    this.data = {}\n  }\n\n  open () {\n    return Promise.resolve()\n  }\n\n  close () {\n    return Promise.resolve()\n  }\n\n  /**\n   * @param {CID} key\n   * @param {Uint8Array} val\n   */\n  async put (key, val) { // eslint-disable-line require-await\n    this.data[base32.encode(key.multihash.bytes)] = val\n  }\n\n  /**\n   * @param {CID} key\n   */\n  async get (key) {\n    const exists = await this.has(key)\n    if (!exists) throw Errors.notFoundError()\n    return this.data[base32.encode(key.multihash.bytes)]\n  }\n\n  /**\n   * @param {CID} key\n   */\n  async has (key) { // eslint-disable-line require-await\n    return this.data[base32.encode(key.multihash.bytes)] !== undefined\n  }\n\n  /**\n   * @param {CID} key\n   */\n  async delete (key) { // eslint-disable-line require-await\n    delete this.data[base32.encode(key.multihash.bytes)]\n  }\n\n  async * _all () {\n    yield * Object.entries(this.data)\n      .map(([key, value]) => ({ key: CID.createV1(raw.code, Digest.decode(base32.decode(key))), value }))\n  }\n\n  async * _allKeys () {\n    yield * Object.entries(this.data)\n      .map(([key]) => CID.createV1(raw.code, Digest.decode(base32.decode(key))))\n  }\n}\n\nmodule.exports = MemoryBlockstore\n","'use strict'\n\nconst BlockstoreAdapter = require('./adapter')\nconst MemoryBlockstore = require('./memory')\n\n/**\n * @typedef {import('./types').Options} Options\n * @typedef {import('./types').Pair} Pair\n * @typedef {import('./types').Batch} Batch\n * @typedef {import('./types').Blockstore} Blockstore\n * @typedef {import('./types').QueryFilter} QueryFilter\n * @typedef {import('./types').QueryOrder} QueryOrder\n * @typedef {import('./types').Query} Query\n * @typedef {import('./types').KeyQueryFilter} KeyQueryFilter\n * @typedef {import('./types').KeyQueryOrder} KeyQueryOrder\n * @typedef {import('./types').KeyQuery} KeyQuery\n */\n\nmodule.exports = {\n  BlockstoreAdapter,\n  MemoryBlockstore\n}\n","import { CID } from 'multiformats';\nimport { BlockstoreAdapter } from 'interface-blockstore';\nexport class MemoryBlockStore extends BlockstoreAdapter {\n    constructor() {\n        super();\n        this.store = new Map();\n    }\n    async *blocks() {\n        for (const [cidStr, bytes] of this.store.entries()) {\n            yield { cid: CID.parse(cidStr), bytes };\n        }\n    }\n    put(cid, bytes) {\n        this.store.set(cid.toString(), bytes);\n        return Promise.resolve();\n    }\n    get(cid) {\n        const bytes = this.store.get(cid.toString());\n        if (!bytes) {\n            throw new Error(`block with cid ${cid.toString()} no found`);\n        }\n        return Promise.resolve(bytes);\n    }\n    close() {\n        this.store.clear();\n        return Promise.resolve();\n    }\n}\n","import { sha256 } from 'multiformats/hashes/sha2';\nexport const unixfsImporterOptionsDefault = {\n    cidVersion: 1,\n    chunker: 'fixed',\n    maxChunkSize: 262144,\n    hasher: sha256,\n    rawLeaves: true,\n    wrapWithDirectory: true,\n    maxChildrenPerNode: 174\n};\n","import last from 'it-last';\nimport pipe from 'it-pipe';\nimport { CarWriter } from '@ipld/car';\nimport { importer } from 'ipfs-unixfs-importer';\n// @ts-ignore\nimport { normaliseInput } from 'ipfs-core-utils/src/files/normalise-input/index.js';\nimport { MemoryBlockStore } from \"../blockstore/memory.js\";\nimport { unixfsImporterOptionsDefault } from \"./constants.js\";\nexport async function pack({ input, blockstore: userBlockstore, hasher, maxChunkSize, maxChildrenPerNode, wrapWithDirectory }) {\n    if (!input || (Array.isArray(input) && !input.length)) {\n        throw new Error('missing input file(s)');\n    }\n    const blockstore = userBlockstore ? userBlockstore : new MemoryBlockStore();\n    // Consume the source\n    const rootEntry = await last(pipe(normaliseInput(input), (source) => importer(source, blockstore, {\n        ...unixfsImporterOptionsDefault,\n        hasher: hasher || unixfsImporterOptionsDefault.hasher,\n        maxChunkSize: maxChunkSize || unixfsImporterOptionsDefault.maxChunkSize,\n        maxChildrenPerNode: maxChildrenPerNode || unixfsImporterOptionsDefault.maxChildrenPerNode,\n        wrapWithDirectory: wrapWithDirectory === false ? false : unixfsImporterOptionsDefault.wrapWithDirectory\n    })));\n    if (!rootEntry || !rootEntry.cid) {\n        throw new Error('given input could not be parsed correctly');\n    }\n    const root = rootEntry.cid;\n    const { writer, out: carOut } = await CarWriter.create([root]);\n    const carOutIter = carOut[Symbol.asyncIterator]();\n    let writingPromise;\n    const writeAll = async () => {\n        for await (const block of blockstore.blocks()) {\n            // `await` will block until all bytes in `carOut` are consumed by the user\n            // so we have backpressure here\n            await writer.put(block);\n        }\n        await writer.close();\n        if (!userBlockstore) {\n            await blockstore.close();\n        }\n    };\n    const out = {\n        [Symbol.asyncIterator]() {\n            if (writingPromise != null) {\n                throw new Error('Multiple iterator not supported');\n            }\n            // don't start writing until the user starts consuming the iterator\n            writingPromise = writeAll();\n            return {\n                async next() {\n                    const result = await carOutIter.next();\n                    if (result.done) {\n                        await writingPromise; // any errors will propagate from here\n                    }\n                    return result;\n                }\n            };\n        }\n    };\n    return { root, out };\n}\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","'use strict';\n\nvar qs = require('querystring')\n  , url = require('url')\n  , xtend = require('xtend');\n\nfunction hasRel(x) {\n  return x && x.rel;\n}\n\nfunction intoRels (acc, x) {\n  function splitRel (rel) {\n    acc[rel] = xtend(x, { rel: rel });\n  }\n\n  x.rel.split(/\\s+/).forEach(splitRel);\n\n  return acc;\n}\n\nfunction createObjects (acc, p) {\n  // rel=\"next\" => 1: rel 2: next\n  var m = p.match(/\\s*(.+)\\s*=\\s*\"?([^\"]+)\"?/)\n  if (m) acc[m[1]] = m[2];\n  return acc;\n}\n\nfunction parseLink(link) {\n  try {\n    var m         =  link.match(/<?([^>]*)>(.*)/)\n      , linkUrl   =  m[1]\n      , parts     =  m[2].split(';')\n      , parsedUrl =  url.parse(linkUrl)\n      , qry       =  qs.parse(parsedUrl.query);\n\n    parts.shift();\n\n    var info = parts\n      .reduce(createObjects, {});\n    \n    info = xtend(qry, info);\n    info.url = linkUrl;\n    return info;\n  } catch (e) {\n    return null;\n  }\n}\n\nmodule.exports = function (linkHeader) {\n  if (!linkHeader) return null;\n\n  return linkHeader.split(/,\\s*</)\n   .map(parseLink)\n   .filter(hasRel)\n   .reduce(intoRels, {});\n};\n","const textDecoder = new TextDecoder();\nfunction decodeVarint(bytes, offset) {\n  let v = 0;\n  for (let shift = 0;; shift += 7) {\n    if (shift >= 64) {\n      throw new Error('protobuf: varint overflow');\n    }\n    if (offset >= bytes.length) {\n      throw new Error('protobuf: unexpected end of data');\n    }\n    const b = bytes[offset++];\n    v += shift < 28 ? (b & 127) << shift : (b & 127) * 2 ** shift;\n    if (b < 128) {\n      break;\n    }\n  }\n  return [\n    v,\n    offset\n  ];\n}\nfunction decodeBytes(bytes, offset) {\n  let byteLen;\n  [byteLen, offset] = decodeVarint(bytes, offset);\n  const postOffset = offset + byteLen;\n  if (byteLen < 0 || postOffset < 0) {\n    throw new Error('protobuf: invalid length');\n  }\n  if (postOffset > bytes.length) {\n    throw new Error('protobuf: unexpected end of data');\n  }\n  return [\n    bytes.subarray(offset, postOffset),\n    postOffset\n  ];\n}\nfunction decodeKey(bytes, index) {\n  let wire;\n  [wire, index] = decodeVarint(bytes, index);\n  return [\n    wire & 7,\n    wire >> 3,\n    index\n  ];\n}\nfunction decodeLink(bytes) {\n  const link = {};\n  const l = bytes.length;\n  let index = 0;\n  while (index < l) {\n    let wireType, fieldNum;\n    [wireType, fieldNum, index] = decodeKey(bytes, index);\n    if (fieldNum === 1) {\n      if (link.Hash) {\n        throw new Error('protobuf: (PBLink) duplicate Hash section');\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Hash`);\n      }\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Name before Hash');\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Hash');\n      }\n      ;\n      [link.Hash, index] = decodeBytes(bytes, index);\n    } else if (fieldNum === 2) {\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Name section');\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Name`);\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Name');\n      }\n      let byts;\n      [byts, index] = decodeBytes(bytes, index);\n      link.Name = textDecoder.decode(byts);\n    } else if (fieldNum === 3) {\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Tsize section');\n      }\n      if (wireType !== 0) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Tsize`);\n      }\n      ;\n      [link.Tsize, index] = decodeVarint(bytes, index);\n    } else {\n      throw new Error(`protobuf: (PBLink) invalid fieldNumber, expected 1, 2 or 3, got ${ fieldNum }`);\n    }\n  }\n  if (index > l) {\n    throw new Error('protobuf: (PBLink) unexpected end of data');\n  }\n  return link;\n}\nexport function decodeNode(bytes) {\n  const l = bytes.length;\n  let index = 0;\n  let links;\n  let linksBeforeData = false;\n  let data;\n  while (index < l) {\n    let wireType, fieldNum;\n    [wireType, fieldNum, index] = decodeKey(bytes, index);\n    if (wireType !== 2) {\n      throw new Error(`protobuf: (PBNode) invalid wireType, expected 2, got ${ wireType }`);\n    }\n    if (fieldNum === 1) {\n      if (data) {\n        throw new Error('protobuf: (PBNode) duplicate Data section');\n      }\n      ;\n      [data, index] = decodeBytes(bytes, index);\n      if (links) {\n        linksBeforeData = true;\n      }\n    } else if (fieldNum === 2) {\n      if (linksBeforeData) {\n        throw new Error('protobuf: (PBNode) duplicate Links section');\n      } else if (!links) {\n        links = [];\n      }\n      let byts;\n      [byts, index] = decodeBytes(bytes, index);\n      links.push(decodeLink(byts));\n    } else {\n      throw new Error(`protobuf: (PBNode) invalid fieldNumber, expected 1 or 2, got ${ fieldNum }`);\n    }\n  }\n  if (index > l) {\n    throw new Error('protobuf: (PBNode) unexpected end of data');\n  }\n  const node = {};\n  if (data) {\n    node.Data = data;\n  }\n  node.Links = links || [];\n  return node;\n}","const textEncoder = new TextEncoder();\nconst maxInt32 = 2 ** 32;\nconst maxUInt32 = 2 ** 31;\nfunction encodeLink(link, bytes) {\n  let i = bytes.length;\n  if (typeof link.Tsize === 'number') {\n    if (link.Tsize < 0) {\n      throw new Error('Tsize cannot be negative');\n    }\n    if (!Number.isSafeInteger(link.Tsize)) {\n      throw new Error('Tsize too large for encoding');\n    }\n    i = encodeVarint(bytes, i, link.Tsize) - 1;\n    bytes[i] = 24;\n  }\n  if (typeof link.Name === 'string') {\n    const nameBytes = textEncoder.encode(link.Name);\n    i -= nameBytes.length;\n    bytes.set(nameBytes, i);\n    i = encodeVarint(bytes, i, nameBytes.length) - 1;\n    bytes[i] = 18;\n  }\n  if (link.Hash) {\n    i -= link.Hash.length;\n    bytes.set(link.Hash, i);\n    i = encodeVarint(bytes, i, link.Hash.length) - 1;\n    bytes[i] = 10;\n  }\n  return bytes.length - i;\n}\nexport function encodeNode(node) {\n  const size = sizeNode(node);\n  const bytes = new Uint8Array(size);\n  let i = size;\n  if (node.Data) {\n    i -= node.Data.length;\n    bytes.set(node.Data, i);\n    i = encodeVarint(bytes, i, node.Data.length) - 1;\n    bytes[i] = 10;\n  }\n  if (node.Links) {\n    for (let index = node.Links.length - 1; index >= 0; index--) {\n      const size = encodeLink(node.Links[index], bytes.subarray(0, i));\n      i -= size;\n      i = encodeVarint(bytes, i, size) - 1;\n      bytes[i] = 18;\n    }\n  }\n  return bytes;\n}\nfunction sizeLink(link) {\n  let n = 0;\n  if (link.Hash) {\n    const l = link.Hash.length;\n    n += 1 + l + sov(l);\n  }\n  if (typeof link.Name === 'string') {\n    const l = textEncoder.encode(link.Name).length;\n    n += 1 + l + sov(l);\n  }\n  if (typeof link.Tsize === 'number') {\n    n += 1 + sov(link.Tsize);\n  }\n  return n;\n}\nfunction sizeNode(node) {\n  let n = 0;\n  if (node.Data) {\n    const l = node.Data.length;\n    n += 1 + l + sov(l);\n  }\n  if (node.Links) {\n    for (const link of node.Links) {\n      const l = sizeLink(link);\n      n += 1 + l + sov(l);\n    }\n  }\n  return n;\n}\nfunction encodeVarint(bytes, offset, v) {\n  offset -= sov(v);\n  const base = offset;\n  while (v >= maxUInt32) {\n    bytes[offset++] = v & 127 | 128;\n    v /= 128;\n  }\n  while (v >= 128) {\n    bytes[offset++] = v & 127 | 128;\n    v >>>= 7;\n  }\n  bytes[offset] = v;\n  return base;\n}\nfunction sov(x) {\n  if (x % 2 === 0) {\n    x++;\n  }\n  return Math.floor((len64(x) + 6) / 7);\n}\nfunction len64(x) {\n  let n = 0;\n  if (x >= maxInt32) {\n    x = Math.floor(x / maxInt32);\n    n = 32;\n  }\n  if (x >= 1 << 16) {\n    x >>>= 16;\n    n += 16;\n  }\n  if (x >= 1 << 8) {\n    x >>>= 8;\n    n += 8;\n  }\n  return n + len8tab[x];\n}\nconst len8tab = [\n  0,\n  1,\n  2,\n  2,\n  3,\n  3,\n  3,\n  3,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8\n];","import { CID } from 'multiformats/cid';\nconst pbNodeProperties = [\n  'Data',\n  'Links'\n];\nconst pbLinkProperties = [\n  'Hash',\n  'Name',\n  'Tsize'\n];\nconst textEncoder = new TextEncoder();\nfunction linkComparator(a, b) {\n  if (a === b) {\n    return 0;\n  }\n  const abuf = a.Name ? textEncoder.encode(a.Name) : [];\n  const bbuf = b.Name ? textEncoder.encode(b.Name) : [];\n  let x = abuf.length;\n  let y = bbuf.length;\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (abuf[i] !== bbuf[i]) {\n      x = abuf[i];\n      y = bbuf[i];\n      break;\n    }\n  }\n  return x < y ? -1 : y < x ? 1 : 0;\n}\nfunction hasOnlyProperties(node, properties) {\n  return !Object.keys(node).some(p => !properties.includes(p));\n}\nfunction asLink(link) {\n  if (typeof link.asCID === 'object') {\n    const Hash = CID.asCID(link);\n    if (!Hash) {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n    return { Hash };\n  }\n  if (typeof link !== 'object' || Array.isArray(link)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  const pbl = {};\n  if (link.Hash) {\n    let cid = CID.asCID(link.Hash);\n    try {\n      if (!cid) {\n        if (typeof link.Hash === 'string') {\n          cid = CID.parse(link.Hash);\n        } else if (link.Hash instanceof Uint8Array) {\n          cid = CID.decode(link.Hash);\n        }\n      }\n    } catch (e) {\n      throw new TypeError(`Invalid DAG-PB form: ${ e.message }`);\n    }\n    if (cid) {\n      pbl.Hash = cid;\n    }\n  }\n  if (!pbl.Hash) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  if (typeof link.Name === 'string') {\n    pbl.Name = link.Name;\n  }\n  if (typeof link.Tsize === 'number') {\n    pbl.Tsize = link.Tsize;\n  }\n  return pbl;\n}\nexport function prepare(node) {\n  if (node instanceof Uint8Array || typeof node === 'string') {\n    node = { Data: node };\n  }\n  if (typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  const pbn = {};\n  if (node.Data !== undefined) {\n    if (typeof node.Data === 'string') {\n      pbn.Data = textEncoder.encode(node.Data);\n    } else if (node.Data instanceof Uint8Array) {\n      pbn.Data = node.Data;\n    } else {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n  }\n  if (node.Links !== undefined) {\n    if (Array.isArray(node.Links)) {\n      pbn.Links = node.Links.map(asLink);\n      pbn.Links.sort(linkComparator);\n    } else {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n  } else {\n    pbn.Links = [];\n  }\n  return pbn;\n}\nexport function validate(node) {\n  if (!node || typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  if (!hasOnlyProperties(node, pbNodeProperties)) {\n    throw new TypeError('Invalid DAG-PB form (extraneous properties)');\n  }\n  if (node.Data !== undefined && !(node.Data instanceof Uint8Array)) {\n    throw new TypeError('Invalid DAG-PB form (Data must be a Uint8Array)');\n  }\n  if (!Array.isArray(node.Links)) {\n    throw new TypeError('Invalid DAG-PB form (Links must be an array)');\n  }\n  for (let i = 0; i < node.Links.length; i++) {\n    const link = node.Links[i];\n    if (!link || typeof link !== 'object' || Array.isArray(link)) {\n      throw new TypeError('Invalid DAG-PB form (bad link object)');\n    }\n    if (!hasOnlyProperties(link, pbLinkProperties)) {\n      throw new TypeError('Invalid DAG-PB form (extraneous properties on link object)');\n    }\n    if (!link.Hash) {\n      throw new TypeError('Invalid DAG-PB form (link must have a Hash)');\n    }\n    if (link.Hash.asCID !== link.Hash) {\n      throw new TypeError('Invalid DAG-PB form (link Hash must be a CID)');\n    }\n    if (link.Name !== undefined && typeof link.Name !== 'string') {\n      throw new TypeError('Invalid DAG-PB form (link Name must be a string)');\n    }\n    if (link.Tsize !== undefined && (typeof link.Tsize !== 'number' || link.Tsize % 1 !== 0)) {\n      throw new TypeError('Invalid DAG-PB form (link Tsize must be an integer)');\n    }\n    if (i > 0 && linkComparator(link, node.Links[i - 1]) === -1) {\n      throw new TypeError('Invalid DAG-PB form (links must be sorted by Name bytes)');\n    }\n  }\n}\nexport function createNode(data, links = []) {\n  return prepare({\n    Data: data,\n    Links: links\n  });\n}\nexport function createLink(name, size, cid) {\n  return asLink({\n    Hash: cid,\n    Name: name,\n    Tsize: size\n  });\n}","import { CID } from 'multiformats/cid';\nimport { decodeNode } from './pb-decode.js';\nimport { encodeNode } from './pb-encode.js';\nimport {\n  prepare,\n  validate,\n  createNode,\n  createLink\n} from './util.js';\nexport const name = 'dag-pb';\nexport const code = 112;\nexport function encode(node) {\n  validate(node);\n  const pbn = {};\n  if (node.Links) {\n    pbn.Links = node.Links.map(l => {\n      const link = {};\n      if (l.Hash) {\n        link.Hash = l.Hash.bytes;\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name;\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize;\n      }\n      return link;\n    });\n  }\n  if (node.Data) {\n    pbn.Data = node.Data;\n  }\n  return encodeNode(pbn);\n}\nexport function decode(bytes) {\n  const pbn = decodeNode(bytes);\n  const node = {};\n  if (pbn.Data) {\n    node.Data = pbn.Data;\n  }\n  if (pbn.Links) {\n    node.Links = pbn.Links.map(l => {\n      const link = {};\n      try {\n        link.Hash = CID.decode(l.Hash);\n      } catch (e) {\n      }\n      if (!link.Hash) {\n        throw new Error('Invalid Hash field found in link, expected CID');\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name;\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize;\n      }\n      return link;\n    });\n  }\n  return node;\n}\nexport {\n  prepare,\n  validate,\n  createNode,\n  createLink\n};","'use strict'\n\n// JS treats subjects of bitwise operators as SIGNED 32 bit numbers,\n// which means the maximum amount of bits we can store inside each byte\n// is 7..\nconst BITS_PER_BYTE = 7\n\nmodule.exports = class SparseArray {\n  constructor () {\n    this._bitArrays = []\n    this._data = []\n    this._length = 0\n    this._changedLength = false\n    this._changedData = false\n  }\n\n  set (index, value) {\n    let pos = this._internalPositionFor(index, false)\n    if (value === undefined) {\n      // unsetting\n      if (pos !== -1) {\n        // remove item from bit array and array itself\n        this._unsetInternalPos(pos)\n        this._unsetBit(index)\n        this._changedLength = true\n        this._changedData = true\n      }\n    } else {\n      let needsSort = false\n      if (pos === -1) {\n        pos = this._data.length\n        this._setBit(index)\n        this._changedData = true\n      } else {\n        needsSort = true\n      }\n      this._setInternalPos(pos, index, value, needsSort)\n      this._changedLength = true\n    }\n  }\n\n  unset (index) {\n    this.set(index, undefined)\n  }\n\n  get (index) {\n    this._sortData()\n    const pos = this._internalPositionFor(index, true)\n    if (pos === -1) {\n      return undefined\n    }\n    return this._data[pos][1]\n  }\n\n  push (value) {\n    this.set(this.length, value)\n    return this.length\n  }\n\n  get length () {\n    this._sortData()\n    if (this._changedLength) {\n      const last = this._data[this._data.length - 1]\n      this._length = last ? last[0] + 1 : 0\n      this._changedLength = false\n    }\n    return this._length\n  }\n\n  forEach (iterator) {\n    let i = 0\n    while(i < this.length) {\n      iterator(this.get(i), i, this)\n      i++\n    }\n  }\n\n  map (iterator) {\n    let i = 0\n    let mapped = new Array(this.length)\n    while(i < this.length) {\n      mapped[i] = iterator(this.get(i), i, this)\n      i++\n    }\n    return mapped\n  }\n\n  reduce (reducer, initialValue) {\n    let i = 0\n    let acc = initialValue\n    while(i < this.length) {\n      const value = this.get(i)\n      acc = reducer(acc, value, i)\n      i++\n    }\n    return acc\n  }\n\n  find (finder) {\n    let i = 0, found, last\n    while ((i < this.length) && !found) {\n      last = this.get(i)\n      found = finder(last)\n      i++\n    }\n    return found ? last : undefined\n  }\n\n  _internalPositionFor (index, noCreate) {\n    const bytePos = this._bytePosFor(index, noCreate)\n    if (bytePos >= this._bitArrays.length) {\n      return -1\n    }\n    const byte = this._bitArrays[bytePos]\n    const bitPos = index - bytePos * BITS_PER_BYTE\n    const exists = (byte & (1 << bitPos)) > 0\n    if (!exists) {\n      return -1\n    }\n    const previousPopCount = this._bitArrays.slice(0, bytePos).reduce(popCountReduce, 0)\n\n    const mask = ~(0xffffffff << (bitPos + 1))\n    const bytePopCount = popCount(byte & mask)\n    const arrayPos = previousPopCount + bytePopCount - 1\n    return arrayPos\n  }\n\n  _bytePosFor (index, noCreate) {\n    const bytePos = Math.floor(index / BITS_PER_BYTE)\n    const targetLength = bytePos + 1\n    while (!noCreate && this._bitArrays.length < targetLength) {\n      this._bitArrays.push(0)\n    }\n    return bytePos\n  }\n\n  _setBit (index) {\n    const bytePos = this._bytePosFor(index, false)\n    this._bitArrays[bytePos] |= (1 << (index - (bytePos * BITS_PER_BYTE)))\n  }\n\n  _unsetBit(index) {\n    const bytePos = this._bytePosFor(index, false)\n    this._bitArrays[bytePos] &= ~(1 << (index - (bytePos * BITS_PER_BYTE)))\n  }\n\n  _setInternalPos(pos, index, value, needsSort) {\n    const data =this._data\n    const elem = [index, value]\n    if (needsSort) {\n      this._sortData()\n      data[pos] = elem\n    } else {\n      // new element. just shove it into the array\n      // but be nice about where we shove it\n      // in order to make sorting it later easier\n      if (data.length) {\n        if (data[data.length - 1][0] >= index) {\n          data.push(elem)\n        } else if (data[0][0] <= index) {\n          data.unshift(elem)\n        } else {\n          const randomIndex = Math.round(data.length / 2)\n          this._data = data.slice(0, randomIndex).concat(elem).concat(data.slice(randomIndex))\n        }\n      } else {\n        this._data.push(elem)\n      }\n      this._changedData = true\n      this._changedLength = true\n    }\n  }\n\n  _unsetInternalPos (pos) {\n    this._data.splice(pos, 1)\n  }\n\n  _sortData () {\n    if (this._changedData) {\n      this._data.sort(sortInternal)\n    }\n\n    this._changedData = false\n  }\n\n  bitField () {\n    const bytes = []\n    let pendingBitsForResultingByte = 8\n    let pendingBitsForNewByte = 0\n    let resultingByte = 0\n    let newByte\n    const pending = this._bitArrays.slice()\n    while (pending.length || pendingBitsForNewByte) {\n      if (pendingBitsForNewByte === 0) {\n        newByte = pending.shift()\n        pendingBitsForNewByte = 7\n      }\n\n      const usingBits = Math.min(pendingBitsForNewByte, pendingBitsForResultingByte)\n      const mask = ~(0b11111111 << usingBits)\n      const masked = newByte & mask\n      resultingByte |= masked << (8 - pendingBitsForResultingByte)\n      newByte = newByte >>> usingBits\n      pendingBitsForNewByte -= usingBits\n      pendingBitsForResultingByte -= usingBits\n\n      if (!pendingBitsForResultingByte || (!pendingBitsForNewByte && !pending.length)) {\n        bytes.push(resultingByte)\n        resultingByte = 0\n        pendingBitsForResultingByte = 8\n      }\n    }\n\n    // remove trailing zeroes\n    for(var i = bytes.length - 1; i > 0; i--) {\n      const value = bytes[i]\n      if (value === 0) {\n        bytes.pop()\n      } else {\n        break\n      }\n    }\n\n    return bytes\n  }\n\n  compactArray () {\n    this._sortData()\n    return this._data.map(valueOnly)\n  }\n}\n\nfunction popCountReduce (count, byte) {\n  return count + popCount(byte)\n}\n\nfunction popCount(_v) {\n  let v = _v\n  v = v - ((v >> 1) & 0x55555555)                    // reuse input as temporary\n  v = (v & 0x33333333) + ((v >> 2) & 0x33333333)     // temp\n  return ((v + (v >> 4) & 0xF0F0F0F) * 0x1010101) >> 24\n}\n\nfunction sortInternal (a, b) {\n  return a[0] - b[0]\n}\n\nfunction valueOnly (elem) {\n  return elem[1]\n}","'use strict'\n\n// @ts-ignore\nconst SparseArray = require('sparse-array')\nconst { fromString: uint8ArrayFromString } = require('uint8arrays/from-string')\n\n/**\n * @typedef {import('./consumable-hash').InfiniteHash} InfiniteHash\n * @typedef {import('../').UserBucketOptions} UserBucketOptions\n */\n\n/**\n * @template V\n * @typedef {object} BucketChild<V>\n * @property {string} key\n * @property {V} value\n * @property {InfiniteHash} hash\n */\n\n/**\n * @template B\n *\n * @typedef {object} SA<B>\n * @property {number} length\n * @property {() => B[]} compactArray\n * @property {(i: number) => B} get\n * @property {(i: number, value: B) => void} set\n * @property {<A> (fn: (acc: A, curr: B, index: number) => A, initial: A) => B} reduce\n * @property {(fn: (item: B) => boolean) => B | undefined} find\n * @property {() => number[]} bitField\n * @property {(i: number) => void} unset\n */\n\n/**\n * @template T\n *\n * @typedef {object} BucketPosition<T>\n * @property {Bucket<T>} bucket\n * @property {number} pos\n * @property {InfiniteHash} hash\n * @property {BucketChild<T>} [existingChild]\n */\n\n/**\n * @typedef {object} BucketOptions\n * @property {number} bits\n * @property {(value: Uint8Array | InfiniteHash) => InfiniteHash} hash\n */\n\n/**\n * @template T\n */\nclass Bucket {\n  /**\n   * @param {BucketOptions} options\n   * @param {Bucket<T>} [parent]\n   * @param {number} [posAtParent=0]\n   */\n  constructor (options, parent, posAtParent = 0) {\n    this._options = options\n    this._popCount = 0\n    this._parent = parent\n    this._posAtParent = posAtParent\n\n    /** @type {SA<Bucket<T> | BucketChild<T>>} */\n    this._children = new SparseArray()\n\n    /** @type {string | null} */\n    this.key = null\n  }\n\n  /**\n   * @param {string} key\n   * @param {T} value\n   */\n  async put (key, value) {\n    const place = await this._findNewBucketAndPos(key)\n\n    await place.bucket._putAt(place, key, value)\n  }\n\n  /**\n   * @param {string} key\n   */\n  async get (key) {\n    const child = await this._findChild(key)\n\n    if (child) {\n      return child.value\n    }\n  }\n\n  /**\n   * @param {string} key\n   */\n  async del (key) {\n    const place = await this._findPlace(key)\n    const child = place.bucket._at(place.pos)\n\n    if (child && child.key === key) {\n      place.bucket._delAt(place.pos)\n    }\n  }\n\n  /**\n   * @returns {number}\n   */\n  leafCount () {\n    const children = this._children.compactArray()\n\n    return children.reduce((acc, child) => {\n      if (child instanceof Bucket) {\n        return acc + child.leafCount()\n      }\n\n      return acc + 1\n    }, 0)\n  }\n\n  childrenCount () {\n    return this._children.length\n  }\n\n  onlyChild () {\n    return this._children.get(0)\n  }\n\n  /**\n   * @returns {Iterable<BucketChild<T>>}\n   */\n  * eachLeafSeries () {\n    const children = this._children.compactArray()\n\n    for (const child of children) {\n      if (child instanceof Bucket) {\n        yield * child.eachLeafSeries()\n      } else {\n        yield child\n      }\n    }\n\n    // this is necessary because tsc requires a @return annotation as it\n    // can't derive a return type due to the recursion, and eslint requires\n    // a return statement when there is a @return annotation\n    return []\n  }\n\n  /**\n   * @param {(value: BucketChild<T>, index: number) => T} map\n   * @param {(reduced: any) => any} reduce\n   */\n  serialize (map, reduce) {\n    /** @type {T[]} */\n    const acc = []\n    // serialize to a custom non-sparse representation\n    return reduce(this._children.reduce((acc, child, index) => {\n      if (child) {\n        if (child instanceof Bucket) {\n          acc.push(child.serialize(map, reduce))\n        } else {\n          acc.push(map(child, index))\n        }\n      }\n      return acc\n    }, acc))\n  }\n\n  /**\n   * @param {(value: BucketChild<T>) => Promise<T[]>} asyncMap\n   * @param {(reduced: any) => Promise<any>} asyncReduce\n   */\n  asyncTransform (asyncMap, asyncReduce) {\n    return asyncTransformBucket(this, asyncMap, asyncReduce)\n  }\n\n  toJSON () {\n    return this.serialize(mapNode, reduceNodes)\n  }\n\n  prettyPrint () {\n    return JSON.stringify(this.toJSON(), null, '  ')\n  }\n\n  tableSize () {\n    return Math.pow(2, this._options.bits)\n  }\n\n  /**\n   * @param {string} key\n   * @returns {Promise<BucketChild<T> | undefined>}\n   */\n  async _findChild (key) {\n    const result = await this._findPlace(key)\n    const child = result.bucket._at(result.pos)\n\n    if (child instanceof Bucket) {\n      // should not be possible, this._findPlace should always\n      // return a location for a child, not a bucket\n      return undefined\n    }\n\n    if (child && child.key === key) {\n      return child\n    }\n  }\n\n  /**\n   * @param {string | InfiniteHash} key\n   * @returns {Promise<BucketPosition<T>>}\n   */\n  async _findPlace (key) {\n    const hashValue = this._options.hash(typeof key === 'string' ? uint8ArrayFromString(key) : key)\n    const index = await hashValue.take(this._options.bits)\n\n    const child = this._children.get(index)\n\n    if (child instanceof Bucket) {\n      return child._findPlace(hashValue)\n    }\n\n    return {\n      bucket: this,\n      pos: index,\n      hash: hashValue,\n      existingChild: child\n    }\n  }\n\n  /**\n   * @param {string | InfiniteHash} key\n   * @returns {Promise<BucketPosition<T>>}\n   */\n  async _findNewBucketAndPos (key) {\n    const place = await this._findPlace(key)\n\n    if (place.existingChild && place.existingChild.key !== key) {\n      // conflict\n      const bucket = new Bucket(this._options, place.bucket, place.pos)\n      place.bucket._putObjectAt(place.pos, bucket)\n\n      // put the previous value\n      const newPlace = await bucket._findPlace(place.existingChild.hash)\n      newPlace.bucket._putAt(newPlace, place.existingChild.key, place.existingChild.value)\n\n      return bucket._findNewBucketAndPos(place.hash)\n    }\n\n    // no conflict, we found the place\n    return place\n  }\n\n  /**\n   * @param {BucketPosition<T>} place\n   * @param {string} key\n   * @param {T} value\n   */\n  _putAt (place, key, value) {\n    this._putObjectAt(place.pos, {\n      key: key,\n      value: value,\n      hash: place.hash\n    })\n  }\n\n  /**\n   * @param {number} pos\n   * @param {Bucket<T> | BucketChild<T>} object\n   */\n  _putObjectAt (pos, object) {\n    if (!this._children.get(pos)) {\n      this._popCount++\n    }\n    this._children.set(pos, object)\n  }\n\n  /**\n   * @param {number} pos\n   */\n  _delAt (pos) {\n    if (pos === -1) {\n      throw new Error('Invalid position')\n    }\n\n    if (this._children.get(pos)) {\n      this._popCount--\n    }\n    this._children.unset(pos)\n    this._level()\n  }\n\n  _level () {\n    if (this._parent && this._popCount <= 1) {\n      if (this._popCount === 1) {\n        // remove myself from parent, replacing me with my only child\n        const onlyChild = this._children.find(exists)\n\n        if (onlyChild && !(onlyChild instanceof Bucket)) {\n          const hash = onlyChild.hash\n          hash.untake(this._options.bits)\n          const place = {\n            pos: this._posAtParent,\n            hash: hash,\n            bucket: this._parent\n          }\n          this._parent._putAt(place, onlyChild.key, onlyChild.value)\n        }\n      } else {\n        this._parent._delAt(this._posAtParent)\n      }\n    }\n  }\n\n  /**\n   * @param {number} index\n   * @returns {BucketChild<T> | Bucket<T> | undefined}\n   */\n  _at (index) {\n    return this._children.get(index)\n  }\n}\n\n/**\n * @param {any} o\n */\nfunction exists (o) {\n  return Boolean(o)\n}\n\n/**\n *\n * @param {*} node\n * @param {number} index\n */\nfunction mapNode (node, index) {\n  return node.key\n}\n\n/**\n * @param {*} nodes\n */\nfunction reduceNodes (nodes) {\n  return nodes\n}\n\n/**\n * @template T\n *\n * @param {Bucket<T>} bucket\n * @param {(value: BucketChild<T>) => Promise<T[]>} asyncMap\n * @param {(reduced: any) => Promise<any>} asyncReduce\n */\nasync function asyncTransformBucket (bucket, asyncMap, asyncReduce) {\n  const output = []\n\n  for (const child of bucket._children.compactArray()) {\n    if (child instanceof Bucket) {\n      await asyncTransformBucket(child, asyncMap, asyncReduce)\n    } else {\n      const mappedChildren = await asyncMap(child)\n\n      output.push({\n        bitField: bucket._children.bitField(),\n        children: mappedChildren\n      })\n    }\n  }\n\n  return asyncReduce(output)\n}\n\nmodule.exports = Bucket\n","'use strict'\n\nconst START_MASKS = [\n  0b11111111,\n  0b11111110,\n  0b11111100,\n  0b11111000,\n  0b11110000,\n  0b11100000,\n  0b11000000,\n  0b10000000\n]\n\nconst STOP_MASKS = [\n  0b00000001,\n  0b00000011,\n  0b00000111,\n  0b00001111,\n  0b00011111,\n  0b00111111,\n  0b01111111,\n  0b11111111\n]\n\nmodule.exports = class ConsumableBuffer {\n  /**\n   * @param {Uint8Array} value\n   */\n  constructor (value) {\n    this._value = value\n    this._currentBytePos = value.length - 1\n    this._currentBitPos = 7\n  }\n\n  availableBits () {\n    return this._currentBitPos + 1 + this._currentBytePos * 8\n  }\n\n  totalBits () {\n    return this._value.length * 8\n  }\n\n  /**\n   * @param {number} bits\n   */\n  take (bits) {\n    let pendingBits = bits\n    let result = 0\n    while (pendingBits && this._haveBits()) {\n      const byte = this._value[this._currentBytePos]\n      const availableBits = this._currentBitPos + 1\n      const taking = Math.min(availableBits, pendingBits)\n      const value = byteBitsToInt(byte, availableBits - taking, taking)\n      result = (result << taking) + value\n\n      pendingBits -= taking\n\n      this._currentBitPos -= taking\n      if (this._currentBitPos < 0) {\n        this._currentBitPos = 7\n        this._currentBytePos--\n      }\n    }\n\n    return result\n  }\n\n  /**\n   * @param {number} bits\n   */\n  untake (bits) {\n    this._currentBitPos += bits\n    while (this._currentBitPos > 7) {\n      this._currentBitPos -= 8\n      this._currentBytePos += 1\n    }\n  }\n\n  _haveBits () {\n    return this._currentBytePos >= 0\n  }\n}\n\n/**\n * @param {number} byte\n * @param {number} start\n * @param {number} length\n */\nfunction byteBitsToInt (byte, start, length) {\n  const mask = maskFor(start, length)\n  return (byte & mask) >>> start\n}\n\n/**\n * @param {number} start\n * @param {number} length\n */\nfunction maskFor (start, length) {\n  return START_MASKS[start] & STOP_MASKS[Math.min(length + start - 1, 7)]\n}\n","export function concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n  const output = new Uint8Array(length);\n  let offset = 0;\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n  return output;\n}","'use strict'\n\nconst ConsumableBuffer = require('./consumable-buffer')\nconst { concat: uint8ArrayConcat } = require('uint8arrays/concat')\n\n/**\n * @param {(value: Uint8Array) => Promise<Uint8Array>} hashFn\n */\nfunction wrapHash (hashFn) {\n  /**\n   * @param {InfiniteHash | Uint8Array} value\n   */\n  function hashing (value) {\n    if (value instanceof InfiniteHash) {\n      // already a hash. return it\n      return value\n    } else {\n      return new InfiniteHash(value, hashFn)\n    }\n  }\n\n  return hashing\n}\n\nclass InfiniteHash {\n  /**\n   *\n   * @param {Uint8Array} value\n   * @param {(value: Uint8Array) => Promise<Uint8Array>} hashFn\n   */\n  constructor (value, hashFn) {\n    if (!(value instanceof Uint8Array)) {\n      throw new Error('can only hash Uint8Arrays')\n    }\n\n    this._value = value\n    this._hashFn = hashFn\n    this._depth = -1\n    this._availableBits = 0\n    this._currentBufferIndex = 0\n\n    /** @type {ConsumableBuffer[]} */\n    this._buffers = []\n  }\n\n  /**\n   * @param {number} bits\n   */\n  async take (bits) {\n    let pendingBits = bits\n\n    while (this._availableBits < pendingBits) {\n      await this._produceMoreBits()\n    }\n\n    let result = 0\n\n    while (pendingBits > 0) {\n      const hash = this._buffers[this._currentBufferIndex]\n      const available = Math.min(hash.availableBits(), pendingBits)\n      const took = hash.take(available)\n      result = (result << available) + took\n      pendingBits -= available\n      this._availableBits -= available\n\n      if (hash.availableBits() === 0) {\n        this._currentBufferIndex++\n      }\n    }\n\n    return result\n  }\n\n  /**\n   * @param {number} bits\n   */\n  untake (bits) {\n    let pendingBits = bits\n\n    while (pendingBits > 0) {\n      const hash = this._buffers[this._currentBufferIndex]\n      const availableForUntake = Math.min(hash.totalBits() - hash.availableBits(), pendingBits)\n      hash.untake(availableForUntake)\n      pendingBits -= availableForUntake\n      this._availableBits += availableForUntake\n\n      if (this._currentBufferIndex > 0 && hash.totalBits() === hash.availableBits()) {\n        this._depth--\n        this._currentBufferIndex--\n      }\n    }\n  }\n\n  async _produceMoreBits () {\n    this._depth++\n\n    const value = this._depth ? uint8ArrayConcat([this._value, Uint8Array.from([this._depth])]) : this._value\n    const hashValue = await this._hashFn(value)\n    const buffer = new ConsumableBuffer(hashValue)\n\n    this._buffers.push(buffer)\n    this._availableBits += buffer.availableBits()\n  }\n}\n\nmodule.exports = wrapHash\nmodule.exports.InfiniteHash = InfiniteHash\n","'use strict'\n\nconst Bucket = require('./bucket')\nconst wrapHash = require('./consumable-hash')\n\n/**\n * @typedef {object} UserBucketOptions\n * @property {(value: Uint8Array) => Promise<Uint8Array>} hashFn\n * @property {number} [bits=8]\n */\n\n/**\n * @param {UserBucketOptions} options\n */\nfunction createHAMT (options) {\n  if (!options || !options.hashFn) {\n    throw new Error('please define an options.hashFn')\n  }\n\n  const bucketOptions = {\n    bits: options.bits || 8,\n    hash: wrapHash(options.hashFn)\n  }\n\n  return new Bucket(bucketOptions)\n}\n\nmodule.exports = {\n  createHAMT,\n  Bucket\n}\n","import {\n  Bucket,\n  createHAMT\n} from 'hamt-sharding';\nimport { decode } from '@ipld/dag-pb';\nimport { murmur3128 } from '@multiformats/murmur3';\nconst hashFn = async function (buf) {\n  return (await murmur3128.encode(buf)).slice(0, 8).reverse();\n};\nconst addLinksToHamtBucket = (links, bucket, rootBucket) => {\n  return Promise.all(links.map(link => {\n    if (link.Name == null) {\n      throw new Error('Unexpected Link without a Name');\n    }\n    if (link.Name.length === 2) {\n      const pos = parseInt(link.Name, 16);\n      return bucket._putObjectAt(pos, new Bucket({\n        hash: rootBucket._options.hash,\n        bits: rootBucket._options.bits\n      }, bucket, pos));\n    }\n    return rootBucket.put(link.Name.substring(2), true);\n  }));\n};\nconst toPrefix = position => {\n  return position.toString(16).toUpperCase().padStart(2, '0').substring(0, 2);\n};\nconst toBucketPath = position => {\n  let bucket = position.bucket;\n  const path = [];\n  while (bucket._parent) {\n    path.push(bucket);\n    bucket = bucket._parent;\n  }\n  path.push(bucket);\n  return path.reverse();\n};\nconst findShardCid = async (node, name, blockstore, context, options) => {\n  if (!context) {\n    const rootBucket = createHAMT({ hashFn });\n    context = {\n      rootBucket,\n      hamtDepth: 1,\n      lastBucket: rootBucket\n    };\n  }\n  await addLinksToHamtBucket(node.Links, context.lastBucket, context.rootBucket);\n  const position = await context.rootBucket._findNewBucketAndPos(name);\n  let prefix = toPrefix(position.pos);\n  const bucketPath = toBucketPath(position);\n  if (bucketPath.length > context.hamtDepth) {\n    context.lastBucket = bucketPath[context.hamtDepth];\n    prefix = toPrefix(context.lastBucket._posAtParent);\n  }\n  const link = node.Links.find(link => {\n    if (link.Name == null) {\n      return false;\n    }\n    const entryPrefix = link.Name.substring(0, 2);\n    const entryName = link.Name.substring(2);\n    if (entryPrefix !== prefix) {\n      return false;\n    }\n    if (entryName && entryName !== name) {\n      return false;\n    }\n    return true;\n  });\n  if (!link) {\n    return null;\n  }\n  if (link.Name != null && link.Name.substring(2) === name) {\n    return link.Hash;\n  }\n  context.hamtDepth++;\n  const block = await blockstore.get(link.Hash, options);\n  node = decode(block);\n  return findShardCid(node, name, blockstore, context, options);\n};\nexport default findShardCid;","function extractDataFromBlock(block, blockStart, requestedStart, requestedEnd) {\n  const blockLength = block.length;\n  const blockEnd = blockStart + blockLength;\n  if (requestedStart >= blockEnd || requestedEnd < blockStart) {\n    return new Uint8Array(0);\n  }\n  if (requestedEnd >= blockStart && requestedEnd < blockEnd) {\n    block = block.slice(0, requestedEnd - blockStart);\n  }\n  if (requestedStart >= blockStart && requestedStart < blockEnd) {\n    block = block.slice(requestedStart - blockStart);\n  }\n  return block;\n}\nexport default extractDataFromBlock;","import errCode from 'err-code';\nconst validateOffsetAndLength = (size, offset, length) => {\n  if (!offset) {\n    offset = 0;\n  }\n  if (offset < 0) {\n    throw errCode(new Error('Offset must be greater than or equal to 0'), 'ERR_INVALID_PARAMS');\n  }\n  if (offset > size) {\n    throw errCode(new Error('Offset must be less than the file size'), 'ERR_INVALID_PARAMS');\n  }\n  if (!length && length !== 0) {\n    length = size - offset;\n  }\n  if (length < 0) {\n    throw errCode(new Error('Length must be greater than or equal to 0'), 'ERR_INVALID_PARAMS');\n  }\n  if (offset + length > size) {\n    length = size - offset;\n  }\n  return {\n    offset,\n    length\n  };\n};\nexport default validateOffsetAndLength;","import extractDataFromBlock from '../../../utils/extract-data-from-block.js';\nimport validateOffsetAndLength from '../../../utils/validate-offset-and-length.js';\nimport { UnixFS } from 'ipfs-unixfs';\nimport errCode from 'err-code';\nimport * as dagPb from '@ipld/dag-pb';\nimport * as dagCbor from '@ipld/dag-cbor';\nimport * as raw from 'multiformats/codecs/raw';\nasync function* emitBytes(blockstore, node, start, end, streamPosition = 0, options) {\n  if (node instanceof Uint8Array) {\n    const buf = extractDataFromBlock(node, streamPosition, start, end);\n    if (buf.length) {\n      yield buf;\n    }\n    streamPosition += buf.length;\n    return streamPosition;\n  }\n  if (node.Data == null) {\n    throw errCode(new Error('no data in PBNode'), 'ERR_NOT_UNIXFS');\n  }\n  let file;\n  try {\n    file = UnixFS.unmarshal(node.Data);\n  } catch (err) {\n    throw errCode(err, 'ERR_NOT_UNIXFS');\n  }\n  if (file.data && file.data.length) {\n    const buf = extractDataFromBlock(file.data, streamPosition, start, end);\n    if (buf.length) {\n      yield buf;\n    }\n    streamPosition += file.data.length;\n  }\n  let childStart = streamPosition;\n  for (let i = 0; i < node.Links.length; i++) {\n    const childLink = node.Links[i];\n    const childEnd = streamPosition + file.blockSizes[i];\n    if (start >= childStart && start < childEnd || end > childStart && end <= childEnd || start < childStart && end > childEnd) {\n      const block = await blockstore.get(childLink.Hash, { signal: options.signal });\n      let child;\n      switch (childLink.Hash.code) {\n      case dagPb.code:\n        child = await dagPb.decode(block);\n        break;\n      case raw.code:\n        child = block;\n        break;\n      case dagCbor.code:\n        child = await dagCbor.decode(block);\n        break;\n      default:\n        throw Error(`Unsupported codec: ${ childLink.Hash.code }`);\n      }\n      for await (const buf of emitBytes(blockstore, child, start, end, streamPosition, options)) {\n        streamPosition += buf.length;\n        yield buf;\n      }\n    }\n    streamPosition = childEnd;\n    childStart = childEnd + 1;\n  }\n}\nconst fileContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  function yieldFileContent(options = {}) {\n    const fileSize = unixfs.fileSize();\n    if (fileSize === undefined) {\n      throw new Error('File was a directory');\n    }\n    const {offset, length} = validateOffsetAndLength(fileSize, options.offset, options.length);\n    const start = offset;\n    const end = offset + length;\n    return emitBytes(blockstore, node, start, end, 0, options);\n  }\n  return yieldFileContent;\n};\nexport default fileContent;","const directoryContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  async function* yieldDirectoryContent(options = {}) {\n    const offset = options.offset || 0;\n    const length = options.length || node.Links.length;\n    const links = node.Links.slice(offset, length);\n    for (const link of links) {\n      const result = await resolve(link.Hash, link.Name || '', `${ path }/${ link.Name || '' }`, [], depth + 1, blockstore, options);\n      if (result.entry) {\n        yield result.entry;\n      }\n    }\n  }\n  return yieldDirectoryContent;\n};\nexport default directoryContent;","import { decode } from '@ipld/dag-pb';\nconst hamtShardedDirectoryContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  function yieldHamtDirectoryContent(options = {}) {\n    return listDirectory(node, path, resolve, depth, blockstore, options);\n  }\n  return yieldHamtDirectoryContent;\n};\nasync function* listDirectory(node, path, resolve, depth, blockstore, options) {\n  const links = node.Links;\n  for (const link of links) {\n    const name = link.Name != null ? link.Name.substring(2) : null;\n    if (name) {\n      const result = await resolve(link.Hash, name, `${ path }/${ name }`, [], depth + 1, blockstore, options);\n      yield result.entry;\n    } else {\n      const block = await blockstore.get(link.Hash);\n      node = decode(block);\n      for await (const file of listDirectory(node, path, resolve, depth, blockstore, options)) {\n        yield file;\n      }\n    }\n  }\n}\nexport default hamtShardedDirectoryContent;","import errCode from 'err-code';\nimport { UnixFS } from 'ipfs-unixfs';\nimport findShardCid from '../../utils/find-cid-in-shard.js';\nimport { decode } from '@ipld/dag-pb';\nimport contentFile from './content/file.js';\nimport contentDirectory from './content/directory.js';\nimport contentHamtShardedDirectory from './content/hamt-sharded-directory.js';\nconst findLinkCid = (node, name) => {\n  const link = node.Links.find(link => link.Name === name);\n  return link && link.Hash;\n};\nconst contentExporters = {\n  raw: contentFile,\n  file: contentFile,\n  directory: contentDirectory,\n  'hamt-sharded-directory': contentHamtShardedDirectory,\n  metadata: (cid, node, unixfs, path, resolve, depth, blockstore) => {\n    return () => [];\n  },\n  symlink: (cid, node, unixfs, path, resolve, depth, blockstore) => {\n    return () => [];\n  }\n};\nconst unixFsResolver = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  const block = await blockstore.get(cid, options);\n  const node = decode(block);\n  let unixfs;\n  let next;\n  if (!name) {\n    name = cid.toString();\n  }\n  if (node.Data == null) {\n    throw errCode(new Error('no data in PBNode'), 'ERR_NOT_UNIXFS');\n  }\n  try {\n    unixfs = UnixFS.unmarshal(node.Data);\n  } catch (err) {\n    throw errCode(err, 'ERR_NOT_UNIXFS');\n  }\n  if (!path) {\n    path = name;\n  }\n  if (toResolve.length) {\n    let linkCid;\n    if (unixfs && unixfs.type === 'hamt-sharded-directory') {\n      linkCid = await findShardCid(node, toResolve[0], blockstore);\n    } else {\n      linkCid = findLinkCid(node, toResolve[0]);\n    }\n    if (!linkCid) {\n      throw errCode(new Error('file does not exist'), 'ERR_NOT_FOUND');\n    }\n    const nextName = toResolve.shift();\n    const nextPath = `${ path }/${ nextName }`;\n    next = {\n      cid: linkCid,\n      toResolve,\n      name: nextName || '',\n      path: nextPath\n    };\n  }\n  return {\n    entry: {\n      type: unixfs.isDirectory() ? 'directory' : 'file',\n      name,\n      path,\n      cid,\n      content: contentExporters[unixfs.type](cid, node, unixfs, path, resolve, depth, blockstore),\n      unixfs,\n      depth,\n      node,\n      size: unixfs.fileSize()\n    },\n    next\n  };\n};\nexport default unixFsResolver;","import errCode from 'err-code';\nimport extractDataFromBlock from '../utils/extract-data-from-block.js';\nimport validateOffsetAndLength from '../utils/validate-offset-and-length.js';\nconst rawContent = node => {\n  async function* contentGenerator(options = {}) {\n    const {offset, length} = validateOffsetAndLength(node.length, options.offset, options.length);\n    yield extractDataFromBlock(node, 0, offset, offset + length);\n  }\n  return contentGenerator;\n};\nconst resolve = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  if (toResolve.length) {\n    throw errCode(new Error(`No link named ${ path } found in raw node ${ cid }`), 'ERR_NOT_FOUND');\n  }\n  const block = await blockstore.get(cid, options);\n  return {\n    entry: {\n      type: 'raw',\n      name,\n      path,\n      cid,\n      content: rawContent(block),\n      depth,\n      size: block.length,\n      node: block\n    }\n  };\n};\nexport default resolve;","import { CID } from 'multiformats/cid';\nimport errCode from 'err-code';\nimport * as dagCbor from '@ipld/dag-cbor';\nconst resolve = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  const block = await blockstore.get(cid);\n  const object = dagCbor.decode(block);\n  let subObject = object;\n  let subPath = path;\n  while (toResolve.length) {\n    const prop = toResolve[0];\n    if (prop in subObject) {\n      toResolve.shift();\n      subPath = `${ subPath }/${ prop }`;\n      const subObjectCid = CID.asCID(subObject[prop]);\n      if (subObjectCid) {\n        return {\n          entry: {\n            type: 'object',\n            name,\n            path,\n            cid,\n            node: block,\n            depth,\n            size: block.length,\n            content: async function* () {\n              yield object;\n            }\n          },\n          next: {\n            cid: subObjectCid,\n            name: prop,\n            path: subPath,\n            toResolve\n          }\n        };\n      }\n      subObject = subObject[prop];\n    } else {\n      throw errCode(new Error(`No property named ${ prop } found in cbor node ${ cid }`), 'ERR_NO_PROP');\n    }\n  }\n  return {\n    entry: {\n      type: 'object',\n      name,\n      path,\n      cid,\n      node: block,\n      depth,\n      size: block.length,\n      content: async function* () {\n        yield object;\n      }\n    }\n  };\n};\nexport default resolve;","import errCode from 'err-code';\nimport extractDataFromBlock from '../utils/extract-data-from-block.js';\nimport validateOffsetAndLength from '../utils/validate-offset-and-length.js';\nimport * as mh from 'multiformats/hashes/digest';\nconst rawContent = node => {\n  async function* contentGenerator(options = {}) {\n    const {offset, length} = validateOffsetAndLength(node.length, options.offset, options.length);\n    yield extractDataFromBlock(node, 0, offset, offset + length);\n  }\n  return contentGenerator;\n};\nconst resolve = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  if (toResolve.length) {\n    throw errCode(new Error(`No link named ${ path } found in raw node ${ cid }`), 'ERR_NOT_FOUND');\n  }\n  const buf = await mh.decode(cid.multihash.bytes);\n  return {\n    entry: {\n      type: 'identity',\n      name,\n      path,\n      cid,\n      content: rawContent(buf.digest),\n      depth,\n      size: buf.digest.length,\n      node: buf.digest\n    }\n  };\n};\nexport default resolve;","import errCode from 'err-code';\nimport * as dagPb from '@ipld/dag-pb';\nimport * as dagCbor from '@ipld/dag-cbor';\nimport * as raw from 'multiformats/codecs/raw';\nimport { identity } from 'multiformats/hashes/identity';\nimport dagPbResolver from './unixfs-v1/index.js';\nimport rawResolver from './raw.js';\nimport dagCborResolver from './dag-cbor.js';\nimport identifyResolver from './identity.js';\nconst resolvers = {\n  [dagPb.code]: dagPbResolver,\n  [raw.code]: rawResolver,\n  [dagCbor.code]: dagCborResolver,\n  [identity.code]: identifyResolver\n};\nfunction resolve(cid, name, path, toResolve, depth, blockstore, options) {\n  const resolver = resolvers[cid.code];\n  if (!resolver) {\n    throw errCode(new Error(`No resolver for code ${ cid.code }`), 'ERR_NO_RESOLVER');\n  }\n  return resolver(cid, name, path, toResolve, resolve, depth, blockstore, options);\n}\nexport default resolve;","import errCode from 'err-code';\nimport { CID } from 'multiformats/cid';\nimport resolve from './resolvers/index.js';\nimport last from 'it-last';\nconst toPathComponents = (path = '') => {\n  return (path.trim().match(/([^\\\\^/]|\\\\\\/)+/g) || []).filter(Boolean);\n};\nconst cidAndRest = path => {\n  if (path instanceof Uint8Array) {\n    return {\n      cid: CID.decode(path),\n      toResolve: []\n    };\n  }\n  const cid = CID.asCID(path);\n  if (cid) {\n    return {\n      cid,\n      toResolve: []\n    };\n  }\n  if (typeof path === 'string') {\n    if (path.indexOf('/ipfs/') === 0) {\n      path = path.substring(6);\n    }\n    const output = toPathComponents(path);\n    return {\n      cid: CID.parse(output[0]),\n      toResolve: output.slice(1)\n    };\n  }\n  throw errCode(new Error(`Unknown path type ${ path }`), 'ERR_BAD_PATH');\n};\nexport async function* walkPath(path, blockstore, options = {}) {\n  let {cid, toResolve} = cidAndRest(path);\n  let name = cid.toString();\n  let entryPath = name;\n  const startingDepth = toResolve.length;\n  while (true) {\n    const result = await resolve(cid, name, entryPath, toResolve, startingDepth, blockstore, options);\n    if (!result.entry && !result.next) {\n      throw errCode(new Error(`Could not resolve ${ path }`), 'ERR_NOT_FOUND');\n    }\n    if (result.entry) {\n      yield result.entry;\n    }\n    if (!result.next) {\n      return;\n    }\n    toResolve = result.next.toResolve;\n    cid = result.next.cid;\n    name = result.next.name;\n    entryPath = result.next.path;\n  }\n}\nexport async function exporter(path, blockstore, options = {}) {\n  const result = await last(walkPath(path, blockstore, options));\n  if (!result) {\n    throw errCode(new Error(`Could not resolve ${ path }`), 'ERR_NOT_FOUND');\n  }\n  return result;\n}\nexport async function* recursive(path, blockstore, options = {}) {\n  const node = await exporter(path, blockstore, options);\n  if (!node) {\n    return;\n  }\n  yield node;\n  if (node.type === 'directory') {\n    for await (const child of recurse(node, options)) {\n      yield child;\n    }\n  }\n  async function* recurse(node, options) {\n    for await (const file of node.content(options)) {\n      yield file;\n      if (file instanceof Uint8Array) {\n        continue;\n      }\n      if (file.type === 'directory') {\n        yield* recurse(file, options);\n      }\n    }\n  }\n}","export function equals(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}","import { equals } from 'uint8arrays/equals';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { BlockstoreAdapter } from 'interface-blockstore';\nexport class VerifyingGetOnlyBlockStore extends BlockstoreAdapter {\n    constructor(blockstore) {\n        super();\n        this.store = blockstore;\n    }\n    async get(cid) {\n        const res = await this.store.get(cid);\n        if (!res) {\n            throw new Error(`Incomplete CAR. Block missing for CID ${cid}`);\n        }\n        if (!isValid({ cid, bytes: res })) {\n            throw new Error(`Invalid CAR. Hash of block data does not match CID ${cid}`);\n        }\n        return res;\n    }\n    static fromBlockstore(b) {\n        return new VerifyingGetOnlyBlockStore(b);\n    }\n    static fromCarReader(cr) {\n        return new VerifyingGetOnlyBlockStore({\n            // Return bytes in the same fashion as a Blockstore implementation\n            get: async (cid) => {\n                const block = await cr.get(cid);\n                return block === null || block === void 0 ? void 0 : block.bytes;\n            }\n        });\n    }\n}\nasync function isValid({ cid, bytes }) {\n    const hash = await sha256.digest(bytes);\n    return equals(hash.digest, cid.multihash.digest);\n}\n","import toIterable from 'browser-readablestream-to-it';\nimport { CarBlockIterator } from '@ipld/car/iterator';\nimport { recursive as unixFsExporter } from 'ipfs-unixfs-exporter';\nimport { VerifyingGetOnlyBlockStore } from \"./utils/verifying-get-only-blockstore.js\";\nimport { MemoryBlockStore } from \"../blockstore/memory.js\";\n// Export unixfs entries from car file\nexport async function* unpack(carReader, roots) {\n    const verifyingBlockService = VerifyingGetOnlyBlockStore.fromCarReader(carReader);\n    if (!roots || roots.length === 0) {\n        roots = await carReader.getRoots();\n    }\n    for (const root of roots) {\n        yield* unixFsExporter(root, verifyingBlockService, { /* options */});\n    }\n}\nexport async function* unpackStream(readable, { roots, blockstore: userBlockstore } = {}) {\n    const carIterator = await CarBlockIterator.fromIterable(asAsyncIterable(readable));\n    const blockstore = userBlockstore || new MemoryBlockStore();\n    for await (const block of carIterator) {\n        await blockstore.put(block.cid, block.bytes);\n    }\n    const verifyingBlockStore = VerifyingGetOnlyBlockStore.fromBlockstore(blockstore);\n    if (!roots || roots.length === 0) {\n        roots = await carIterator.getRoots();\n    }\n    for (const root of roots) {\n        yield* unixFsExporter(root, verifyingBlockStore);\n    }\n}\n/**\n * Upgrade a ReadableStream to an AsyncIterable if it isn't already\n *\n * ReadableStream (e.g res.body) is asyncIterable in node, but not in chrome, yet.\n * see: https://bugs.chromium.org/p/chromium/issues/detail?id=929585\n */\nfunction asAsyncIterable(readable) {\n    // @ts-ignore how to convince tsc that we are checking the type here?\n    return Symbol.asyncIterator in readable ? readable : toIterable(readable);\n}\n","import {\n  bytes as binary,\n  CID\n} from './index.js';\nconst readonly = ({enumerable = true, configurable = false} = {}) => ({\n  enumerable,\n  configurable,\n  writable: false\n});\nconst links = function* (source, base) {\n  if (source == null)\n    return;\n  if (source instanceof Uint8Array)\n    return;\n  for (const [key, value] of Object.entries(source)) {\n    const path = [\n      ...base,\n      key\n    ];\n    if (value != null && typeof value === 'object') {\n      if (Array.isArray(value)) {\n        for (const [index, element] of value.entries()) {\n          const elementPath = [\n            ...path,\n            index\n          ];\n          const cid = CID.asCID(element);\n          if (cid) {\n            yield [\n              elementPath.join('/'),\n              cid\n            ];\n          } else if (typeof element === 'object') {\n            yield* links(element, elementPath);\n          }\n        }\n      } else {\n        const cid = CID.asCID(value);\n        if (cid) {\n          yield [\n            path.join('/'),\n            cid\n          ];\n        } else {\n          yield* links(value, path);\n        }\n      }\n    }\n  }\n};\nconst tree = function* (source, base) {\n  if (source == null)\n    return;\n  for (const [key, value] of Object.entries(source)) {\n    const path = [\n      ...base,\n      key\n    ];\n    yield path.join('/');\n    if (value != null && !(value instanceof Uint8Array) && typeof value === 'object' && !CID.asCID(value)) {\n      if (Array.isArray(value)) {\n        for (const [index, element] of value.entries()) {\n          const elementPath = [\n            ...path,\n            index\n          ];\n          yield elementPath.join('/');\n          if (typeof element === 'object' && !CID.asCID(element)) {\n            yield* tree(element, elementPath);\n          }\n        }\n      } else {\n        yield* tree(value, path);\n      }\n    }\n  }\n};\nconst get = (source, path) => {\n  let node = source;\n  for (const [index, key] of path.entries()) {\n    node = node[key];\n    if (node == null) {\n      throw new Error(`Object has no property at ${ path.slice(0, index + 1).map(part => `[${ JSON.stringify(part) }]`).join('') }`);\n    }\n    const cid = CID.asCID(node);\n    if (cid) {\n      return {\n        value: cid,\n        remaining: path.slice(index + 1).join('/')\n      };\n    }\n  }\n  return { value: node };\n};\nclass Block {\n  constructor({cid, bytes, value}) {\n    if (!cid || !bytes || typeof value === 'undefined')\n      throw new Error('Missing required argument');\n    this.cid = cid;\n    this.bytes = bytes;\n    this.value = value;\n    this.asBlock = this;\n    Object.defineProperties(this, {\n      cid: readonly(),\n      bytes: readonly(),\n      value: readonly(),\n      asBlock: readonly()\n    });\n  }\n  links() {\n    return links(this.value, []);\n  }\n  tree() {\n    return tree(this.value, []);\n  }\n  get(path = '/') {\n    return get(this.value, path.split('/').filter(Boolean));\n  }\n}\nconst encode = async ({value, codec, hasher}) => {\n  if (typeof value === 'undefined')\n    throw new Error('Missing required argument \"value\"');\n  if (!codec || !hasher)\n    throw new Error('Missing required argument: codec or hasher');\n  const bytes = codec.encode(value);\n  const hash = await hasher.digest(bytes);\n  const cid = CID.create(1, codec.code, hash);\n  return new Block({\n    value,\n    bytes,\n    cid\n  });\n};\nconst decode = async ({bytes, codec, hasher}) => {\n  if (!bytes)\n    throw new Error('Missing required argument \"bytes\"');\n  if (!codec || !hasher)\n    throw new Error('Missing required argument: codec or hasher');\n  const value = codec.decode(bytes);\n  const hash = await hasher.digest(bytes);\n  const cid = CID.create(1, codec.code, hash);\n  return new Block({\n    value,\n    bytes,\n    cid\n  });\n};\nconst createUnsafe = ({\n  bytes,\n  cid,\n  value: maybeValue,\n  codec\n}) => {\n  const value = maybeValue !== undefined ? maybeValue : codec && codec.decode(bytes);\n  if (value === undefined)\n    throw new Error('Missing required argument, must either provide \"value\" or \"codec\"');\n  return new Block({\n    cid,\n    bytes,\n    value\n  });\n};\nconst create = async ({bytes, cid, hasher, codec}) => {\n  if (!bytes)\n    throw new Error('Missing required argument \"bytes\"');\n  if (!hasher)\n    throw new Error('Missing required argument \"hasher\"');\n  const value = codec.decode(bytes);\n  const hash = await hasher.digest(bytes);\n  if (!binary.equals(cid.multihash.bytes, hash.bytes)) {\n    throw new Error('CID hash does not match bytes');\n  }\n  return createUnsafe({\n    bytes,\n    cid,\n    value,\n    codec\n  });\n};\nexport {\n  encode,\n  decode,\n  create,\n  createUnsafe,\n  Block\n};","import {\n  CarReader,\n  CarWriter\n} from '@ipld/car';\nimport { Block } from 'multiformats/block';\nimport * as raw from 'multiformats/codecs/raw';\nimport * as cbor from '@ipld/dag-cbor';\nimport * as pb from '@ipld/dag-pb';\nexport class TreewalkCarSplitter {\n  constructor(reader, targetSize, options = {}) {\n    if (typeof targetSize !== 'number' || targetSize <= 0) {\n      throw new Error('invalid target chunk size');\n    }\n    this._reader = reader;\n    this._targetSize = targetSize;\n    this._decoders = [\n      pb,\n      raw,\n      cbor,\n      ...options.decoders || []\n    ];\n  }\n  async *cars() {\n    const roots = await this._reader.getRoots();\n    if (roots.length !== 1)\n      throw new Error(`unexpected number of roots: ${ roots.length }`);\n    let channel;\n    for await (const val of this._cars(roots[0])) {\n      channel = val.channel;\n      if (val.out)\n        yield val.out;\n    }\n    if (!channel) {\n      throw new Error('missing CAR writer channel');\n    }\n    channel.writer.close();\n    yield channel.out;\n  }\n  async _get(cid) {\n    const rawBlock = await this._reader.get(cid);\n    if (!rawBlock)\n      throw new Error(`missing block for ${ cid }`);\n    const {bytes} = rawBlock;\n    const decoder = this._decoders.find(d => d.code === cid.code);\n    if (!decoder)\n      throw new Error(`missing decoder for ${ cid.code }`);\n    return new Block({\n      cid,\n      bytes,\n      value: decoder.decode(bytes)\n    });\n  }\n  async *_cars(cid, parents = [], channel = undefined) {\n    const block = await this._get(cid);\n    channel = channel || Object.assign(CarWriter.create(cid), { size: 0 });\n    if (channel.size > 0 && channel.size + block.bytes.byteLength >= this._targetSize) {\n      channel.writer.close();\n      const {out} = channel;\n      channel = newCar(parents);\n      yield {\n        channel,\n        out\n      };\n    }\n    parents = parents.concat(block);\n    channel.size += block.bytes.byteLength;\n    channel.writer.put(block);\n    for (const [, cid] of block.links()) {\n      for await (const val of this._cars(cid, parents, channel)) {\n        channel = val.channel;\n        yield val;\n      }\n    }\n    if (!channel) {\n      throw new Error('missing CAR writer channel');\n    }\n    yield { channel };\n  }\n  static async fromIterable(iterable, targetSize, options) {\n    const reader = await CarReader.fromIterable(iterable);\n    return new TreewalkCarSplitter(reader, targetSize, options);\n  }\n  static async fromBlob(blob, targetSize, options) {\n    const buffer = await blob.arrayBuffer();\n    const reader = await CarReader.fromBytes(new Uint8Array(buffer));\n    return new TreewalkCarSplitter(reader, targetSize, options);\n  }\n}\nfunction newCar(parents) {\n  const ch = Object.assign(CarWriter.create(parents[0].cid), { size: parents.reduce((size, b) => size + b.bytes.byteLength, 0) });\n  for (const b of parents) {\n    ch.writer.put(b);\n  }\n  return ch;\n}","export async function getFilesFromPath() {\n  throw new Error('Unsupported in this environment');\n}\nexport async function* filesFromPath() {\n  throw new Error('Unsupported in this environment');\n}","// TODO: Use indexedDb\nimport { MemoryBlockStore } from 'ipfs-car/blockstore/memory'\n\nexport const fetch = globalThis.fetch\nexport const Request = globalThis.Request\nexport const Response = globalThis.Response\nexport const Blob = globalThis.Blob\nexport const File = globalThis.File\nexport const Blockstore = MemoryBlockStore\n","/**\n * A client library for the https://web3.storage/ service. It provides a convenient\n * interface for working with the [Raw HTTP API](https://web3.storage/#api-docs)\n * from a web browser or [Node.js](https://nodejs.org/) and comes bundled with\n * TS for out-of-the box type inference and better IntelliSense.\n *\n * @example\n * ```js\n * import { Web3Storage, File } from 'web3.storage'\n * const client = new Web3Storage({ token: API_TOKEN })\n *\n * const cid = await client.put([new File(['hello world'], 'hello.txt', { type: 'text/plain' })])\n * ```\n * @module\n */\nimport { transform } from 'streaming-iterables'\nimport pRetry from 'p-retry'\nimport { pack } from 'ipfs-car/pack'\nimport parseLink from 'parse-link-header'\nimport { unpackStream } from 'ipfs-car/unpack'\nimport { TreewalkCarSplitter } from 'carbites/treewalk'\nimport { CarReader } from '@ipld/car'\nimport { filesFromPath, getFilesFromPath } from 'files-from-path'\nimport {\n  fetch,\n  File,\n  Blob,\n  Blockstore\n} from './platform.js'\n\nconst MAX_PUT_RETRIES = 5\nconst MAX_CONCURRENT_UPLOADS = 3\nconst MAX_CHUNK_SIZE = 1024 * 1024 * 10 // chunk to ~10MB CARs\n\n/** @typedef { import('./lib/interface.js').API } API */\n/** @typedef { import('./lib/interface.js').Status} Status */\n/** @typedef { import('./lib/interface.js').Upload} Upload */\n/** @typedef { import('./lib/interface.js').Service } Service */\n/** @typedef { import('./lib/interface.js').Web3File} Web3File */\n/** @typedef { import('./lib/interface.js').Filelike } Filelike */\n/** @typedef { import('./lib/interface.js').CIDString} CIDString */\n/** @typedef { import('./lib/interface.js').PutOptions} PutOptions */\n/** @typedef { import('./lib/interface.js').PutCarOptions} PutCarOptions */\n/** @typedef { import('./lib/interface.js').UnixFSEntry} UnixFSEntry */\n/** @typedef { import('./lib/interface.js').Web3Response} Web3Response */\n\n/**\n * @implements Service\n */\nclass Web3Storage {\n  /**\n   * Constructs a client bound to the given `options.token` and\n   * `options.endpoint`.\n   *\n   * @example\n   * ```js\n   * import { Web3Storage } from 'web3.storage'\n   * const client = new Web3Storage({ token: API_TOKEN })\n   * ```\n   *\n   * @param {{token: string, endpoint?:URL}} options\n   */\n  constructor ({ token, endpoint = new URL('https://api.web3.storage') }) {\n    /**\n     * Authorization token.\n     *\n     * @readonly\n     */\n    this.token = token\n    /**\n     * Service API endpoint `URL`.\n     * @readonly\n     */\n    this.endpoint = endpoint\n  }\n\n  /**\n   * @hidden\n   * @param {string} token\n   * @returns {Record<string, string>}\n   */\n  static headers (token) {\n    if (!token) throw new Error('missing token')\n    return {\n      Authorization: `Bearer ${token}`,\n      'X-Client': 'web3.storage'\n    }\n  }\n\n  /**\n   * @param {Service} service\n   * @param {Iterable<Filelike>} files\n   * @param {PutOptions} [options]\n   * @returns {Promise<CIDString>}\n   */\n  static async put ({ endpoint, token }, files, {\n    onRootCidReady,\n    onStoredChunk,\n    maxRetries = MAX_PUT_RETRIES,\n    wrapWithDirectory = true,\n    name\n  } = {}) {\n    const blockstore = new Blockstore()\n    try {\n      const { out, root } = await pack({\n        input: Array.from(files).map((f) => ({\n          path: f.name,\n          content: f.stream()\n        })),\n        blockstore,\n        wrapWithDirectory,\n        maxChunkSize: 1048576,\n        maxChildrenPerNode: 1024\n      })\n      onRootCidReady && onRootCidReady(root.toString())\n      const car = await CarReader.fromIterable(out)\n      return await Web3Storage.putCar({ endpoint, token }, car, { onStoredChunk, maxRetries, name })\n    } finally {\n      await blockstore.close()\n    }\n  }\n\n  /**\n   * @param {Service} service\n   * @param {import('@ipld/car/api').CarReader} car\n   * @param {PutCarOptions} [options]\n   * @returns {Promise<CIDString>}\n   */\n  static async putCar ({ endpoint, token }, car, {\n    name,\n    onStoredChunk,\n    maxRetries = MAX_PUT_RETRIES,\n    decoders\n  } = {}) {\n    const targetSize = MAX_CHUNK_SIZE\n    const url = new URL('/car', endpoint)\n    let headers = Web3Storage.headers(token)\n\n    if (name) {\n      headers = { ...headers, 'X-Name': name }\n    }\n\n    const roots = await car.getRoots()\n    if (roots[0] == null) {\n      throw new Error('missing root CID')\n    }\n    if (roots.length > 1) {\n      throw new Error('too many roots')\n    }\n\n    const carRoot = roots[0].toString()\n    const splitter = new TreewalkCarSplitter(car, targetSize, { decoders })\n\n    /**\n     * @param {AsyncIterable<Uint8Array>} car\n     * @returns {Promise<CIDString>}\n     */\n    const onCarChunk = async car => {\n      const carParts = []\n      for await (const part of car) {\n        carParts.push(part)\n      }\n\n      const carFile = new Blob(carParts, { type: 'application/car' })\n      const res = await pRetry(\n        async () => {\n          const request = await fetch(url.toString(), {\n            method: 'POST',\n            headers,\n            body: carFile\n          })\n          const res = await request.json()\n          if (!request.ok) {\n            throw new Error(res.message)\n          }\n\n          if (res.cid !== carRoot) {\n            throw new Error(`root CID mismatch, expected: ${carRoot}, received: ${res.cid}`)\n          }\n          return res.cid\n        },\n        { retries: maxRetries }\n      )\n\n      onStoredChunk && onStoredChunk(carFile.size)\n      return res\n    }\n\n    const upload = transform(MAX_CONCURRENT_UPLOADS, onCarChunk)\n    for await (const _ of upload(splitter.cars())) {} // eslint-disable-line\n    return carRoot\n  }\n\n  /**\n   * @param {Service} service\n   * @param {CIDString} cid\n   * @returns {Promise<Web3Response | null>}\n   */\n  static async get ({ endpoint, token }, cid) {\n    const url = new URL(`/car/${cid}`, endpoint)\n    const res = await fetch(url.toString(), {\n      method: 'GET',\n      headers: Web3Storage.headers(token)\n    })\n    return toWeb3Response(res)\n  }\n\n  /**\n   * @param {Service} service\n   * @param {CIDString} cid\n   * @returns {Promise<CIDString>}\n   */\n  /* c8 ignore next 4 */\n  static async delete ({ endpoint, token }, cid) {\n    console.log('Not deleting', cid, endpoint, token)\n    throw Error('.delete not implemented yet')\n  }\n\n  /**\n   * @param {Service} service\n   * @param {CIDString} cid\n   * @returns {Promise<Status | undefined>}\n   */\n  static async status ({ endpoint, token }, cid) {\n    const url = new URL(`/status/${cid}`, endpoint)\n    const res = await fetch(url.toString(), {\n      method: 'GET',\n      headers: Web3Storage.headers(token)\n    })\n    if (res.status === 404) {\n      return undefined\n    }\n    if (!res.ok) {\n      throw new Error(res.statusText)\n    }\n    return res.json()\n  }\n\n  /**\n   * @param {Service} service\n   * @param {object} [opts]\n   * @param {string} [opts.before] list items uploaded before this ISO 8601 date string\n   * @param {number} [opts.maxResults] maximum number of results to return\n   * @returns {AsyncIterable<Upload>}\n   */\n  static async * list (service, { before = new Date().toISOString(), maxResults = Infinity } = {}) {\n  /**\n   * @param {Service} service\n   * @param {{before: string, size: number}} opts\n   * @returns {Promise<Response>}\n   */\n    function listPage ({ endpoint, token }, { before, size }) {\n      const search = new URLSearchParams({ before, size: size.toString() })\n      const url = new URL(`/user/uploads?${search}`, endpoint)\n      return fetch(url.toString(), {\n        method: 'GET',\n        headers: {\n          ...Web3Storage.headers(token),\n          'Access-Control-Request-Headers': 'Link'\n        }\n      })\n    }\n    let count = 0\n    const size = maxResults > 100 ? 100 : maxResults\n    for await (const res of paginator(listPage, service, { before, size })) {\n      if (!res.ok) {\n        throw new Error(`${res.status} ${res.statusText}`)\n      }\n      const page = await res.json()\n      for (const upload of page) {\n        if (++count > maxResults) {\n          return\n        }\n        yield upload\n      }\n    }\n  }\n\n  // Just a sugar so you don't have to pass around endpoint and token around.\n\n  /**\n   * Uploads files to web3.storage. Files are hashed in the client and uploaded as a single\n   * [Content Addressed Archive(CAR)](https://github.com/ipld/specs/blob/master/block-layer/content-addressable-archives.md).\n   * Takes a [Blob](https://developer.mozilla.org/en-US/docs/Web/API/Blob/Blob)\n   *\n   * Returns the corresponding Content Identifier (CID).\n   *\n   * @example\n   * ```js\n   * const file = new File(['hello world'], 'hello.txt', { type: 'text/plain' })\n   * const cid = await client.put([file])\n   * ```\n   * @param {Iterable<Filelike>} files\n   * @param {PutOptions} [options]\n   */\n  put (files, options) {\n    return Web3Storage.put(this, files, options)\n  }\n\n  /**\n   * Uploads a CAR ([Content Addressed Archive](https://github.com/ipld/specs/blob/master/block-layer/content-addressable-archives.md)) file to web3.storage.\n   * Takes a CarReader interface from @ipld/car\n   *\n   * Returns the corresponding Content Identifier (CID).\n   *\n   * @example\n   * ```js\n   * import fs from 'fs'\n   * import { Readable } from 'stream'\n   * import { CarReader, CarWriter } from '@ipld/car'\n   * import * as raw from 'multiformats/codecs/raw'\n   * import { CID } from 'multiformats/cid'\n   * import { sha256 } from 'multiformats/hashes/sha2'\n   *\n   * async function getCar() {\n   *    const bytes = new TextEncoder().encode('random meaningless bytes')\n   *    const hash = await sha256.digest(raw.encode(bytes))\n   *    const cid = CID.create(1, raw.code, hash)\n   *\n   *    // create the writer and set the header with a single root\n   *    const { writer, out } = await CarWriter.create([cid])\n   *    Readable.from(out).pipe(fs.createWriteStream('example.car'))\n\n   *    // store a new block, creates a new file entry in the CAR archive\n   *    await writer.put({ cid, bytes })\n   *    await writer.close()\n\n   *    const inStream = fs.createReadStream('example.car')\n   *    // read and parse the entire stream in one go, this will cache the contents of\n   *    // the car in memory so is not suitable for large files.\n   *    const reader = await CarReader.fromIterable(inStream)\n   *    return reader\n   * }\n   *\n   * const car = await getCar()\n   * const cid = await client.putCar(car)\n   * ```\n   * @param {import('@ipld/car/api').CarReader} car\n   * @param {PutCarOptions} [options]\n   */\n  putCar (car, options) {\n    return Web3Storage.putCar(this, car, options)\n  }\n\n  /**\n   * Fetch the Content Addressed Archive by its root CID.\n   * @param {CIDString} cid\n   */\n  get (cid) {\n    return Web3Storage.get(this, cid)\n  }\n\n  /**\n   * @param {CIDString} cid\n   */\n  /* c8 ignore next 3 */\n  delete (cid) {\n    return Web3Storage.delete(this, cid)\n  }\n\n  /**\n   * Fetch info on Filecoin deals and IPFS pins that a given CID is replicated in.\n   * @param {CIDString} cid\n   */\n  status (cid) {\n    return Web3Storage.status(this, cid)\n  }\n\n  /**\n   * Find all uploads for this account. Use a `for await...of` loop to fetch them all.\n   * @example\n   * Fetch all the uploads\n   * ```js\n   * const uploads = []\n   * for await (const item of client.list()) {\n   *    uploads.push(item)\n   * }\n   * ```\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of\n   * @param {object} [opts]\n   * @param {string} [opts.before] list items uploaded before this ISO 8601 date string\n   * @param {number} [opts.maxResults] maximum number of results to return\n   * @returns {AsyncIterable<Upload>}\n   */\n  list (opts) {\n    return Web3Storage.list(this, opts)\n  }\n}\n\n/**\n * Map a UnixFSEntry to a File with a cid property\n * @param {UnixFSEntry} entry\n * @returns {Promise<Web3File>}\n */\nasync function toWeb3File ({ content, path, cid }) {\n  const chunks = []\n  for await (const chunk of content()) {\n    chunks.push(chunk)\n  }\n  const file = new File(chunks, toFilenameWithPath(path))\n  return Object.assign(file, { cid: cid.toString() })\n}\n\n/**\n * Trim the root cid from the path if there is anyting after it.\n * bafy...ic2q/path/to/pinpie.jpg => path/to/pinpie.jpg\n *         bafy...ic2q/pinpie.jpg => pinpie.jpg\n *                    bafk...52zy => bafk...52zy\n * @param {string} unixFsPath\n * @returns {string}\n */\nfunction toFilenameWithPath (unixFsPath) {\n  const slashIndex = unixFsPath.indexOf('/')\n  return slashIndex === -1 ? unixFsPath : unixFsPath.substring(slashIndex + 1)\n}\n\n/**\n * Add car unpacking smarts to the response object,\n * @param {Response} res\n * @returns {Web3Response}\n */\nfunction toWeb3Response (res) {\n  const response = Object.assign(res, {\n    unixFsIterator: async function * () {\n      if (!res.ok) {\n        throw new Error(`Response was not ok: ${res.status} ${res.statusText} - Check for { \"ok\": false } on the Response object before calling .unixFsIterator`)\n      }\n      /* c8 ignore next 3 */\n      if (!res.body) {\n        throw new Error('No body on response')\n      }\n      const blockstore = new Blockstore()\n      try {\n        for await (const entry of unpackStream(res.body, { blockstore })) {\n          yield entry\n        }\n      } finally {\n        await blockstore.close()\n      }\n    },\n    files: async () => {\n      if (!res.ok) {\n        throw new Error(`Response was not ok: ${res.status} ${res.statusText} - Check for { \"ok\": false } on the Response object before calling .files`)\n      }\n      const files = []\n      // @ts-ignore we're using the enriched response here\n      for await (const entry of response.unixFsIterator()) {\n        if (entry.type === 'directory') {\n          continue\n        }\n        const file = await toWeb3File(entry)\n        files.push(file)\n      }\n      return files\n    }\n  })\n  return response\n}\n\n/**\n * Follow Link headers on a Response, to fetch all the things.\n *\n * @param {(service: Service, opts: any) => Promise<Response>} fn\n * @param {Service} service\n * @param {{}} opts\n */\nasync function * paginator (fn, service, opts) {\n  let res = await fn(service, opts)\n  yield res\n  let link = parseLink(res.headers.get('Link') || '')\n  // @ts-ignore\n  while (link && link.next) {\n    // @ts-ignore\n    res = await fn(service, link.next)\n    yield res\n    link = parseLink(res.headers.get('Link') || '')\n  }\n}\n\nexport { Web3Storage, File, Blob, filesFromPath, getFilesFromPath }\n\n/**\n * Just to verify API compatibility.\n * TODO: convert lib to a regular class that can be type checked.\n * @type {API}\n */\nconst api = Web3Storage\nvoid api // eslint-disable-line no-void\n","import { CID } from 'multiformats/cid';\nimport * as dagPb from '@ipld/dag-pb';\nimport { sha256 } from 'multiformats/hashes/sha2';\nconst persist = async (buffer, blockstore, options) => {\n  if (!options.codec) {\n    options.codec = dagPb;\n  }\n  if (!options.hasher) {\n    options.hasher = sha256;\n  }\n  if (options.cidVersion === undefined) {\n    options.cidVersion = 1;\n  }\n  if (options.codec === dagPb && options.hasher !== sha256) {\n    options.cidVersion = 1;\n  }\n  const multihash = await options.hasher.digest(buffer);\n  const cid = CID.create(options.cidVersion, options.codec.code, multihash);\n  if (!options.onlyHash) {\n    await blockstore.put(cid, buffer, { signal: options.signal });\n  }\n  return cid;\n};\nexport default persist;","import { UnixFS } from 'ipfs-unixfs';\nimport persist from '../utils/persist.js';\nimport {\n  encode,\n  prepare\n} from '@ipld/dag-pb';\nconst dirBuilder = async (item, blockstore, options) => {\n  const unixfs = new UnixFS({\n    type: 'directory',\n    mtime: item.mtime,\n    mode: item.mode\n  });\n  const buffer = encode(prepare({ Data: unixfs.marshal() }));\n  const cid = await persist(buffer, blockstore, options);\n  const path = item.path;\n  return {\n    cid,\n    path,\n    unixfs,\n    size: buffer.length\n  };\n};\nexport default dirBuilder;","import all from 'it-all';\nasync function flat(source, reduce) {\n  return reduce(await all(source));\n}\nexport default flat;","import batch from 'it-batch';\nfunction balanced(source, reduce, options) {\n  return reduceToParents(source, reduce, options);\n}\nasync function reduceToParents(source, reduce, options) {\n  const roots = [];\n  for await (const chunked of batch(source, options.maxChildrenPerNode)) {\n    roots.push(await reduce(chunked));\n  }\n  if (roots.length > 1) {\n    return reduceToParents(roots, reduce, options);\n  }\n  return roots[0];\n}\nexport default balanced;","import batch from 'it-batch';\nasync function trickleStream(source, reduce, options) {\n  const root = new Root(options.layerRepeat);\n  let iteration = 0;\n  let maxDepth = 1;\n  let subTree = root;\n  for await (const layer of batch(source, options.maxChildrenPerNode)) {\n    if (subTree.isFull()) {\n      if (subTree !== root) {\n        root.addChild(await subTree.reduce(reduce));\n      }\n      if (iteration && iteration % options.layerRepeat === 0) {\n        maxDepth++;\n      }\n      subTree = new SubTree(maxDepth, options.layerRepeat, iteration);\n      iteration++;\n    }\n    subTree.append(layer);\n  }\n  if (subTree && subTree !== root) {\n    root.addChild(await subTree.reduce(reduce));\n  }\n  return root.reduce(reduce);\n}\nexport default trickleStream;\nclass SubTree {\n  constructor(maxDepth, layerRepeat, iteration = 0) {\n    this.maxDepth = maxDepth;\n    this.layerRepeat = layerRepeat;\n    this.currentDepth = 1;\n    this.iteration = iteration;\n    this.root = this.node = this.parent = {\n      children: [],\n      depth: this.currentDepth,\n      maxDepth,\n      maxChildren: (this.maxDepth - this.currentDepth) * this.layerRepeat\n    };\n  }\n  isFull() {\n    if (!this.root.data) {\n      return false;\n    }\n    if (this.currentDepth < this.maxDepth && this.node.maxChildren) {\n      this._addNextNodeToParent(this.node);\n      return false;\n    }\n    const distantRelative = this._findParent(this.node, this.currentDepth);\n    if (distantRelative) {\n      this._addNextNodeToParent(distantRelative);\n      return false;\n    }\n    return true;\n  }\n  _addNextNodeToParent(parent) {\n    this.parent = parent;\n    const nextNode = {\n      children: [],\n      depth: parent.depth + 1,\n      parent,\n      maxDepth: this.maxDepth,\n      maxChildren: Math.floor(parent.children.length / this.layerRepeat) * this.layerRepeat\n    };\n    parent.children.push(nextNode);\n    this.currentDepth = nextNode.depth;\n    this.node = nextNode;\n  }\n  append(layer) {\n    this.node.data = layer;\n  }\n  reduce(reduce) {\n    return this._reduce(this.root, reduce);\n  }\n  async _reduce(node, reduce) {\n    let children = [];\n    if (node.children.length) {\n      children = await Promise.all(node.children.filter(child => child.data).map(child => this._reduce(child, reduce)));\n    }\n    return reduce((node.data || []).concat(children));\n  }\n  _findParent(node, depth) {\n    const parent = node.parent;\n    if (!parent || parent.depth === 0) {\n      return;\n    }\n    if (parent.children.length === parent.maxChildren || !parent.maxChildren) {\n      return this._findParent(parent, depth);\n    }\n    return parent;\n  }\n}\nclass Root extends SubTree {\n  constructor(layerRepeat) {\n    super(0, layerRepeat);\n    this.root.depth = 0;\n    this.currentDepth = 1;\n  }\n  addChild(child) {\n    this.root.children.push(child);\n  }\n  reduce(reduce) {\n    return reduce((this.root.data || []).concat(this.root.children));\n  }\n}","import errCode from 'err-code';\nimport { UnixFS } from 'ipfs-unixfs';\nimport persist from '../../utils/persist.js';\nimport {\n  encode,\n  prepare\n} from '@ipld/dag-pb';\nimport parallelBatch from 'it-parallel-batch';\nimport * as rawCodec from 'multiformats/codecs/raw';\nimport * as dagPb from '@ipld/dag-pb';\nimport dagFlat from './flat.js';\nimport dagBalanced from './balanced.js';\nimport dagTrickle from './trickle.js';\nconst dagBuilders = {\n  flat: dagFlat,\n  balanced: dagBalanced,\n  trickle: dagTrickle\n};\nasync function* buildFileBatch(file, blockstore, options) {\n  let count = -1;\n  let previous;\n  let bufferImporter;\n  if (typeof options.bufferImporter === 'function') {\n    bufferImporter = options.bufferImporter;\n  } else {\n    bufferImporter = (await import('./buffer-importer.js')).default;\n  }\n  for await (const entry of parallelBatch(bufferImporter(file, blockstore, options), options.blockWriteConcurrency)) {\n    count++;\n    if (count === 0) {\n      previous = entry;\n      continue;\n    } else if (count === 1 && previous) {\n      yield previous;\n      previous = null;\n    }\n    yield entry;\n  }\n  if (previous) {\n    previous.single = true;\n    yield previous;\n  }\n}\nconst reduce = (file, blockstore, options) => {\n  async function reducer(leaves) {\n    if (leaves.length === 1 && leaves[0].single && options.reduceSingleLeafToSelf) {\n      const leaf = leaves[0];\n      if (leaf.cid.code === rawCodec.code && (file.mtime !== undefined || file.mode !== undefined)) {\n        let buffer = await blockstore.get(leaf.cid);\n        leaf.unixfs = new UnixFS({\n          type: 'file',\n          mtime: file.mtime,\n          mode: file.mode,\n          data: buffer\n        });\n        buffer = encode(prepare({ Data: leaf.unixfs.marshal() }));\n        leaf.cid = await persist(buffer, blockstore, {\n          ...options,\n          codec: dagPb,\n          hasher: options.hasher,\n          cidVersion: options.cidVersion\n        });\n        leaf.size = buffer.length;\n      }\n      return {\n        cid: leaf.cid,\n        path: file.path,\n        unixfs: leaf.unixfs,\n        size: leaf.size\n      };\n    }\n    const f = new UnixFS({\n      type: 'file',\n      mtime: file.mtime,\n      mode: file.mode\n    });\n    const links = leaves.filter(leaf => {\n      if (leaf.cid.code === rawCodec.code && leaf.size) {\n        return true;\n      }\n      if (leaf.unixfs && !leaf.unixfs.data && leaf.unixfs.fileSize()) {\n        return true;\n      }\n      return Boolean(leaf.unixfs && leaf.unixfs.data && leaf.unixfs.data.length);\n    }).map(leaf => {\n      if (leaf.cid.code === rawCodec.code) {\n        f.addBlockSize(leaf.size);\n        return {\n          Name: '',\n          Tsize: leaf.size,\n          Hash: leaf.cid\n        };\n      }\n      if (!leaf.unixfs || !leaf.unixfs.data) {\n        f.addBlockSize(leaf.unixfs && leaf.unixfs.fileSize() || 0);\n      } else {\n        f.addBlockSize(leaf.unixfs.data.length);\n      }\n      return {\n        Name: '',\n        Tsize: leaf.size,\n        Hash: leaf.cid\n      };\n    });\n    const node = {\n      Data: f.marshal(),\n      Links: links\n    };\n    const buffer = encode(prepare(node));\n    const cid = await persist(buffer, blockstore, options);\n    return {\n      cid,\n      path: file.path,\n      unixfs: f,\n      size: buffer.length + node.Links.reduce((acc, curr) => acc + curr.Tsize, 0)\n    };\n  }\n  return reducer;\n};\nfunction fileBuilder(file, block, options) {\n  const dagBuilder = dagBuilders[options.strategy];\n  if (!dagBuilder) {\n    throw errCode(new Error(`Unknown importer build strategy name: ${ options.strategy }`), 'ERR_BAD_STRATEGY');\n  }\n  return dagBuilder(buildFileBatch(file, block, options), reduce(file, block, options), options);\n}\nexport default fileBuilder;","import dirBuilder from './dir.js';\nimport fileBuilder from './file/index.js';\nimport errCode from 'err-code';\nfunction isIterable(thing) {\n  return Symbol.iterator in thing;\n}\nfunction isAsyncIterable(thing) {\n  return Symbol.asyncIterator in thing;\n}\nfunction contentAsAsyncIterable(content) {\n  try {\n    if (content instanceof Uint8Array) {\n      return async function* () {\n        yield content;\n      }();\n    } else if (isIterable(content)) {\n      return async function* () {\n        yield* content;\n      }();\n    } else if (isAsyncIterable(content)) {\n      return content;\n    }\n  } catch {\n    throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n  }\n  throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n}\nasync function* dagBuilder(source, blockstore, options) {\n  for await (const entry of source) {\n    if (entry.path) {\n      if (entry.path.substring(0, 2) === './') {\n        options.wrapWithDirectory = true;\n      }\n      entry.path = entry.path.split('/').filter(path => path && path !== '.').join('/');\n    }\n    if (entry.content) {\n      let chunker;\n      if (typeof options.chunker === 'function') {\n        chunker = options.chunker;\n      } else if (options.chunker === 'rabin') {\n        chunker = (await import('../chunker/rabin.js')).default;\n      } else {\n        chunker = (await import('../chunker/fixed-size.js')).default;\n      }\n      let chunkValidator;\n      if (typeof options.chunkValidator === 'function') {\n        chunkValidator = options.chunkValidator;\n      } else {\n        chunkValidator = (await import('./validate-chunks.js')).default;\n      }\n      const file = {\n        path: entry.path,\n        mtime: entry.mtime,\n        mode: entry.mode,\n        content: chunker(chunkValidator(contentAsAsyncIterable(entry.content), options), options)\n      };\n      yield () => fileBuilder(file, blockstore, options);\n    } else if (entry.path) {\n      const dir = {\n        path: entry.path,\n        mtime: entry.mtime,\n        mode: entry.mode\n      };\n      yield () => dirBuilder(dir, blockstore, options);\n    } else {\n      throw new Error('Import candidate must have content or path or both');\n    }\n  }\n}\nexport default dagBuilder;","class Dir {\n  constructor(props, options) {\n    this.options = options || {};\n    this.root = props.root;\n    this.dir = props.dir;\n    this.path = props.path;\n    this.dirty = props.dirty;\n    this.flat = props.flat;\n    this.parent = props.parent;\n    this.parentKey = props.parentKey;\n    this.unixfs = props.unixfs;\n    this.mode = props.mode;\n    this.mtime = props.mtime;\n    this.cid = undefined;\n    this.size = undefined;\n  }\n  async put(name, value) {\n  }\n  get(name) {\n    return Promise.resolve(this);\n  }\n  async *eachChildSeries() {\n  }\n  async *flush(blockstore) {\n  }\n}\nexport default Dir;","import {\n  encode,\n  prepare\n} from '@ipld/dag-pb';\nimport { UnixFS } from 'ipfs-unixfs';\nimport Dir from './dir.js';\nimport persist from './utils/persist.js';\nclass DirFlat extends Dir {\n  constructor(props, options) {\n    super(props, options);\n    this._children = {};\n  }\n  async put(name, value) {\n    this.cid = undefined;\n    this.size = undefined;\n    this._children[name] = value;\n  }\n  get(name) {\n    return Promise.resolve(this._children[name]);\n  }\n  childCount() {\n    return Object.keys(this._children).length;\n  }\n  directChildrenCount() {\n    return this.childCount();\n  }\n  onlyChild() {\n    return this._children[Object.keys(this._children)[0]];\n  }\n  async *eachChildSeries() {\n    const keys = Object.keys(this._children);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      yield {\n        key: key,\n        child: this._children[key]\n      };\n    }\n  }\n  async *flush(block) {\n    const children = Object.keys(this._children);\n    const links = [];\n    for (let i = 0; i < children.length; i++) {\n      let child = this._children[children[i]];\n      if (child instanceof Dir) {\n        for await (const entry of child.flush(block)) {\n          child = entry;\n          yield child;\n        }\n      }\n      if (child.size != null && child.cid) {\n        links.push({\n          Name: children[i],\n          Tsize: child.size,\n          Hash: child.cid\n        });\n      }\n    }\n    const unixfs = new UnixFS({\n      type: 'directory',\n      mtime: this.mtime,\n      mode: this.mode\n    });\n    const node = {\n      Data: unixfs.marshal(),\n      Links: links\n    };\n    const buffer = encode(prepare(node));\n    const cid = await persist(buffer, block, this.options);\n    const size = buffer.length + node.Links.reduce((acc, curr) => acc + (curr.Tsize == null ? 0 : curr.Tsize), 0);\n    this.cid = cid;\n    this.size = size;\n    yield {\n      cid,\n      unixfs,\n      path: this.path,\n      size\n    };\n  }\n}\nexport default DirFlat;","import {\n  encode,\n  prepare\n} from '@ipld/dag-pb';\nimport { UnixFS } from 'ipfs-unixfs';\nimport Dir from './dir.js';\nimport persist from './utils/persist.js';\nimport {\n  createHAMT,\n  Bucket\n} from 'hamt-sharding';\nclass DirSharded extends Dir {\n  constructor(props, options) {\n    super(props, options);\n    this._bucket = createHAMT({\n      hashFn: options.hamtHashFn,\n      bits: options.hamtBucketBits\n    });\n  }\n  async put(name, value) {\n    await this._bucket.put(name, value);\n  }\n  get(name) {\n    return this._bucket.get(name);\n  }\n  childCount() {\n    return this._bucket.leafCount();\n  }\n  directChildrenCount() {\n    return this._bucket.childrenCount();\n  }\n  onlyChild() {\n    return this._bucket.onlyChild();\n  }\n  async *eachChildSeries() {\n    for await (const {key, value} of this._bucket.eachLeafSeries()) {\n      yield {\n        key,\n        child: value\n      };\n    }\n  }\n  async *flush(blockstore) {\n    for await (const entry of flush(this._bucket, blockstore, this, this.options)) {\n      yield {\n        ...entry,\n        path: this.path\n      };\n    }\n  }\n}\nexport default DirSharded;\nasync function* flush(bucket, blockstore, shardRoot, options) {\n  const children = bucket._children;\n  const links = [];\n  let childrenSize = 0;\n  for (let i = 0; i < children.length; i++) {\n    const child = children.get(i);\n    if (!child) {\n      continue;\n    }\n    const labelPrefix = i.toString(16).toUpperCase().padStart(2, '0');\n    if (child instanceof Bucket) {\n      let shard;\n      for await (const subShard of await flush(child, blockstore, null, options)) {\n        shard = subShard;\n      }\n      if (!shard) {\n        throw new Error('Could not flush sharded directory, no subshard found');\n      }\n      links.push({\n        Name: labelPrefix,\n        Tsize: shard.size,\n        Hash: shard.cid\n      });\n      childrenSize += shard.size;\n    } else if (typeof child.value.flush === 'function') {\n      const dir = child.value;\n      let flushedDir;\n      for await (const entry of dir.flush(blockstore)) {\n        flushedDir = entry;\n        yield flushedDir;\n      }\n      const label = labelPrefix + child.key;\n      links.push({\n        Name: label,\n        Tsize: flushedDir.size,\n        Hash: flushedDir.cid\n      });\n      childrenSize += flushedDir.size;\n    } else {\n      const value = child.value;\n      if (!value.cid) {\n        continue;\n      }\n      const label = labelPrefix + child.key;\n      const size = value.size;\n      links.push({\n        Name: label,\n        Tsize: size,\n        Hash: value.cid\n      });\n      childrenSize += size;\n    }\n  }\n  const data = Uint8Array.from(children.bitField().reverse());\n  const dir = new UnixFS({\n    type: 'hamt-sharded-directory',\n    data,\n    fanout: bucket.tableSize(),\n    hashType: options.hamtHashCode,\n    mtime: shardRoot && shardRoot.mtime,\n    mode: shardRoot && shardRoot.mode\n  });\n  const node = {\n    Data: dir.marshal(),\n    Links: links\n  };\n  const buffer = encode(prepare(node));\n  const cid = await persist(buffer, blockstore, options);\n  const size = buffer.length + childrenSize;\n  yield {\n    cid,\n    unixfs: dir,\n    size\n  };\n}","import DirSharded from './dir-sharded.js';\nimport DirFlat from './dir-flat.js';\nasync function flatToShard(child, dir, threshold, options) {\n  let newDir = dir;\n  if (dir instanceof DirFlat && dir.directChildrenCount() >= threshold) {\n    newDir = await convertToShard(dir, options);\n  }\n  const parent = newDir.parent;\n  if (parent) {\n    if (newDir !== dir) {\n      if (child) {\n        child.parent = newDir;\n      }\n      if (!newDir.parentKey) {\n        throw new Error('No parent key found');\n      }\n      await parent.put(newDir.parentKey, newDir);\n    }\n    return flatToShard(newDir, parent, threshold, options);\n  }\n  return newDir;\n}\nasync function convertToShard(oldDir, options) {\n  const newDir = new DirSharded({\n    root: oldDir.root,\n    dir: true,\n    parent: oldDir.parent,\n    parentKey: oldDir.parentKey,\n    path: oldDir.path,\n    dirty: oldDir.dirty,\n    flat: false,\n    mtime: oldDir.mtime,\n    mode: oldDir.mode\n  }, options);\n  for await (const {key, child} of oldDir.eachChildSeries()) {\n    await newDir.put(key, child);\n  }\n  return newDir;\n}\nexport default flatToShard;","const toPathComponents = (path = '') => {\n  return (path.trim().match(/([^\\\\^/]|\\\\\\/)+/g) || []).filter(Boolean);\n};\nexport default toPathComponents;","import DirFlat from './dir-flat.js';\nimport flatToShard from './flat-to-shard.js';\nimport Dir from './dir.js';\nimport toPathComponents from './utils/to-path-components.js';\nasync function addToTree(elem, tree, options) {\n  const pathElems = toPathComponents(elem.path || '');\n  const lastIndex = pathElems.length - 1;\n  let parent = tree;\n  let currentPath = '';\n  for (let i = 0; i < pathElems.length; i++) {\n    const pathElem = pathElems[i];\n    currentPath += `${ currentPath ? '/' : '' }${ pathElem }`;\n    const last = i === lastIndex;\n    parent.dirty = true;\n    parent.cid = undefined;\n    parent.size = undefined;\n    if (last) {\n      await parent.put(pathElem, elem);\n      tree = await flatToShard(null, parent, options.shardSplitThreshold, options);\n    } else {\n      let dir = await parent.get(pathElem);\n      if (!dir || !(dir instanceof Dir)) {\n        dir = new DirFlat({\n          root: false,\n          dir: true,\n          parent: parent,\n          parentKey: pathElem,\n          path: currentPath,\n          dirty: true,\n          flat: true,\n          mtime: dir && dir.unixfs && dir.unixfs.mtime,\n          mode: dir && dir.unixfs && dir.unixfs.mode\n        }, options);\n      }\n      await parent.put(pathElem, dir);\n      parent = dir;\n    }\n  }\n  return tree;\n}\nasync function* flushAndYield(tree, blockstore) {\n  if (!(tree instanceof Dir)) {\n    if (tree && tree.unixfs && tree.unixfs.isDirectory()) {\n      yield tree;\n    }\n    return;\n  }\n  yield* tree.flush(blockstore);\n}\nasync function* treeBuilder(source, block, options) {\n  let tree = new DirFlat({\n    root: true,\n    dir: true,\n    path: '',\n    dirty: true,\n    flat: true\n  }, options);\n  for await (const entry of source) {\n    if (!entry) {\n      continue;\n    }\n    tree = await addToTree(entry, tree, options);\n    if (!entry.unixfs || !entry.unixfs.isDirectory()) {\n      yield entry;\n    }\n  }\n  if (options.wrapWithDirectory) {\n    yield* flushAndYield(tree, block);\n  } else {\n    for await (const unwrapped of tree.eachChildSeries()) {\n      if (!unwrapped) {\n        continue;\n      }\n      yield* flushAndYield(unwrapped.child, block);\n    }\n  }\n}\nexport default treeBuilder;","import { UnixFS } from 'ipfs-unixfs';\nimport persist from '../../utils/persist.js';\nimport * as dagPb from '@ipld/dag-pb';\nimport * as raw from 'multiformats/codecs/raw';\nasync function* bufferImporter(file, block, options) {\n  for await (let buffer of file.content) {\n    yield async () => {\n      options.progress(buffer.length, file.path);\n      let unixfs;\n      const opts = {\n        codec: dagPb,\n        cidVersion: options.cidVersion,\n        hasher: options.hasher,\n        onlyHash: options.onlyHash\n      };\n      if (options.rawLeaves) {\n        opts.codec = raw;\n        opts.cidVersion = 1;\n      } else {\n        unixfs = new UnixFS({\n          type: options.leafType,\n          data: buffer,\n          mtime: file.mtime,\n          mode: file.mode\n        });\n        buffer = dagPb.encode({\n          Data: unixfs.marshal(),\n          Links: []\n        });\n      }\n      return {\n        cid: await persist(buffer, block, opts),\n        unixfs,\n        size: buffer.length\n      };\n    };\n  }\n}\nexport default bufferImporter;","'use strict'\n\nconst { Buffer } = require('buffer')\nconst symbol = Symbol.for('BufferList')\n\nfunction BufferList (buf) {\n  if (!(this instanceof BufferList)) {\n    return new BufferList(buf)\n  }\n\n  BufferList._init.call(this, buf)\n}\n\nBufferList._init = function _init (buf) {\n  Object.defineProperty(this, symbol, { value: true })\n\n  this._bufs = []\n  this.length = 0\n\n  if (buf) {\n    this.append(buf)\n  }\n}\n\nBufferList.prototype._new = function _new (buf) {\n  return new BufferList(buf)\n}\n\nBufferList.prototype._offset = function _offset (offset) {\n  if (offset === 0) {\n    return [0, 0]\n  }\n\n  let tot = 0\n\n  for (let i = 0; i < this._bufs.length; i++) {\n    const _t = tot + this._bufs[i].length\n    if (offset < _t || i === this._bufs.length - 1) {\n      return [i, offset - tot]\n    }\n    tot = _t\n  }\n}\n\nBufferList.prototype._reverseOffset = function (blOffset) {\n  const bufferId = blOffset[0]\n  let offset = blOffset[1]\n\n  for (let i = 0; i < bufferId; i++) {\n    offset += this._bufs[i].length\n  }\n\n  return offset\n}\n\nBufferList.prototype.get = function get (index) {\n  if (index > this.length || index < 0) {\n    return undefined\n  }\n\n  const offset = this._offset(index)\n\n  return this._bufs[offset[0]][offset[1]]\n}\n\nBufferList.prototype.slice = function slice (start, end) {\n  if (typeof start === 'number' && start < 0) {\n    start += this.length\n  }\n\n  if (typeof end === 'number' && end < 0) {\n    end += this.length\n  }\n\n  return this.copy(null, 0, start, end)\n}\n\nBufferList.prototype.copy = function copy (dst, dstStart, srcStart, srcEnd) {\n  if (typeof srcStart !== 'number' || srcStart < 0) {\n    srcStart = 0\n  }\n\n  if (typeof srcEnd !== 'number' || srcEnd > this.length) {\n    srcEnd = this.length\n  }\n\n  if (srcStart >= this.length) {\n    return dst || Buffer.alloc(0)\n  }\n\n  if (srcEnd <= 0) {\n    return dst || Buffer.alloc(0)\n  }\n\n  const copy = !!dst\n  const off = this._offset(srcStart)\n  const len = srcEnd - srcStart\n  let bytes = len\n  let bufoff = (copy && dstStart) || 0\n  let start = off[1]\n\n  // copy/slice everything\n  if (srcStart === 0 && srcEnd === this.length) {\n    if (!copy) {\n      // slice, but full concat if multiple buffers\n      return this._bufs.length === 1\n        ? this._bufs[0]\n        : Buffer.concat(this._bufs, this.length)\n    }\n\n    // copy, need to copy individual buffers\n    for (let i = 0; i < this._bufs.length; i++) {\n      this._bufs[i].copy(dst, bufoff)\n      bufoff += this._bufs[i].length\n    }\n\n    return dst\n  }\n\n  // easy, cheap case where it's a subset of one of the buffers\n  if (bytes <= this._bufs[off[0]].length - start) {\n    return copy\n      ? this._bufs[off[0]].copy(dst, dstStart, start, start + bytes)\n      : this._bufs[off[0]].slice(start, start + bytes)\n  }\n\n  if (!copy) {\n    // a slice, we need something to copy in to\n    dst = Buffer.allocUnsafe(len)\n  }\n\n  for (let i = off[0]; i < this._bufs.length; i++) {\n    const l = this._bufs[i].length - start\n\n    if (bytes > l) {\n      this._bufs[i].copy(dst, bufoff, start)\n      bufoff += l\n    } else {\n      this._bufs[i].copy(dst, bufoff, start, start + bytes)\n      bufoff += l\n      break\n    }\n\n    bytes -= l\n\n    if (start) {\n      start = 0\n    }\n  }\n\n  // safeguard so that we don't return uninitialized memory\n  if (dst.length > bufoff) return dst.slice(0, bufoff)\n\n  return dst\n}\n\nBufferList.prototype.shallowSlice = function shallowSlice (start, end) {\n  start = start || 0\n  end = typeof end !== 'number' ? this.length : end\n\n  if (start < 0) {\n    start += this.length\n  }\n\n  if (end < 0) {\n    end += this.length\n  }\n\n  if (start === end) {\n    return this._new()\n  }\n\n  const startOffset = this._offset(start)\n  const endOffset = this._offset(end)\n  const buffers = this._bufs.slice(startOffset[0], endOffset[0] + 1)\n\n  if (endOffset[1] === 0) {\n    buffers.pop()\n  } else {\n    buffers[buffers.length - 1] = buffers[buffers.length - 1].slice(0, endOffset[1])\n  }\n\n  if (startOffset[1] !== 0) {\n    buffers[0] = buffers[0].slice(startOffset[1])\n  }\n\n  return this._new(buffers)\n}\n\nBufferList.prototype.toString = function toString (encoding, start, end) {\n  return this.slice(start, end).toString(encoding)\n}\n\nBufferList.prototype.consume = function consume (bytes) {\n  // first, normalize the argument, in accordance with how Buffer does it\n  bytes = Math.trunc(bytes)\n  // do nothing if not a positive number\n  if (Number.isNaN(bytes) || bytes <= 0) return this\n\n  while (this._bufs.length) {\n    if (bytes >= this._bufs[0].length) {\n      bytes -= this._bufs[0].length\n      this.length -= this._bufs[0].length\n      this._bufs.shift()\n    } else {\n      this._bufs[0] = this._bufs[0].slice(bytes)\n      this.length -= bytes\n      break\n    }\n  }\n\n  return this\n}\n\nBufferList.prototype.duplicate = function duplicate () {\n  const copy = this._new()\n\n  for (let i = 0; i < this._bufs.length; i++) {\n    copy.append(this._bufs[i])\n  }\n\n  return copy\n}\n\nBufferList.prototype.append = function append (buf) {\n  if (buf == null) {\n    return this\n  }\n\n  if (buf.buffer) {\n    // append a view of the underlying ArrayBuffer\n    this._appendBuffer(Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength))\n  } else if (Array.isArray(buf)) {\n    for (let i = 0; i < buf.length; i++) {\n      this.append(buf[i])\n    }\n  } else if (this._isBufferList(buf)) {\n    // unwrap argument into individual BufferLists\n    for (let i = 0; i < buf._bufs.length; i++) {\n      this.append(buf._bufs[i])\n    }\n  } else {\n    // coerce number arguments to strings, since Buffer(number) does\n    // uninitialized memory allocation\n    if (typeof buf === 'number') {\n      buf = buf.toString()\n    }\n\n    this._appendBuffer(Buffer.from(buf))\n  }\n\n  return this\n}\n\nBufferList.prototype._appendBuffer = function appendBuffer (buf) {\n  this._bufs.push(buf)\n  this.length += buf.length\n}\n\nBufferList.prototype.indexOf = function (search, offset, encoding) {\n  if (encoding === undefined && typeof offset === 'string') {\n    encoding = offset\n    offset = undefined\n  }\n\n  if (typeof search === 'function' || Array.isArray(search)) {\n    throw new TypeError('The \"value\" argument must be one of type string, Buffer, BufferList, or Uint8Array.')\n  } else if (typeof search === 'number') {\n    search = Buffer.from([search])\n  } else if (typeof search === 'string') {\n    search = Buffer.from(search, encoding)\n  } else if (this._isBufferList(search)) {\n    search = search.slice()\n  } else if (Array.isArray(search.buffer)) {\n    search = Buffer.from(search.buffer, search.byteOffset, search.byteLength)\n  } else if (!Buffer.isBuffer(search)) {\n    search = Buffer.from(search)\n  }\n\n  offset = Number(offset || 0)\n\n  if (isNaN(offset)) {\n    offset = 0\n  }\n\n  if (offset < 0) {\n    offset = this.length + offset\n  }\n\n  if (offset < 0) {\n    offset = 0\n  }\n\n  if (search.length === 0) {\n    return offset > this.length ? this.length : offset\n  }\n\n  const blOffset = this._offset(offset)\n  let blIndex = blOffset[0] // index of which internal buffer we're working on\n  let buffOffset = blOffset[1] // offset of the internal buffer we're working on\n\n  // scan over each buffer\n  for (; blIndex < this._bufs.length; blIndex++) {\n    const buff = this._bufs[blIndex]\n\n    while (buffOffset < buff.length) {\n      const availableWindow = buff.length - buffOffset\n\n      if (availableWindow >= search.length) {\n        const nativeSearchResult = buff.indexOf(search, buffOffset)\n\n        if (nativeSearchResult !== -1) {\n          return this._reverseOffset([blIndex, nativeSearchResult])\n        }\n\n        buffOffset = buff.length - search.length + 1 // end of native search window\n      } else {\n        const revOffset = this._reverseOffset([blIndex, buffOffset])\n\n        if (this._match(revOffset, search)) {\n          return revOffset\n        }\n\n        buffOffset++\n      }\n    }\n\n    buffOffset = 0\n  }\n\n  return -1\n}\n\nBufferList.prototype._match = function (offset, search) {\n  if (this.length - offset < search.length) {\n    return false\n  }\n\n  for (let searchOffset = 0; searchOffset < search.length; searchOffset++) {\n    if (this.get(offset + searchOffset) !== search[searchOffset]) {\n      return false\n    }\n  }\n  return true\n}\n\n;(function () {\n  const methods = {\n    readDoubleBE: 8,\n    readDoubleLE: 8,\n    readFloatBE: 4,\n    readFloatLE: 4,\n    readInt32BE: 4,\n    readInt32LE: 4,\n    readUInt32BE: 4,\n    readUInt32LE: 4,\n    readInt16BE: 2,\n    readInt16LE: 2,\n    readUInt16BE: 2,\n    readUInt16LE: 2,\n    readInt8: 1,\n    readUInt8: 1,\n    readIntBE: null,\n    readIntLE: null,\n    readUIntBE: null,\n    readUIntLE: null\n  }\n\n  for (const m in methods) {\n    (function (m) {\n      if (methods[m] === null) {\n        BufferList.prototype[m] = function (offset, byteLength) {\n          return this.slice(offset, offset + byteLength)[m](0, byteLength)\n        }\n      } else {\n        BufferList.prototype[m] = function (offset = 0) {\n          return this.slice(offset, offset + methods[m])[m](0)\n        }\n      }\n    }(m))\n  }\n}())\n\n// Used internally by the class and also as an indicator of this object being\n// a `BufferList`. It's not possible to use `instanceof BufferList` in a browser\n// environment because there could be multiple different copies of the\n// BufferList class and some `BufferList`s might be `BufferList`s.\nBufferList.prototype._isBufferList = function _isBufferList (b) {\n  return b instanceof BufferList || BufferList.isBufferList(b)\n}\n\nBufferList.isBufferList = function isBufferList (b) {\n  return b != null && b[symbol]\n}\n\nmodule.exports = BufferList\n","/**\n * Rabin fingerprinting\n *\n * @class Rabin\n */\nclass Rabin {\n    /**\n     * Creates an instance of Rabin.\n     * @param { import(\"./../dist/rabin-wasm\") } asModule\n     * @param {number} [bits=12]\n     * @param {number} [min=8 * 1024]\n     * @param {number} [max=32 * 1024]\n     * @param {number} polynomial\n     * @memberof Rabin\n     */\n    constructor(asModule, bits = 12, min = 8 * 1024, max = 32 * 1024, windowSize = 64, polynomial) {\n        this.bits = bits\n        this.min = min\n        this.max = max\n        this.asModule = asModule\n        this.rabin = new asModule.Rabin(bits, min, max, windowSize, polynomial)\n        this.polynomial = polynomial\n    }\n\n    /**\n     * Fingerprints the buffer\n     *\n     * @param {Uint8Array} buf\n     * @returns {Array<number>}\n     * @memberof Rabin\n     */\n    fingerprint(buf) {\n        const {\n            __retain,\n            __release,\n            __allocArray,\n            __getInt32Array,\n            Int32Array_ID,\n            Uint8Array_ID\n        } = this.asModule\n\n        const lengths = new Int32Array(Math.ceil(buf.length/this.min))\n        const lengthsPtr = __retain(__allocArray(Int32Array_ID, lengths))\n        const pointer = __retain(__allocArray(Uint8Array_ID, buf))\n\n        const out = this.rabin.fingerprint(pointer, lengthsPtr)\n        const processed = __getInt32Array(out)\n\n        __release(pointer)\n        __release(lengthsPtr)\n\n        const end = processed.indexOf(0);\n        return end >= 0 ? processed.subarray(0, end) : processed;\n    }\n}\n\nmodule.exports = Rabin","\"use strict\";\n\n// Runtime header offsets\nconst ID_OFFSET = -8;\nconst SIZE_OFFSET = -4;\n\n// Runtime ids\nconst ARRAYBUFFER_ID = 0;\nconst STRING_ID = 1;\nconst ARRAYBUFFERVIEW_ID = 2;\n\n// Runtime type information\nconst ARRAYBUFFERVIEW = 1 << 0;\nconst ARRAY = 1 << 1;\nconst SET = 1 << 2;\nconst MAP = 1 << 3;\nconst VAL_ALIGN_OFFSET = 5;\nconst VAL_ALIGN = 1 << VAL_ALIGN_OFFSET;\nconst VAL_SIGNED = 1 << 10;\nconst VAL_FLOAT = 1 << 11;\nconst VAL_NULLABLE = 1 << 12;\nconst VAL_MANAGED = 1 << 13;\nconst KEY_ALIGN_OFFSET = 14;\nconst KEY_ALIGN = 1 << KEY_ALIGN_OFFSET;\nconst KEY_SIGNED = 1 << 19;\nconst KEY_FLOAT = 1 << 20;\nconst KEY_NULLABLE = 1 << 21;\nconst KEY_MANAGED = 1 << 22;\n\n// Array(BufferView) layout\nconst ARRAYBUFFERVIEW_BUFFER_OFFSET = 0;\nconst ARRAYBUFFERVIEW_DATASTART_OFFSET = 4;\nconst ARRAYBUFFERVIEW_DATALENGTH_OFFSET = 8;\nconst ARRAYBUFFERVIEW_SIZE = 12;\nconst ARRAY_LENGTH_OFFSET = 12;\nconst ARRAY_SIZE = 16;\n\nconst BIGINT = typeof BigUint64Array !== \"undefined\";\nconst THIS = Symbol();\nconst CHUNKSIZE = 1024;\n\n/** Gets a string from an U32 and an U16 view on a memory. */\nfunction getStringImpl(buffer, ptr) {\n  const U32 = new Uint32Array(buffer);\n  const U16 = new Uint16Array(buffer);\n  var length = U32[(ptr + SIZE_OFFSET) >>> 2] >>> 1;\n  var offset = ptr >>> 1;\n  if (length <= CHUNKSIZE) return String.fromCharCode.apply(String, U16.subarray(offset, offset + length));\n  const parts = [];\n  do {\n    const last = U16[offset + CHUNKSIZE - 1];\n    const size = last >= 0xD800 && last < 0xDC00 ? CHUNKSIZE - 1 : CHUNKSIZE;\n    parts.push(String.fromCharCode.apply(String, U16.subarray(offset, offset += size)));\n    length -= size;\n  } while (length > CHUNKSIZE);\n  return parts.join(\"\") + String.fromCharCode.apply(String, U16.subarray(offset, offset + length));\n}\n\n/** Prepares the base module prior to instantiation. */\nfunction preInstantiate(imports) {\n  const baseModule = {};\n\n  function getString(memory, ptr) {\n    if (!memory) return \"<yet unknown>\";\n    return getStringImpl(memory.buffer, ptr);\n  }\n\n  // add common imports used by stdlib for convenience\n  const env = (imports.env = imports.env || {});\n  env.abort = env.abort || function abort(mesg, file, line, colm) {\n    const memory = baseModule.memory || env.memory; // prefer exported, otherwise try imported\n    throw Error(\"abort: \" + getString(memory, mesg) + \" at \" + getString(memory, file) + \":\" + line + \":\" + colm);\n  }\n  env.trace = env.trace || function trace(mesg, n) {\n    const memory = baseModule.memory || env.memory;\n    console.log(\"trace: \" + getString(memory, mesg) + (n ? \" \" : \"\") + Array.prototype.slice.call(arguments, 2, 2 + n).join(\", \"));\n  }\n  imports.Math = imports.Math || Math;\n  imports.Date = imports.Date || Date;\n\n  return baseModule;\n}\n\n/** Prepares the final module once instantiation is complete. */\nfunction postInstantiate(baseModule, instance) {\n  const rawExports = instance.exports;\n  const memory = rawExports.memory;\n  const table = rawExports.table;\n  const alloc = rawExports[\"__alloc\"];\n  const retain = rawExports[\"__retain\"];\n  const rttiBase = rawExports[\"__rtti_base\"] || ~0; // oob if not present\n\n  /** Gets the runtime type info for the given id. */\n  function getInfo(id) {\n    const U32 = new Uint32Array(memory.buffer);\n    const count = U32[rttiBase >>> 2];\n    if ((id >>>= 0) >= count) throw Error(\"invalid id: \" + id);\n    return U32[(rttiBase + 4 >>> 2) + id * 2];\n  }\n\n  /** Gets the runtime base id for the given id. */\n  function getBase(id) {\n    const U32 = new Uint32Array(memory.buffer);\n    const count = U32[rttiBase >>> 2];\n    if ((id >>>= 0) >= count) throw Error(\"invalid id: \" + id);\n    return U32[(rttiBase + 4 >>> 2) + id * 2 + 1];\n  }\n\n  /** Gets the runtime alignment of a collection's values. */\n  function getValueAlign(info) {\n    return 31 - Math.clz32((info >>> VAL_ALIGN_OFFSET) & 31); // -1 if none\n  }\n\n  /** Gets the runtime alignment of a collection's keys. */\n  function getKeyAlign(info) {\n    return 31 - Math.clz32((info >>> KEY_ALIGN_OFFSET) & 31); // -1 if none\n  }\n\n  /** Allocates a new string in the module's memory and returns its retained pointer. */\n  function __allocString(str) {\n    const length = str.length;\n    const ptr = alloc(length << 1, STRING_ID);\n    const U16 = new Uint16Array(memory.buffer);\n    for (var i = 0, p = ptr >>> 1; i < length; ++i) U16[p + i] = str.charCodeAt(i);\n    return ptr;\n  }\n\n  baseModule.__allocString = __allocString;\n\n  /** Reads a string from the module's memory by its pointer. */\n  function __getString(ptr) {\n    const buffer = memory.buffer;\n    const id = new Uint32Array(buffer)[ptr + ID_OFFSET >>> 2];\n    if (id !== STRING_ID) throw Error(\"not a string: \" + ptr);\n    return getStringImpl(buffer, ptr);\n  }\n\n  baseModule.__getString = __getString;\n\n  /** Gets the view matching the specified alignment, signedness and floatness. */\n  function getView(alignLog2, signed, float) {\n    const buffer = memory.buffer;\n    if (float) {\n      switch (alignLog2) {\n        case 2: return new Float32Array(buffer);\n        case 3: return new Float64Array(buffer);\n      }\n    } else {\n      switch (alignLog2) {\n        case 0: return new (signed ? Int8Array : Uint8Array)(buffer);\n        case 1: return new (signed ? Int16Array : Uint16Array)(buffer);\n        case 2: return new (signed ? Int32Array : Uint32Array)(buffer);\n        case 3: return new (signed ? BigInt64Array : BigUint64Array)(buffer);\n      }\n    }\n    throw Error(\"unsupported align: \" + alignLog2);\n  }\n\n  /** Allocates a new array in the module's memory and returns its retained pointer. */\n  function __allocArray(id, values) {\n    const info = getInfo(id);\n    if (!(info & (ARRAYBUFFERVIEW | ARRAY))) throw Error(\"not an array: \" + id + \" @ \" + info);\n    const align = getValueAlign(info);\n    const length = values.length;\n    const buf = alloc(length << align, ARRAYBUFFER_ID);\n    const arr = alloc(info & ARRAY ? ARRAY_SIZE : ARRAYBUFFERVIEW_SIZE, id);\n    const U32 = new Uint32Array(memory.buffer);\n    U32[arr + ARRAYBUFFERVIEW_BUFFER_OFFSET >>> 2] = retain(buf);\n    U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2] = buf;\n    U32[arr + ARRAYBUFFERVIEW_DATALENGTH_OFFSET >>> 2] = length << align;\n    if (info & ARRAY) U32[arr + ARRAY_LENGTH_OFFSET >>> 2] = length;\n    const view = getView(align, info & VAL_SIGNED, info & VAL_FLOAT);\n    if (info & VAL_MANAGED) {\n      for (let i = 0; i < length; ++i) view[(buf >>> align) + i] = retain(values[i]);\n    } else {\n      view.set(values, buf >>> align);\n    }\n    return arr;\n  }\n\n  baseModule.__allocArray = __allocArray;\n\n  /** Gets a live view on an array's values in the module's memory. Infers the array type from RTTI. */\n  function __getArrayView(arr) {\n    const U32 = new Uint32Array(memory.buffer);\n    const id = U32[arr + ID_OFFSET >>> 2];\n    const info = getInfo(id);\n    if (!(info & ARRAYBUFFERVIEW)) throw Error(\"not an array: \" + id);\n    const align = getValueAlign(info);\n    var buf = U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n    const length = info & ARRAY\n      ? U32[arr + ARRAY_LENGTH_OFFSET >>> 2]\n      : U32[buf + SIZE_OFFSET >>> 2] >>> align;\n    return getView(align, info & VAL_SIGNED, info & VAL_FLOAT)\n          .subarray(buf >>>= align, buf + length);\n  }\n\n  baseModule.__getArrayView = __getArrayView;\n\n  /** Copies an array's values from the module's memory. Infers the array type from RTTI. */\n  function __getArray(arr) {\n    const input = __getArrayView(arr);\n    const len = input.length;\n    const out = new Array(len);\n    for (let i = 0; i < len; i++) out[i] = input[i];\n    return out;\n  }\n\n  baseModule.__getArray = __getArray;\n\n  /** Copies an ArrayBuffer's value from the module's memory. */\n  function __getArrayBuffer(ptr) {\n    const buffer = memory.buffer;\n    const length = new Uint32Array(buffer)[ptr + SIZE_OFFSET >>> 2];\n    return buffer.slice(ptr, ptr + length);\n  }\n\n  baseModule.__getArrayBuffer = __getArrayBuffer;\n\n  /** Copies a typed array's values from the module's memory. */\n  function getTypedArray(Type, alignLog2, ptr) {\n    return new Type(getTypedArrayView(Type, alignLog2, ptr));\n  }\n\n  /** Gets a live view on a typed array's values in the module's memory. */\n  function getTypedArrayView(Type, alignLog2, ptr) {\n    const buffer = memory.buffer;\n    const U32 = new Uint32Array(buffer);\n    const bufPtr = U32[ptr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n    return new Type(buffer, bufPtr, U32[bufPtr + SIZE_OFFSET >>> 2] >>> alignLog2);\n  }\n\n  baseModule.__getInt8Array = getTypedArray.bind(null, Int8Array, 0);\n  baseModule.__getInt8ArrayView = getTypedArrayView.bind(null, Int8Array, 0);\n  baseModule.__getUint8Array = getTypedArray.bind(null, Uint8Array, 0);\n  baseModule.__getUint8ArrayView = getTypedArrayView.bind(null, Uint8Array, 0);\n  baseModule.__getUint8ClampedArray = getTypedArray.bind(null, Uint8ClampedArray, 0);\n  baseModule.__getUint8ClampedArrayView = getTypedArrayView.bind(null, Uint8ClampedArray, 0);\n  baseModule.__getInt16Array = getTypedArray.bind(null, Int16Array, 1);\n  baseModule.__getInt16ArrayView = getTypedArrayView.bind(null, Int16Array, 1);\n  baseModule.__getUint16Array = getTypedArray.bind(null, Uint16Array, 1);\n  baseModule.__getUint16ArrayView = getTypedArrayView.bind(null, Uint16Array, 1);\n  baseModule.__getInt32Array = getTypedArray.bind(null, Int32Array, 2);\n  baseModule.__getInt32ArrayView = getTypedArrayView.bind(null, Int32Array, 2);\n  baseModule.__getUint32Array = getTypedArray.bind(null, Uint32Array, 2);\n  baseModule.__getUint32ArrayView = getTypedArrayView.bind(null, Uint32Array, 2);\n  if (BIGINT) {\n    baseModule.__getInt64Array = getTypedArray.bind(null, BigInt64Array, 3);\n    baseModule.__getInt64ArrayView = getTypedArrayView.bind(null, BigInt64Array, 3);\n    baseModule.__getUint64Array = getTypedArray.bind(null, BigUint64Array, 3);\n    baseModule.__getUint64ArrayView = getTypedArrayView.bind(null, BigUint64Array, 3);\n  }\n  baseModule.__getFloat32Array = getTypedArray.bind(null, Float32Array, 2);\n  baseModule.__getFloat32ArrayView = getTypedArrayView.bind(null, Float32Array, 2);\n  baseModule.__getFloat64Array = getTypedArray.bind(null, Float64Array, 3);\n  baseModule.__getFloat64ArrayView = getTypedArrayView.bind(null, Float64Array, 3);\n\n  /** Tests whether an object is an instance of the class represented by the specified base id. */\n  function __instanceof(ptr, baseId) {\n    const U32 = new Uint32Array(memory.buffer);\n    var id = U32[(ptr + ID_OFFSET) >>> 2];\n    if (id <= U32[rttiBase >>> 2]) {\n      do if (id == baseId) return true;\n      while (id = getBase(id));\n    }\n    return false;\n  }\n\n  baseModule.__instanceof = __instanceof;\n\n  // Pull basic exports to baseModule so code in preInstantiate can use them\n  baseModule.memory = baseModule.memory || memory;\n  baseModule.table  = baseModule.table  || table;\n\n  // Demangle exports and provide the usual utility on the prototype\n  return demangle(rawExports, baseModule);\n}\n\nfunction isResponse(o) {\n  return typeof Response !== \"undefined\" && o instanceof Response;\n}\n\n/** Asynchronously instantiates an AssemblyScript module from anything that can be instantiated. */\nasync function instantiate(source, imports) {\n  if (isResponse(source = await source)) return instantiateStreaming(source, imports);\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    await WebAssembly.instantiate(\n      source instanceof WebAssembly.Module\n        ? source\n        : await WebAssembly.compile(source),\n      imports\n    )\n  );\n}\n\nexports.instantiate = instantiate;\n\n/** Synchronously instantiates an AssemblyScript module from a WebAssembly.Module or binary buffer. */\nfunction instantiateSync(source, imports) {\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    new WebAssembly.Instance(\n      source instanceof WebAssembly.Module\n        ? source\n        : new WebAssembly.Module(source),\n      imports\n    )\n  )\n}\n\nexports.instantiateSync = instantiateSync;\n\n/** Asynchronously instantiates an AssemblyScript module from a response, i.e. as obtained by `fetch`. */\nasync function instantiateStreaming(source, imports) {\n  if (!WebAssembly.instantiateStreaming) {\n    return instantiate(\n      isResponse(source = await source)\n        ? source.arrayBuffer()\n        : source,\n      imports\n    );\n  }\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    (await WebAssembly.instantiateStreaming(source, imports)).instance\n  );\n}\n\nexports.instantiateStreaming = instantiateStreaming;\n\n/** Demangles an AssemblyScript module's exports to a friendly object structure. */\nfunction demangle(exports, baseModule) {\n  var module = baseModule ? Object.create(baseModule) : {};\n  var setArgumentsLength = exports[\"__argumentsLength\"]\n    ? function(length) { exports[\"__argumentsLength\"].value = length; }\n    : exports[\"__setArgumentsLength\"] || exports[\"__setargc\"] || function() {};\n  for (let internalName in exports) {\n    if (!Object.prototype.hasOwnProperty.call(exports, internalName)) continue;\n    const elem = exports[internalName];\n    let parts = internalName.split(\".\");\n    let curr = module;\n    while (parts.length > 1) {\n      let part = parts.shift();\n      if (!Object.prototype.hasOwnProperty.call(curr, part)) curr[part] = {};\n      curr = curr[part];\n    }\n    let name = parts[0];\n    let hash = name.indexOf(\"#\");\n    if (hash >= 0) {\n      let className = name.substring(0, hash);\n      let classElem = curr[className];\n      if (typeof classElem === \"undefined\" || !classElem.prototype) {\n        let ctor = function(...args) {\n          return ctor.wrap(ctor.prototype.constructor(0, ...args));\n        };\n        ctor.prototype = {\n          valueOf: function valueOf() {\n            return this[THIS];\n          }\n        };\n        ctor.wrap = function(thisValue) {\n          return Object.create(ctor.prototype, { [THIS]: { value: thisValue, writable: false } });\n        };\n        if (classElem) Object.getOwnPropertyNames(classElem).forEach(name =>\n          Object.defineProperty(ctor, name, Object.getOwnPropertyDescriptor(classElem, name))\n        );\n        curr[className] = ctor;\n      }\n      name = name.substring(hash + 1);\n      curr = curr[className].prototype;\n      if (/^(get|set):/.test(name)) {\n        if (!Object.prototype.hasOwnProperty.call(curr, name = name.substring(4))) {\n          let getter = exports[internalName.replace(\"set:\", \"get:\")];\n          let setter = exports[internalName.replace(\"get:\", \"set:\")];\n          Object.defineProperty(curr, name, {\n            get: function() { return getter(this[THIS]); },\n            set: function(value) { setter(this[THIS], value); },\n            enumerable: true\n          });\n        }\n      } else {\n        if (name === 'constructor') {\n          (curr[name] = (...args) => {\n            setArgumentsLength(args.length);\n            return elem(...args);\n          }).original = elem;\n        } else { // instance method\n          (curr[name] = function(...args) { // !\n            setArgumentsLength(args.length);\n            return elem(this[THIS], ...args);\n          }).original = elem;\n        }\n      }\n    } else {\n      if (/^(get|set):/.test(name)) {\n        if (!Object.prototype.hasOwnProperty.call(curr, name = name.substring(4))) {\n          Object.defineProperty(curr, name, {\n            get: exports[internalName.replace(\"set:\", \"get:\")],\n            set: exports[internalName.replace(\"get:\", \"set:\")],\n            enumerable: true\n          });\n        }\n      } else if (typeof elem === \"function\" && elem !== setArgumentsLength) {\n        (curr[name] = (...args) => {\n          setArgumentsLength(args.length);\n          return elem(...args);\n        }).original = elem;\n      } else {\n        curr[name] = elem;\n      }\n    }\n  }\n  return module;\n}\n\nexports.demangle = demangle;\n","\nconst { instantiate } = require(\"@assemblyscript/loader\");\n\nloadWebAssembly.supported = typeof WebAssembly !== 'undefined'\n\nfunction loadWebAssembly (imp = {}) {\n  if (!loadWebAssembly.supported) return null\n  \n  var wasm = new Uint8Array([0,97,115,109,1,0,0,0,1,78,14,96,2,127,126,0,96,1,127,1,126,96,2,127,127,0,96,1,127,1,127,96,1,127,0,96,2,127,127,1,127,96,3,127,127,127,1,127,96,0,0,96,3,127,127,127,0,96,0,1,127,96,4,127,127,127,127,0,96,5,127,127,127,127,127,1,127,96,1,126,1,127,96,2,126,126,1,126,2,13,1,3,101,110,118,5,97,98,111,114,116,0,10,3,54,53,2,2,8,9,3,5,2,8,6,5,3,4,2,6,9,12,13,2,5,11,3,2,3,2,3,2,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,6,7,7,4,4,5,3,1,0,1,6,47,9,127,1,65,0,11,127,1,65,0,11,127,0,65,3,11,127,0,65,4,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,0,65,240,2,11,127,0,65,6,11,7,240,5,41,6,109,101,109,111,114,121,2,0,7,95,95,97,108,108,111,99,0,10,8,95,95,114,101,116,97,105,110,0,11,9,95,95,114,101,108,101,97,115,101,0,12,9,95,95,99,111,108,108,101,99,116,0,51,11,95,95,114,116,116,105,95,98,97,115,101,3,7,13,73,110,116,51,50,65,114,114,97,121,95,73,68,3,2,13,85,105,110,116,56,65,114,114,97,121,95,73,68,3,3,6,100,101,103,114,101,101,0,16,3,109,111,100,0,17,5,82,97,98,105,110,3,8,16,82,97,98,105,110,35,103,101,116,58,119,105,110,100,111,119,0,21,16,82,97,98,105,110,35,115,101,116,58,119,105,110,100,111,119,0,22,21,82,97,98,105,110,35,103,101,116,58,119,105,110,100,111,119,95,115,105,122,101,0,23,21,82,97,98,105,110,35,115,101,116,58,119,105,110,100,111,119,95,115,105,122,101,0,24,14,82,97,98,105,110,35,103,101,116,58,119,112,111,115,0,25,14,82,97,98,105,110,35,115,101,116,58,119,112,111,115,0,26,15,82,97,98,105,110,35,103,101,116,58,99,111,117,110,116,0,27,15,82,97,98,105,110,35,115,101,116,58,99,111,117,110,116,0,28,13,82,97,98,105,110,35,103,101,116,58,112,111,115,0,29,13,82,97,98,105,110,35,115,101,116,58,112,111,115,0,30,15,82,97,98,105,110,35,103,101,116,58,115,116,97,114,116,0,31,15,82,97,98,105,110,35,115,101,116,58,115,116,97,114,116,0,32,16,82,97,98,105,110,35,103,101,116,58,100,105,103,101,115,116,0,33,16,82,97,98,105,110,35,115,101,116,58,100,105,103,101,115,116,0,34,21,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,115,116,97,114,116,0,35,21,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,115,116,97,114,116,0,36,22,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,108,101,110,103,116,104,0,37,22,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,108,101,110,103,116,104,0,38,31,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,99,117,116,95,102,105,110,103,101,114,112,114,105,110,116,0,39,31,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,99,117,116,95,102,105,110,103,101,114,112,114,105,110,116,0,40,20,82,97,98,105,110,35,103,101,116,58,112,111,108,121,110,111,109,105,97,108,0,41,20,82,97,98,105,110,35,115,101,116,58,112,111,108,121,110,111,109,105,97,108,0,42,17,82,97,98,105,110,35,103,101,116,58,109,105,110,115,105,122,101,0,43,17,82,97,98,105,110,35,115,101,116,58,109,105,110,115,105,122,101,0,44,17,82,97,98,105,110,35,103,101,116,58,109,97,120,115,105,122,101,0,45,17,82,97,98,105,110,35,115,101,116,58,109,97,120,115,105,122,101,0,46,14,82,97,98,105,110,35,103,101,116,58,109,97,115,107,0,47,14,82,97,98,105,110,35,115,101,116,58,109,97,115,107,0,48,17,82,97,98,105,110,35,99,111,110,115,116,114,117,99,116,111,114,0,20,17,82,97,98,105,110,35,102,105,110,103,101,114,112,114,105,110,116,0,49,8,1,50,10,165,31,53,199,1,1,4,127,32,1,40,2,0,65,124,113,34,2,65,128,2,73,4,127,32,2,65,4,118,33,4,65,0,5,32,2,65,31,32,2,103,107,34,3,65,4,107,118,65,16,115,33,4,32,3,65,7,107,11,33,3,32,1,40,2,20,33,2,32,1,40,2,16,34,5,4,64,32,5,32,2,54,2,20,11,32,2,4,64,32,2,32,5,54,2,16,11,32,1,32,0,32,4,32,3,65,4,116,106,65,2,116,106,40,2,96,70,4,64,32,0,32,4,32,3,65,4,116,106,65,2,116,106,32,2,54,2,96,32,2,69,4,64,32,0,32,3,65,2,116,106,32,0,32,3,65,2,116,106,40,2,4,65,1,32,4,116,65,127,115,113,34,1,54,2,4,32,1,69,4,64,32,0,32,0,40,2,0,65,1,32,3,116,65,127,115,113,54,2,0,11,11,11,11,226,2,1,6,127,32,1,40,2,0,33,3,32,1,65,16,106,32,1,40,2,0,65,124,113,106,34,4,40,2,0,34,5,65,1,113,4,64,32,3,65,124,113,65,16,106,32,5,65,124,113,106,34,2,65,240,255,255,255,3,73,4,64,32,0,32,4,16,1,32,1,32,2,32,3,65,3,113,114,34,3,54,2,0,32,1,65,16,106,32,1,40,2,0,65,124,113,106,34,4,40,2,0,33,5,11,11,32,3,65,2,113,4,64,32,1,65,4,107,40,2,0,34,2,40,2,0,34,6,65,124,113,65,16,106,32,3,65,124,113,106,34,7,65,240,255,255,255,3,73,4,64,32,0,32,2,16,1,32,2,32,7,32,6,65,3,113,114,34,3,54,2,0,32,2,33,1,11,11,32,4,32,5,65,2,114,54,2,0,32,4,65,4,107,32,1,54,2,0,32,0,32,3,65,124,113,34,2,65,128,2,73,4,127,32,2,65,4,118,33,4,65,0,5,32,2,65,31,32,2,103,107,34,2,65,4,107,118,65,16,115,33,4,32,2,65,7,107,11,34,3,65,4,116,32,4,106,65,2,116,106,40,2,96,33,2,32,1,65,0,54,2,16,32,1,32,2,54,2,20,32,2,4,64,32,2,32,1,54,2,16,11,32,0,32,4,32,3,65,4,116,106,65,2,116,106,32,1,54,2,96,32,0,32,0,40,2,0,65,1,32,3,116,114,54,2,0,32,0,32,3,65,2,116,106,32,0,32,3,65,2,116,106,40,2,4,65,1,32,4,116,114,54,2,4,11,119,1,1,127,32,2,2,127,32,0,40,2,160,12,34,2,4,64,32,2,32,1,65,16,107,70,4,64,32,2,40,2,0,33,3,32,1,65,16,107,33,1,11,11,32,1,11,107,34,2,65,48,73,4,64,15,11,32,1,32,3,65,2,113,32,2,65,32,107,65,1,114,114,54,2,0,32,1,65,0,54,2,16,32,1,65,0,54,2,20,32,1,32,2,106,65,16,107,34,2,65,2,54,2,0,32,0,32,2,54,2,160,12,32,0,32,1,16,2,11,155,1,1,3,127,35,0,34,0,69,4,64,65,1,63,0,34,0,74,4,127,65,1,32,0,107,64,0,65,0,72,5,65,0,11,4,64,0,11,65,176,3,34,0,65,0,54,2,0,65,208,15,65,0,54,2,0,3,64,32,1,65,23,73,4,64,32,1,65,2,116,65,176,3,106,65,0,54,2,4,65,0,33,2,3,64,32,2,65,16,73,4,64,32,1,65,4,116,32,2,106,65,2,116,65,176,3,106,65,0,54,2,96,32,2,65,1,106,33,2,12,1,11,11,32,1,65,1,106,33,1,12,1,11,11,65,176,3,65,224,15,63,0,65,16,116,16,3,65,176,3,36,0,11,32,0,11,45,0,32,0,65,240,255,255,255,3,79,4,64,65,32,65,224,0,65,201,3,65,29,16,0,0,11,32,0,65,15,106,65,112,113,34,0,65,16,32,0,65,16,75,27,11,169,1,1,1,127,32,0,32,1,65,128,2,73,4,127,32,1,65,4,118,33,1,65,0,5,32,1,65,248,255,255,255,1,73,4,64,32,1,65,1,65,27,32,1,103,107,116,106,65,1,107,33,1,11,32,1,65,31,32,1,103,107,34,2,65,4,107,118,65,16,115,33,1,32,2,65,7,107,11,34,2,65,2,116,106,40,2,4,65,127,32,1,116,113,34,1,4,127,32,0,32,1,104,32,2,65,4,116,106,65,2,116,106,40,2,96,5,32,0,40,2,0,65,127,32,2,65,1,106,116,113,34,1,4,127,32,0,32,0,32,1,104,34,0,65,2,116,106,40,2,4,104,32,0,65,4,116,106,65,2,116,106,40,2,96,5,65,0,11,11,11,111,1,1,127,63,0,34,2,32,1,65,248,255,255,255,1,73,4,127,32,1,65,1,65,27,32,1,103,107,116,65,1,107,106,5,32,1,11,65,16,32,0,40,2,160,12,32,2,65,16,116,65,16,107,71,116,106,65,255,255,3,106,65,128,128,124,113,65,16,118,34,1,32,2,32,1,74,27,64,0,65,0,72,4,64,32,1,64,0,65,0,72,4,64,0,11,11,32,0,32,2,65,16,116,63,0,65,16,116,16,3,11,113,1,2,127,32,1,40,2,0,34,3,65,124,113,32,2,107,34,4,65,32,79,4,64,32,1,32,2,32,3,65,2,113,114,54,2,0,32,2,32,1,65,16,106,106,34,1,32,4,65,16,107,65,1,114,54,2,0,32,0,32,1,16,2,5,32,1,32,3,65,126,113,54,2,0,32,1,65,16,106,32,1,40,2,0,65,124,113,106,32,1,65,16,106,32,1,40,2,0,65,124,113,106,40,2,0,65,125,113,54,2,0,11,11,91,1,2,127,32,0,32,1,16,5,34,4,16,6,34,3,69,4,64,65,1,36,1,65,0,36,1,32,0,32,4,16,6,34,3,69,4,64,32,0,32,4,16,7,32,0,32,4,16,6,33,3,11,11,32,3,65,0,54,2,4,32,3,32,2,54,2,8,32,3,32,1,54,2,12,32,0,32,3,16,1,32,0,32,3,32,4,16,8,32,3,11,13,0,16,4,32,0,32,1,16,9,65,16,106,11,33,1,1,127,32,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,11,18,0,32,0,65,172,3,75,4,64,32,0,65,16,107,16,52,11,11,140,3,1,1,127,2,64,32,1,69,13,0,32,0,65,0,58,0,0,32,0,32,1,106,65,1,107,65,0,58,0,0,32,1,65,2,77,13,0,32,0,65,1,106,65,0,58,0,0,32,0,65,2,106,65,0,58,0,0,32,0,32,1,106,34,2,65,2,107,65,0,58,0,0,32,2,65,3,107,65,0,58,0,0,32,1,65,6,77,13,0,32,0,65,3,106,65,0,58,0,0,32,0,32,1,106,65,4,107,65,0,58,0,0,32,1,65,8,77,13,0,32,1,65,0,32,0,107,65,3,113,34,1,107,33,2,32,0,32,1,106,34,0,65,0,54,2,0,32,0,32,2,65,124,113,34,1,106,65,4,107,65,0,54,2,0,32,1,65,8,77,13,0,32,0,65,4,106,65,0,54,2,0,32,0,65,8,106,65,0,54,2,0,32,0,32,1,106,34,2,65,12,107,65,0,54,2,0,32,2,65,8,107,65,0,54,2,0,32,1,65,24,77,13,0,32,0,65,12,106,65,0,54,2,0,32,0,65,16,106,65,0,54,2,0,32,0,65,20,106,65,0,54,2,0,32,0,65,24,106,65,0,54,2,0,32,0,32,1,106,34,2,65,28,107,65,0,54,2,0,32,2,65,24,107,65,0,54,2,0,32,2,65,20,107,65,0,54,2,0,32,2,65,16,107,65,0,54,2,0,32,0,32,0,65,4,113,65,24,106,34,2,106,33,0,32,1,32,2,107,33,1,3,64,32,1,65,32,79,4,64,32,0,66,0,55,3,0,32,0,65,8,106,66,0,55,3,0,32,0,65,16,106,66,0,55,3,0,32,0,65,24,106,66,0,55,3,0,32,1,65,32,107,33,1,32,0,65,32,106,33,0,12,1,11,11,11,11,178,1,1,3,127,32,1,65,240,255,255,255,3,32,2,118,75,4,64,65,144,1,65,192,1,65,23,65,56,16,0,0,11,32,1,32,2,116,34,3,65,0,16,10,34,2,32,3,16,13,32,0,69,4,64,65,12,65,2,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,11,32,0,65,0,54,2,0,32,0,65,0,54,2,4,32,0,65,0,54,2,8,32,2,34,1,32,0,40,2,0,34,4,71,4,64,32,1,65,172,3,75,4,64,32,1,65,16,107,34,5,32,5,40,2,4,65,1,106,54,2,4,11,32,4,16,12,11,32,0,32,1,54,2,0,32,0,32,2,54,2,4,32,0,32,3,54,2,8,32,0,11,46,1,2,127,65,12,65,5,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,65,128,2,65,3,16,14,11,9,0,65,63,32,0,121,167,107,11,49,1,2,127,65,63,32,1,121,167,107,33,2,3,64,65,63,32,0,121,167,107,32,2,107,34,3,65,0,78,4,64,32,0,32,1,32,3,172,134,133,33,0,12,1,11,11,32,0,11,40,0,32,1,32,0,40,2,8,79,4,64,65,128,2,65,192,2,65,163,1,65,44,16,0,0,11,32,1,32,0,40,2,4,106,65,0,58,0,0,11,38,0,32,1,32,0,40,2,8,79,4,64,65,128,2,65,192,2,65,152,1,65,44,16,0,0,11,32,1,32,0,40,2,4,106,45,0,0,11,254,5,2,1,127,4,126,32,0,69,4,64,65,232,0,65,6,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,5,32,5,40,2,4,65,1,106,54,2,4,11,11,32,0,65,0,54,2,0,32,0,65,0,54,2,4,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,24,32,0,66,0,55,3,32,32,0,66,0,55,3,40,32,0,66,0,55,3,48,32,0,66,0,55,3,56,32,0,66,0,55,3,64,32,0,66,0,55,3,72,32,0,66,0,55,3,80,32,0,66,0,55,3,88,32,0,66,0,55,3,96,32,0,32,2,173,55,3,80,32,0,32,3,173,55,3,88,65,12,65,4,16,10,34,2,65,172,3,75,4,64,32,2,65,16,107,34,3,32,3,40,2,4,65,1,106,54,2,4,11,32,2,32,4,65,0,16,14,33,2,32,0,40,2,0,16,12,32,0,32,2,54,2,0,32,0,32,4,54,2,4,32,0,66,1,32,1,173,134,66,1,125,55,3,96,32,0,66,243,130,183,218,216,230,232,30,55,3,72,35,4,69,4,64,65,0,33,2,3,64,32,2,65,128,2,72,4,64,32,2,65,255,1,113,173,33,6,32,0,41,3,72,34,7,33,8,65,63,32,7,121,167,107,33,1,3,64,65,63,32,6,121,167,107,32,1,107,34,3,65,0,78,4,64,32,6,32,8,32,3,172,134,133,33,6,12,1,11,11,65,0,33,4,3,64,32,4,32,0,40,2,4,65,1,107,72,4,64,32,6,66,8,134,33,6,32,0,41,3,72,34,7,33,8,65,63,32,7,121,167,107,33,1,3,64,65,63,32,6,121,167,107,32,1,107,34,3,65,0,78,4,64,32,6,32,8,32,3,172,134,133,33,6,12,1,11,11,32,4,65,1,106,33,4,12,1,11,11,35,6,40,2,4,32,2,65,3,116,106,32,6,55,3,0,32,2,65,1,106,33,2,12,1,11,11,65,63,32,0,41,3,72,121,167,107,172,33,7,65,0,33,2,3,64,32,2,65,128,2,72,4,64,35,5,33,1,32,2,172,32,7,134,34,8,33,6,65,63,32,0,41,3,72,34,9,121,167,107,33,3,3,64,65,63,32,6,121,167,107,32,3,107,34,4,65,0,78,4,64,32,6,32,9,32,4,172,134,133,33,6,12,1,11,11,32,1,40,2,4,32,2,65,3,116,106,32,6,32,8,132,55,3,0,32,2,65,1,106,33,2,12,1,11,11,65,1,36,4,11,32,0,66,0,55,3,24,32,0,66,0,55,3,32,65,0,33,2,3,64,32,2,32,0,40,2,4,72,4,64,32,0,40,2,0,32,2,16,18,32,2,65,1,106,33,2,12,1,11,11,32,0,66,0,55,3,40,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,40,32,0,40,2,0,32,0,40,2,8,16,19,33,1,32,0,40,2,8,32,0,40,2,0,40,2,4,106,65,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,1,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,6,66,45,136,167,65,3,116,106,41,3,0,32,6,66,8,134,66,1,132,133,55,3,40,32,0,11,38,1,1,127,32,0,40,2,0,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,11,55,1,2,127,32,1,32,0,40,2,0,34,2,71,4,64,32,1,65,172,3,75,4,64,32,1,65,16,107,34,3,32,3,40,2,4,65,1,106,54,2,4,11,32,2,16,12,11,32,0,32,1,54,2,0,11,7,0,32,0,40,2,4,11,9,0,32,0,32,1,54,2,4,11,7,0,32,0,40,2,8,11,9,0,32,0,32,1,54,2,8,11,7,0,32,0,41,3,16,11,9,0,32,0,32,1,55,3,16,11,7,0,32,0,41,3,24,11,9,0,32,0,32,1,55,3,24,11,7,0,32,0,41,3,32,11,9,0,32,0,32,1,55,3,32,11,7,0,32,0,41,3,40,11,9,0,32,0,32,1,55,3,40,11,7,0,32,0,41,3,48,11,9,0,32,0,32,1,55,3,48,11,7,0,32,0,41,3,56,11,9,0,32,0,32,1,55,3,56,11,7,0,32,0,41,3,64,11,9,0,32,0,32,1,55,3,64,11,7,0,32,0,41,3,72,11,9,0,32,0,32,1,55,3,72,11,7,0,32,0,41,3,80,11,9,0,32,0,32,1,55,3,80,11,7,0,32,0,41,3,88,11,9,0,32,0,32,1,55,3,88,11,7,0,32,0,41,3,96,11,9,0,32,0,32,1,55,3,96,11,172,4,2,5,127,1,126,32,2,65,172,3,75,4,64,32,2,65,16,107,34,4,32,4,40,2,4,65,1,106,54,2,4,11,32,2,33,4,65,0,33,2,32,1,40,2,8,33,5,32,1,40,2,4,33,6,3,64,2,127,65,0,33,3,3,64,32,3,32,5,72,4,64,32,3,32,6,106,45,0,0,33,1,32,0,40,2,0,32,0,40,2,8,16,19,33,7,32,0,40,2,8,32,0,40,2,0,40,2,4,106,32,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,7,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,8,66,45,136,167,65,3,116,106,41,3,0,32,1,173,32,8,66,8,134,132,133,55,3,40,32,0,32,0,41,3,16,66,1,124,55,3,16,32,0,32,0,41,3,24,66,1,124,55,3,24,32,0,41,3,16,32,0,41,3,80,90,4,127,32,0,41,3,40,32,0,41,3,96,131,80,5,65,0,11,4,127,65,1,5,32,0,41,3,16,32,0,41,3,88,90,11,4,64,32,0,32,0,41,3,32,55,3,48,32,0,32,0,41,3,16,55,3,56,32,0,32,0,41,3,40,55,3,64,65,0,33,1,3,64,32,1,32,0,40,2,4,72,4,64,32,0,40,2,0,32,1,16,18,32,1,65,1,106,33,1,12,1,11,11,32,0,66,0,55,3,40,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,40,32,0,40,2,0,32,0,40,2,8,16,19,33,1,32,0,40,2,8,32,0,40,2,0,40,2,4,106,65,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,1,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,8,66,45,136,167,65,3,116,106,41,3,0,32,8,66,8,134,66,1,132,133,55,3,40,32,3,65,1,106,12,3,11,32,3,65,1,106,33,3,12,1,11,11,65,127,11,34,1,65,0,78,4,64,32,5,32,1,107,33,5,32,1,32,6,106,33,6,32,2,34,1,65,1,106,33,2,32,4,40,2,4,32,1,65,2,116,106,32,0,41,3,56,62,2,0,12,1,11,11,32,4,11,10,0,16,15,36,5,16,15,36,6,11,3,0,1,11,73,1,2,127,32,0,40,2,4,34,1,65,255,255,255,255,0,113,34,2,65,1,70,4,64,32,0,65,16,106,16,53,32,0,32,0,40,2,0,65,1,114,54,2,0,35,0,32,0,16,2,5,32,0,32,2,65,1,107,32,1,65,128,128,128,128,127,113,114,54,2,4,11,11,58,0,2,64,2,64,2,64,32,0,65,8,107,40,2,0,14,7,0,0,1,1,1,1,1,2,11,15,11,32,0,40,2,0,34,0,4,64,32,0,65,172,3,79,4,64,32,0,65,16,107,16,52,11,11,15,11,0,11,11,137,3,7,0,65,16,11,55,40,0,0,0,1,0,0,0,1,0,0,0,40,0,0,0,97,0,108,0,108,0,111,0,99,0,97,0,116,0,105,0,111,0,110,0,32,0,116,0,111,0,111,0,32,0,108,0,97,0,114,0,103,0,101,0,65,208,0,11,45,30,0,0,0,1,0,0,0,1,0,0,0,30,0,0,0,126,0,108,0,105,0,98,0,47,0,114,0,116,0,47,0,116,0,108,0,115,0,102,0,46,0,116,0,115,0,65,128,1,11,43,28,0,0,0,1,0,0,0,1,0,0,0,28,0,0,0,73,0,110,0,118,0,97,0,108,0,105,0,100,0,32,0,108,0,101,0,110,0,103,0,116,0,104,0,65,176,1,11,53,38,0,0,0,1,0,0,0,1,0,0,0,38,0,0,0,126,0,108,0,105,0,98,0,47,0,97,0,114,0,114,0,97,0,121,0,98,0,117,0,102,0,102,0,101,0,114,0,46,0,116,0,115,0,65,240,1,11,51,36,0,0,0,1,0,0,0,1,0,0,0,36,0,0,0,73,0,110,0,100,0,101,0,120,0,32,0,111,0,117,0,116,0,32,0,111,0,102,0,32,0,114,0,97,0,110,0,103,0,101,0,65,176,2,11,51,36,0,0,0,1,0,0,0,1,0,0,0,36,0,0,0,126,0,108,0,105,0,98,0,47,0,116,0,121,0,112,0,101,0,100,0,97,0,114,0,114,0,97,0,121,0,46,0,116,0,115,0,65,240,2,11,53,7,0,0,0,16,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,145,4,0,0,2,0,0,0,49,0,0,0,2,0,0,0,17,1,0,0,2,0,0,0,16,0,34,16,115,111,117,114,99,101,77,97,112,112,105,110,103,85,82,76,16,46,47,114,97,98,105,110,46,119,97,115,109,46,109,97,112])\n  // make it work async because browsers throw when a wasm module is bigger than 4kb and load sync\n  return instantiate(new Response(new Blob([wasm], {type: 'application/wasm'})), imp)\n}\nmodule.exports = loadWebAssembly\n","const Rabin = require('./rabin')\nconst getRabin = require('../dist/rabin-wasm.node.js')\n\nconst create = async (avg, min, max, windowSize, polynomial) => {\n    const compiled = await getRabin()\n    return new Rabin(compiled, avg, min, max, windowSize, polynomial)\n}\n\nmodule.exports = {\n    Rabin,\n    create\n}\n","import BufferList from 'bl/BufferList.js';\nimport { create } from 'rabin-wasm';\nimport errcode from 'err-code';\nasync function* rabinChunker(source, options) {\n  let min, max, avg;\n  if (options.minChunkSize && options.maxChunkSize && options.avgChunkSize) {\n    avg = options.avgChunkSize;\n    min = options.minChunkSize;\n    max = options.maxChunkSize;\n  } else if (!options.avgChunkSize) {\n    throw errcode(new Error('please specify an average chunk size'), 'ERR_INVALID_AVG_CHUNK_SIZE');\n  } else {\n    avg = options.avgChunkSize;\n    min = avg / 3;\n    max = avg + avg / 2;\n  }\n  if (min < 16) {\n    throw errcode(new Error('rabin min must be greater than 16'), 'ERR_INVALID_MIN_CHUNK_SIZE');\n  }\n  if (max < min) {\n    max = min;\n  }\n  if (avg < min) {\n    avg = min;\n  }\n  const sizepow = Math.floor(Math.log2(avg));\n  for await (const chunk of rabin(source, {\n      min: min,\n      max: max,\n      bits: sizepow,\n      window: options.window,\n      polynomial: options.polynomial\n    })) {\n    yield chunk;\n  }\n}\nexport default rabinChunker;\nasync function* rabin(source, options) {\n  const r = await create(options.bits, options.min, options.max, options.window);\n  const buffers = new BufferList();\n  for await (const chunk of source) {\n    buffers.append(chunk);\n    const sizes = r.fingerprint(chunk);\n    for (let i = 0; i < sizes.length; i++) {\n      const size = sizes[i];\n      const buf = buffers.slice(0, size);\n      buffers.consume(size);\n      yield buf;\n    }\n  }\n  if (buffers.length) {\n    yield buffers.slice(0);\n  }\n}","import BufferList from 'bl/BufferList.js';\nasync function* fixedSizeChunker(source, options) {\n  let bl = new BufferList();\n  let currentLength = 0;\n  let emitted = false;\n  const maxChunkSize = options.maxChunkSize;\n  for await (const buffer of source) {\n    bl.append(buffer);\n    currentLength += buffer.length;\n    while (currentLength >= maxChunkSize) {\n      yield bl.slice(0, maxChunkSize);\n      emitted = true;\n      if (maxChunkSize === bl.length) {\n        bl = new BufferList();\n        currentLength = 0;\n      } else {\n        const newBl = new BufferList();\n        newBl.append(bl.shallowSlice(maxChunkSize));\n        bl = newBl;\n        currentLength -= maxChunkSize;\n      }\n    }\n  }\n  if (!emitted || currentLength) {\n    yield bl.slice(0, currentLength);\n  }\n}\nexport default fixedSizeChunker;","import errCode from 'err-code';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nasync function* validateChunks(source) {\n  for await (const content of source) {\n    if (content.length === undefined) {\n      throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n    }\n    if (typeof content === 'string' || content instanceof String) {\n      yield uint8ArrayFromString(content.toString());\n    } else if (Array.isArray(content)) {\n      yield Uint8Array.from(content);\n    } else if (content instanceof Uint8Array) {\n      yield content;\n    } else {\n      throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n    }\n  }\n}\nexport default validateChunks;"],"names":["getIterator","iterable","next","Symbol","iterator","asyncIterator","TypeError","defer","reject","resolve","promise","Promise","resolveFunc","rejectFunc","_transform","concurrency","func","resultQueue","readQueue","ended","reading","inflightCount","lastError","fulfillReadQueue","length","shift","done","value","undefined","async","fillQueue","itrValue","push","error","mapAndQueue","asyncIterableIterator","deferred","transform","curriedFunc","curriedIterable","RetryOperation","timeouts","options","forever","this","_originalTimeouts","JSON","parse","stringify","_timeouts","_options","_maxRetryTime","maxRetryTime","Infinity","_fn","_errors","_attempts","_operationTimeout","_operationTimeoutCb","_timeout","_operationStart","_timer","_cachedTimeouts","slice","retry_operation","prototype","reset","stop","clearTimeout","retry","err","currentTime","Date","getTime","unshift","Error","timeout","splice","self","setTimeout","unref","attempt","fn","timeoutOps","cb","try","console","log","start","errors","attempts","mainError","counts","mainErrorCount","i","message","count","require$$0","exports","retries","Array","concat","opts","factor","minTimeout","maxTimeout","randomize","key","createTimeout","sort","a","b","random","Math","round","max","pow","min","obj","methods","method","original","op","operation","args","call","arguments","callback","pop","apply","bind","networkErrorMsgs","AbortError","constructor","super","originalError","stack","name","decorateErrorWithCounts","attemptNumber","retriesLeft","isNetworkError","errorMessage","includes","pRetry","input","onFailedAttempt","pRetryModule","last","source","res","entry","itLast","rawPipe","fns","isIterable","isDuplex","sink","duplexPipelineFn","duplex","pipe","itPipeModule","encode_1","encode","MSB","REST","MSBALL","INT","num","out","offset","Number","MAX_SAFE_INTEGER","bytes","RangeError","oldOffset","decode","read","buf","counter","l","N1","N2","N3","N4","N5","N6","N7","N8","N9","varint","require$$1","encodingLength","require$$2","MSB$1","REST$1","_brrp_varint","data","encodeTo","int","target","empty","Uint8Array","fromHex","hex","hexes","match","map","parseInt","equals","aa","bb","byteLength","ii","coerce","o","ArrayBuffer","isView","buffer","byteOffset","fromString","str","TextEncoder","toString","TextDecoder","create","code","digest","size","sizeOffset","varint.encodingLength","digestOffset","varint.encodeTo","set","Digest","multihash","varint.decode","subarray","equalBytes","base","ALPHABET","BASE_MAP","j","x","charAt","xc","charCodeAt","BASE","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","carry","it3","it4","vch","isArray","from","pbegin","pend","b58","it1","it2","repeat","string","src","_brrp__multiformats_scope_baseX","Encoder","prefix","baseEncode","Decoder","baseDecode","text","or","decoder","decoders","ComposedDecoder","other","Object","keys","Codec","encoder","baseX","alphabet","basex","bitsPerChar","codes","end","bits","written","SyntaxError","pad","mask","rfc4648","base58btc","base58flickr","base32","base32upper","base32pad","base32padupper","base32hex","base32hexupper","base32hexpad","base32hexpadupper","base32z","CID","version","asCID","_baseCache","Map","defineProperties","hidden","readonly","toV0","DAG_PB_CODE","SHA_256_CODE","createV0","toV1","Digest.create","createV1","Digest.equals","toStringV0","toStringV1","toJSON","hash","get","toStringTag","for","isCID","deprecate","IS_CID_DEPRECATION","cidSymbol","toBaseEncodedString","codec","multibaseName","encodeCID","Digest.decode","cid","remainder","decodeFirst","specs","inspectBytes","prefixSize","multihashSize","multihashBytes","digestBytes","digestSize","Digest.Digest","multihashCode","initialBytes","parseCIDtoBytes","cache","codeOffset","hashOffset","writable","configurable","enumerable","range","test","warn","typeofs","objectTypeNames","is","typeOf","isBuffer","objectType","getObjectType","objectTypeName","Type","major","terminal","majorEncoded","compare","typ","uint","negint","array","tag","float","false","true","null","break","Token","type","encodedLength","encodedBytes","useBuffer","globalThis","process","browser","Buffer","textDecoder","textEncoder","asU8A","utf8Slice","utf8ToBytes","fromArray","arr","chunks","c","off","alloc","allocUnsafe","b1","b2","units","codePoint","leadSurrogate","firstByte","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","len","String","fromCharCode","defaultChunkSize","Bl","chunkSize","cursor","maxCursor","_initReuseChunk","topChunk","chunkPos","toBytes","byts","chunk","decodeErrPrefix","encodeErrPrefix","assertEnoughData","pos","need","uintBoundaries","BigInt","readUint8","strict","readUint16","readUint32","readUint64","hi","lo","allowBigInt","decodeUint8","_minor","decodeUint16","decodeUint32","decodeUint64","encodeUint","token","encodeUintValue","nuint","buint","decodeNegint8","uint.readUint8","decodeNegint16","uint.readUint16","decodeNegint32","uint.readUint32","encodedSize","compareTokens","tok1","tok2","neg1b","pos1b","decodeNegint64","uint.readUint64","MIN_SAFE_INTEGER","encodeNegint","unsigned","uint.encodeUintValue","toToken","decodeBytesCompact","minor","decodeBytes8","decodeBytes16","decodeBytes32","decodeBytes64","tokenBytes","encodeBytes","compareBytes","totLength","decodeStringCompact","decodeString8","decodeString16","decodeString32","decodeString64","uint.uintBoundaries","encodeString","_data","_pos","decodeArrayCompact","decodeArray8","decodeArray16","decodeArray32","decodeArray64","decodeArrayIndefinite","allowIndefinite","encodeArray","decodeMapCompact","decodeMap8","decodeMap16","decodeMap32","decodeMap64","decodeMapIndefinite","encodeMap","decodeTagCompact","decodeTag8","decodeTag16","decodeTag32","decodeTag64","encodeTag","uint.encodeUint","MINOR_FALSE","MINOR_TRUE","MINOR_NULL","MINOR_UNDEFINED","decodeUndefined","allowUndefined","decodeBreak","createToken","allowNaN","isNaN","allowInfinity","decodeFloat16","readFloat16","decodeFloat32","readFloat32","decodeFloat64","readFloat64","encodeFloat","decoded","success","float64","encodeFloat16","ui8a","encodeFloat32","encodeFloat64","dataView","DataView","inp","setUint16","setFloat32","valu32","getUint32","exponent","mantissa","logicalExponent","half","NaN","exp","mant","val","getFloat32","setFloat64","getFloat64","invalidMinor","errorer","msg","jump","uint.decodeUint8","uint.decodeUint16","uint.decodeUint32","uint.decodeUint64","negint.decodeNegint8","negint.decodeNegint16","negint.decodeNegint32","negint.decodeNegint64","bytes.decodeBytesCompact","bytes.decodeBytes8","bytes.decodeBytes16","bytes.decodeBytes32","bytes.decodeBytes64","string.decodeStringCompact","string.decodeString8","string.decodeString16","string.decodeString32","string.decodeString64","array.decodeArrayCompact","array.decodeArray8","array.decodeArray16","array.decodeArray32","array.decodeArray64","array.decodeArrayIndefinite","map.decodeMapCompact","map.decodeMap8","map.decodeMap16","map.decodeMap32","map.decodeMap64","map.decodeMapIndefinite","tag.decodeTagCompact","tag.decodeTag8","tag.decodeTag16","tag.decodeTag32","tag.decodeTag64","float.decodeUndefined","float.decodeFloat16","float.decodeFloat32","float.decodeFloat64","float.decodeBreak","quick","quickEncodeToken","defaultEncodeOptions","mapSorter","cborEncoders","Ref","parent","p","createCheck","simpleTokens","emptyArray","emptyMap","typeEncoders","number","_typ","_refStack","isInteger","isSafeInteger","bigint","boolean","_obj","refStack","addBreakTokens","entries","e","objectToTokens","isMap","sortMapEntries","split","customTypeEncoder","tokens","typeEncoder","e1","e2","keyToken1","keyToken2","tcmp","tokensToEncoded","encoders","encodeCustom","quickBytes","assign","defaultDecodeOptions","Tokeniser","byt","padStart","DONE","BREAK","tokenToArray","tokeniser","tokensToObject","tokenToMap","useMaps","m","tags","tagged","tokenizer","CID_CBOR_TAG","cidEncoder","cborg.Token","cborg.Type","undefinedEncoder","numberEncoder","encodeOptions","cidDecoder","decodeOptions","node","cborg.encode","cborg.decode","CIDV0_BYTES","SHA2_256","LENGTH","DAG_PB","readVarint","reader","upTo","seek","readHeader","header","exactly","block","decodeDagCbor","roots","filter","readMultihash","codeLength","mhLength","readCid","first","readBlockHead","blockLength","readBlock","readBlockIndex","index","blockOffset","createDecoder","headerPromise","blocks","blocksIndex","bytesReader","chunkReader","readChunk","have","currentChunk","bufa","reduce","asyncIterableReader","asyncIterable","CarReader","_version","_roots","_blocks","_keys","getRoots","has","indexOf","cids","fromBytes","decodeReaderComplete","fromIterable","CarIteratorBase","_iterable","_decoded","CarBlockIterator","decodeIterator","createHeader","headerBytes","dagCborEncode","varintBytes","createEncoder","writer","setRoots","write","writeBlock","close","noop","chunkQueue","drainer","drainerResolver","outWait","outWaitResolver","makeDrainer","CarWriter","_encoder","_mutex","_ended","put","then","toRoots","encodeWriter","CarWriterOut","createAppender","updateRootsInBytes","newHeader","_iterator","_iterating","iw","iteratorChannel","root","_root","batch","things","thing","itBatch","parallelBatch","tasks","ok","result","itParallelBatch","isPlainObj","getPrototypeOf","isOptionObject","hasOwnProperty","propertyIsEnumerable","defineProperty","object","defaultMergeOptions","concatArrays","ignoreUndefined","getEnumerableOwnPropertyKeys","getOwnPropertySymbols","symbols","symbol","clone","cloneArray","cloneOptionObject","forEach","mergeKeys","merged","config","merge","resultIndex","indices","k","mergeOptions","_","option","Hasher","sha","crypto","subtle","sha256","library","x86","x64","inputValidation","_validBytes","_x86Multiply","n","_x86Rotl","_x86Fmix","h","_x64Add","_x64Multiply","_x64Rotl","_x64LeftShift","_x64Xor","_x64Fmix","hash32","seed","h1","k1","c1","c2","hash128","h2","h3","h4","k2","k3","k4","c3","c4","module","murmurhash3jsRevisited","fromNumberTo32BitBuf","mur","murmur3128","bytes.fromHex","hamtHashFn","reverse","defaultOptions","chunker","strategy","rawLeaves","onlyHash","reduceSingleLeafToSelf","hasher","leafType","cidVersion","progress","shardSplitThreshold","fileImportConcurrency","blockWriteConcurrency","minChunkSize","maxChunkSize","avgChunkSize","window","polynomial","maxChildrenPerNode","layerRepeat","wrapWithDirectory","recursive","hamtHashCode","hamtBucketBits","importer","blockstore","dagBuilder","treeBuilder","candidates","default","path","unixfs","props","createError","ErrClass","errCode","identity","base2","base8","base10","base16","base16upper","base36","base36upper","base64","base64pad","base64url","base64urlpad","raw","bases","identityBase","base58","createCodec","substring","ascii","BASES","utf8","latin1","binary","encoding","browserReadableStreamToIt","stream","getReader","preventCancel","cancel","releaseLock","browserReadablestreamToIt","blobToIt","blob","Response","body","blobToIt_1","peekableIterator","queue","peek","itPeekable","all","itAll","itMap","isBytes","isBlob","isFileObject","content","isReadableStream","utils","uint8ArrayFromString","browserStreamToIt","require$$3","require$$4","require$$5","require$$6","require$$7","toAsyncIterable","peekable","normaliseContent","aspromise","asPromise","ctx","params","pending","ceil","b64","s64","t","parts","join","invalidEncoding","eventemitter","EventEmitter","_listeners","on","evt","listeners","emit","factory","Float32Array","f32","f8b","le","writeFloat_f32_cpy","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","floor","LN2","readFloat_ieee754","readUint","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","inquire_1","inquire","moduleName","mod","eval","replace","pool_1","pool","SIZE","MAX","slab","longbits","LongBits","util","zero","toNumber","zzEncode","zzDecode","zeroHash","fromNumber","isString","Long","low","high","toLong","Boolean","fromHash","toHash","part0","part1","part2","dst","ifNotSet","newError","CustomError","properties","captureStackTrace","isNode","global","versions","freeze","emptyObject","isFinite","isObject","isset","isSet","prop","utf8Write","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","fromBits","lcFirst","toLowerCase","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","json","_configure","Writer","BufferWriter","Op","State","head","tail","states","writeByte","writeVarint32","VarintOp","writeVarint64","writeFixed32","_push","uint32","int32","sint32","uint64","int64","sint64","bool","fixed32","sfixed32","fixed64","sfixed64","double","writeBytes","fork","ldelim","finish","BufferWriter_","writer_buffer","writeStringBuffer","writeBytesBuffer","copy","Reader","BufferReader","indexOutOfRange","writeLength","create_array","readLongVarint","readFixed32_end","readFixed64","_slice","skip","skipType","wireType","BufferReader_","reader_buffer","service","Service","rpcImpl","requestDelimited","responseDelimited","rpcCall","requestCtor","responseCtor","request","response","endedByRPC","protobuf","configure","build","rpc","minimal","$Reader","$protobuf","$Writer","$util","$root","Data","blocksizes","ks","filesize","hashType","fanout","mode","mtime","w","UnixTime","r","instance","fromObject","d","fromValue","toObject","arrays","defaults","DataType","valuesById","values","Seconds","FractionalNanoseconds","Metadata","MimeType","PBData","Pb.Data","types","dirTypes","DEFAULT_FILE_MODE","DEFAULT_DIRECTORY_MODE","parseMode","parseMtime","secs","nsecs","ms","errcode","UnixFS","unmarshal","marshaled","objects","blockSizes","_originalMode","_mode","isDirectory","parsedMode","addBlockSize","removeBlockSize","fileSize","sum","marshal","Raw","Directory","File","Symlink","HAMTShard","parsed","pbData","normaliseInput","toFileObject","file","normalise","normaliseInput_1","drain","itDrain","itFilter","take","limit","items","itTake","sortAll","sorter","BlockstoreAdapter","open","delete","putMany","getMany","deleteMany","puts","dels","commit","_all","q","_allKeys","query","it","startsWith","filters","f","orders","queryKeys","adapter","notFoundError","Adapter","Errors","MemoryBlockstore","memory","MemoryBlockStore","store","cidStr","clear","unixfsImporterOptionsDefault","pack","userBlockstore","rootEntry","carOut","carOutIter","writingPromise","writeAll","immutable","extend","qs","url","xtend","hasRel","rel","intoRels","acc","createObjects","parseLink","link","linkUrl","parsedUrl","qry","info","parseLinkHeader","linkHeader","decodeVarint","v","decodeBytes","byteLen","postOffset","decodeKey","wire","decodeLink","fieldNum","Hash","Name","Tsize","decodeNode","links","linksBeforeData","Links","maxInt32","maxUInt32","encodeLink","encodeVarint","nameBytes","encodeNode","sizeNode","sizeLink","sov","len64","len8tab","pbNodeProperties","pbLinkProperties","linkComparator","abuf","bbuf","y","hasOnlyProperties","some","asLink","pbl","prepare","pbn","validate","createNode","createLink","BITS_PER_BYTE","sparseArray","_bitArrays","_length","_changedLength","_changedData","_internalPositionFor","_unsetInternalPos","_unsetBit","needsSort","_setBit","_setInternalPos","unset","_sortData","mapped","reducer","initialValue","find","finder","found","noCreate","bytePos","_bytePosFor","byte","bitPos","popCountReduce","popCount","targetLength","elem","randomIndex","sortInternal","bitField","newByte","pendingBitsForResultingByte","pendingBitsForNewByte","resultingByte","usingBits","compactArray","valueOnly","_v","SparseArray","Bucket","posAtParent","_popCount","_parent","_posAtParent","_children","place","_findNewBucketAndPos","bucket","_putAt","child","_findChild","del","_findPlace","_at","_delAt","leafCount","childrenCount","onlyChild","eachLeafSeries","children","serialize","asyncTransform","asyncMap","asyncReduce","asyncTransformBucket","mapNode","reduceNodes","prettyPrint","tableSize","hashValue","existingChild","_putObjectAt","newPlace","_level","exists","untake","nodes","output","mappedChildren","START_MASKS","STOP_MASKS","consumableBuffer","_value","_currentBytePos","_currentBitPos","availableBits","totalBits","pendingBits","_haveBits","taking","byteBitsToInt","maskFor","curr","ConsumableBuffer","uint8ArrayConcat","wrapHash","hashFn","InfiniteHash","_hashFn","_depth","_availableBits","_currentBufferIndex","_buffers","_produceMoreBits","available","availableForUntake","consumableHashModule","createHAMT","bucketOptions","addLinksToHamtBucket","rootBucket","toPrefix","position","toUpperCase","toBucketPath","findShardCid","context","hamtDepth","lastBucket","bucketPath","entryPrefix","entryName","extractDataFromBlock","blockStart","requestedStart","requestedEnd","blockEnd","validateOffsetAndLength","emitBytes","streamPosition","childStart","childLink","childEnd","signal","dagPb.code","dagPb.decode","raw.code","dagCbor.code","dagCbor.decode","fileContent","depth","directoryContent","hamtShardedDirectoryContent","listDirectory","findLinkCid","contentExporters","contentFile","directory","contentDirectory","contentHamtShardedDirectory","metadata","symlink","unixFsResolver","toResolve","linkCid","nextName","rawContent","subObject","subPath","subObjectCid","mh.decode","resolvers","dagPbResolver","code$1","rawResolver","code$2","dagCborResolver","identifyResolver","resolver","toPathComponents","trim","cidAndRest","walkPath","entryPath","startingDepth","exporter","recurse","VerifyingGetOnlyBlockStore","isValid","fromBlockstore","fromCarReader","cr","unpackStream","readable","carIterator","asAsyncIterable","verifyingBlockStore","unixFsExporter","toIterable","element","elementPath","tree","part","remaining","Block","asBlock","TreewalkCarSplitter","targetSize","_reader","_targetSize","_decoders","pb","cbor","cars","channel","_cars","_get","rawBlock","parents","newCar","fromBlob","arrayBuffer","ch","getFilesFromPath","filesFromPath","fetch","Blob","Blockstore","MAX_PUT_RETRIES","MAX_CONCURRENT_UPLOADS","MAX_CHUNK_SIZE","Web3Storage","endpoint","URL","headers","Authorization","files","onRootCidReady","onStoredChunk","maxRetries","car","putCar","carRoot","splitter","upload","carParts","carFile","toWeb3Response","status","statusText","list","before","toISOString","maxResults","paginator","search","URLSearchParams","page","toWeb3File","toFilenameWithPath","unixFsPath","slashIndex","unixFsIterator","persist","dagPb","dirBuilder","item","flat","balanced","reduceToParents","chunked","trickleStream","Root","iteration","maxDepth","subTree","layer","isFull","addChild","SubTree","append","currentDepth","maxChildren","_addNextNodeToParent","distantRelative","_findParent","nextNode","_reduce","dagBuilders","dagFlat","dagBalanced","trickle","dagTrickle","buildFileBatch","previous","bufferImporter","single","leaves","leaf","rawCodec.code","fileBuilder","isAsyncIterable","contentAsAsyncIterable","chunkValidator","dir","Dir","dirty","parentKey","eachChildSeries","flush","DirFlat","childCount","directChildrenCount","DirSharded","_bucket","shardRoot","childrenSize","labelPrefix","shard","subShard","flushedDir","label","flatToShard","threshold","newDir","convertToShard","oldDir","addToTree","pathElems","lastIndex","currentPath","pathElem","flushAndYield","unwrapped","dagPb.encode","BufferList","_init","_bufs","_new","_offset","tot","_t","_reverseOffset","blOffset","bufferId","dstStart","srcStart","srcEnd","bufoff","shallowSlice","startOffset","endOffset","buffers","consume","trunc","duplicate","_appendBuffer","_isBufferList","blIndex","buffOffset","buff","nativeSearchResult","revOffset","_match","searchOffset","readInt32BE","readInt32LE","readUInt32BE","readUInt32LE","readInt16BE","readInt16LE","readUInt16BE","readUInt16LE","readInt8","readUInt8","readIntBE","readIntLE","readUIntBE","readUIntLE","isBufferList","BufferList_1","Rabin","asModule","windowSize","rabin","fingerprint","__retain","__release","__allocArray","__getInt32Array","Int32Array_ID","Uint8Array_ID","lengthsPtr","Int32Array","pointer","processed","ID_OFFSET","SIZE_OFFSET","ARRAYBUFFER_ID","STRING_ID","ARRAYBUFFERVIEW","ARRAY","VAL_ALIGN_OFFSET","VAL_SIGNED","VAL_FLOAT","VAL_MANAGED","ARRAYBUFFERVIEW_BUFFER_OFFSET","ARRAYBUFFERVIEW_DATASTART_OFFSET","ARRAYBUFFERVIEW_DATALENGTH_OFFSET","ARRAYBUFFERVIEW_SIZE","ARRAY_LENGTH_OFFSET","ARRAY_SIZE","BIGINT","BigUint64Array","THIS","CHUNKSIZE","getStringImpl","ptr","U32","Uint32Array","U16","Uint16Array","preInstantiate","imports","baseModule","getString","env","abort","mesg","line","colm","trace","postInstantiate","rawExports","table","retain","rttiBase","getInfo","id","getBase","getValueAlign","clz32","getView","alignLog2","signed","Int8Array","Int16Array","BigInt64Array","__getArrayView","align","getTypedArray","getTypedArrayView","bufPtr","__allocString","__getString","view","__getArray","__getArrayBuffer","__getInt8Array","__getInt8ArrayView","__getUint8Array","__getUint8ArrayView","__getUint8ClampedArray","Uint8ClampedArray","__getUint8ClampedArrayView","__getInt16Array","__getInt16ArrayView","__getUint16Array","__getUint16ArrayView","__getInt32ArrayView","__getUint32Array","__getUint32ArrayView","__getInt64Array","__getInt64ArrayView","__getUint64Array","__getUint64ArrayView","__getFloat32Array","__getFloat32ArrayView","__getFloat64Array","__getFloat64ArrayView","__instanceof","baseId","demangle","isResponse","instantiate","instantiateStreaming","WebAssembly","Module","compile","instantiateSync","Instance","setArgumentsLength","internalName","className","classElem","ctor","wrap","valueOf","thisValue","getOwnPropertyNames","getOwnPropertyDescriptor","getter","setter","loadWebAssembly","imp","supported","wasm","rabinWasm","getRabin","avg","compiled","rabinChunker","sizepow","log2","sizes","fixedSizeChunker","bl","currentLength","emitted","newBl","validateChunks"],"mappings":"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"}